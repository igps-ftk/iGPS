#!/bin/bash

# Name:
#   sh_s1_unzip_manifest
#

# Purpose:
#

# Example:
#

# Modifications:
#

# Algorithm:
#

# Dependency:
#
PROG=sh_s1_unzip_manifest

path_old=`pwd`

usage_of_it(){
cat <<eob
${PROG}
|_Extract *.manifest.safe files from Sentinel-1 SLC *.zip file.
|<
  [-p|-path INPUT_SLC_PATH]
    default: current
  [-o|-opath OUTPUT_PATH]
    default: current
|>
  OUTPUT_PATH/S1*.manifest.safe
|e.g.,
  $PROG  -p /sar/s1 -o /sar/manifest.safe/
(c)iGPS (https://github.com/igps-ftk/)
eob
}


#if not called by crontab
if [ -t 0 ]; then
  interactive=1
  
  path=`pwd`
  opath=`pwd`
  
else
  interactive=0
  . ${HOME}/.bashrc
  if [ "$esa_data" = "" ]; then
      echo -e "[$PROG]\033[1;33;41mERROR\033[0m: ESA environment variable esa_data must be set first! Stopped."
      exit 1
  fi
  if [ ! -d $esa_data ]; then
    echo -e "[$PROG]\033[1;33;41mERROR\033[0m: esa_data ($esa_data) not exist!!"
    exit 1
  fi
  
  path="${esa_data}/s1"
  opath=${esa_data}/safe/S1
  opath=${esa_data}/metainfo/manifest.safe
fi


while [ "$1" != "" ]; do
  case $1 in
    -p|-path)
      path=$2
      ;;
    -o|-opath)
      opath=$2
      ;;
    -h|-help|--help)
      usage_of_it
      exit 1
      ;;
    *)
      echo -e "[$PROG]\033[1;33;41mERROR\033[0m: invalid option ($1)!!"
      usage_of_it
      exit 1
      ;;
  esac
  shift 2  
done

echo "[${PROG}]INFO: input path: ${path}"
echo "[${PROG}]INFO: out path: ${opath}"
#exit

mkdir -p $opath

files=`find "$path" -maxdepth 1 -name "S1*.zip" | sort`
np=0
for file in $files; do
    #echo $file
    ofile="${opath}/`basename ${file} | sed -e 's/.zip//g'`.manifest.safe"
    #echo $ofile
    if [ -s "${opath}/`basename $ofile`" ]; then
        #echo "Skip    ${ofile} !"
        continue
    fi
    echo "[${PROG}]INFO: extracting $ofile"
    #continue
    unzip -p "$file" "*manifest.safe" > "$ofile"
    
    if [ ! -s "$ofile" ]; then
      echo "[${PROG}]WARNING: zero size output file! Deleted."
      \rm -f "$ofile"
      continue
    fi

    #exit
    np=`expr $np + 1`
done
echo "[${PROG}]INFO: # ${np} manifest.safe files added."
echo "[$PROG]INFO: done."