#!/bin/sh

#gg installation directory
path_gg=/usr/local/gamit
path_gg=${HOME}/gg
cd $path_gg
path_gg=`pwd`
arch="`uname -s`_`uname -i`"
sys=`uname`
if [ "$sys" = "SunOS" ]; then
    arch="${arch}_`isainfo -b`"
#elif [ "$sys" = "Linux" ]; then
#    arch="${arch}_`uname -p`"    
fi
#echo $arch
#exit
if [ $# -ge 1 ]; then
    path_gg=$1
fi

path_lib=~/gglib
path_lib=${HOME}/gglib
if [ ! -d ${path_lib} ]; then
    mkdir -p ${path_lib}
fi
file_lib=/home/tianyf/gglib/gglib.a.${arch}
file_lib=${path_lib}/gglib.a.${arch}
#file_lib
if [ $# -ge 2 ]; then
    file_lib=$2/gglib.a.${arch}
fi

#find gg library files
#echo find -L $path_gg -name "*.a"
files=`find $path_gg -name "*.a"`
#files=
if [ "$files" = "" ]; then
    echo "Error: no library files could be found in $path_gg. Please check your ~/gg link, and try again. In some OS, arlib cannot work right with symbolic links. In this case, try:"
    echo "    arlib GAMIT_PATH"
    echo "E.g.,"
    echo "    arlib /usr/local/gamit"
    echo "For more information, please see arlib man page (1)."
    exit 1
fi

#create a temporary directory
path_tmp=`pwd`/.tmp
mkdir -p $path_tmp
cd $path_tmp

#unpack each library file *.a
for file in $files 
do
	echo $file
	ar x $file
done

#delete preread_cf.o (which proved to cause errors when compile gpsf source code)
\rm -f preread_cf.o
#delete existing lib file
\rm -f  ${file_lib}

ar rv ${file_lib} *.o
ranlib ${file_lib}
cd ..
#pwd
\rm -rf ${path_tmp}
echo "OK"

#Deleted:
#	preread_cf.o

