#!/bin/sh

# Name:
#   sh_sar_plot_vel_profile
#   

# Purpose:
#   

# Example:
#   

# Modifications:
#   

# Algorigthm:
#   

# Dependency:
#   

PROG=sh_sar_plot_vel_profile

if [ "$GMT_pub" = "" ]; then
    echo "[$PROG]ERROR:GMT_pub variable not set!!"
    exit 1
fi

#(1)
echo "[$PROG]INFO: (1) change the DEM path if necessary"
path_dem=${GMT_pub}/dem.gmt/ETOPO1_Ice_g_gmt4

#(2)
echo "[$PROG]INFO: (2) the profile files directory (profile_???_vel.psxy files generated by iGPS)"
profiles_path=`pwd`/p #DO NOT add "/" at the end of the path!!

#plot all profiles
pis=0

#default output path
opath=`pwd`/pp

while [ "$1" != "" ]; do
    case $1 in
    -path)
        if [ ! -d $2 ]; then
        echo "[$PROG]ERROR: input directory not exist ($2) !!"
        exit 1
        fi
        oldpath=`pwd`
        cd $2
        profiles_path=`pwd`
        cd $oldpath
        ;;
    -opath)
        if [ ! -d $2 ]; then
        echo "[$PROG]INFO: output directory not exist ($2) ! Created."
        mkdir -p $2
        #exit 1
        fi
        oldpath=`pwd`
        cd $2
        opath=`pwd`
        cd $oldpath
        ;;
    -profile)
        pis=`echo $2 | sed -e 's/,/ /g'`
        ;;
    *)
        echo "[$PROG]ERROR: invalid option ($1)!!"
        exit 1
        ;;
    esac
    
    shift 2
done

if [ ! -d $profiles_path ]; then
    echo "[$PROG]ERROR: profile path not exist ($profiles_path)!!"
    exit 1
fi

#InSAR rate map file
grdfile=../vel_ll.grd
grdfile=../vel_mask_ll.grd
grdfile=${profiles_path}/../vel_mask_ll.grd
    
#(3)
echo "(3) set the plot range for location map"
#X_MAX=92
#Y_MAX=40.5
#X_MIN=87
#Y_MIN=35.5   
#get map range from the insar rate map
xmin=`gmt grdinfo -C -I.5 $grdfile | awk '{print $2}'`
xmax=`gmt grdinfo -C -I.5 $grdfile | awk '{print $3}'`
ymin=`gmt grdinfo -C -I.5 $grdfile | awk '{print $4}'`
ymax=`gmt grdinfo -C -I.5 $grdfile | awk '{print $5}'`

echo "[$PROG]INFO: output to $opath"
##mkdir -p $opath
cd $opath
#exit



X_MAX=`echo $xmax | awk '{print $1+.1}'`
Y_MAX=`echo $ymax | awk '{print $1+.1}'`
X_MIN=`echo $xmin | awk '{print $1-1.5}'`
Y_MIN=`echo $ymin | awk '{print $1-.1}'`

X_MAX=`echo $X_MIN $X_MAX | awk '{print $1+6}'`
Y_MAX=`echo $Y_MIN | awk '{print $1+5}'`


R=-R${X_MIN}/${X_MAX}/${Y_MIN}/${Y_MAX}
echo "[$PROG]INFO: range of location map is $R"
B=-B1f1g2/1f1g2
#exit

echo "count number of profile files"
if [ "$pis" == "0" ]; then
    np=`ls ${profiles_path}/profile_???_vel.psxy | wc -l`
    pis=`ls ${profiles_path}/profile_???_vel.psxy |awk -F\/ '{print substr($NF,9,3)}'`
else
    np=`echo $pis | awk '{print NF}'`
fi
echo "[$PROG]INFO: $np plots to plot: $pis"

#pis=51
#exit


echo "[$PROG]INFO: create colormap for InSAR LOS rate map"
colortable=no_green
gmt makecpt -C${colortable} -T-10/10/.001 -Z -I > my.cpt

echo "[$PROG]INFO: create colormap for DEM"
#dem colormap
colortable=rainbow
colortable=
#colortable=seafloor
colortable=globe
#colortable=gebco
#colortable=etopo1
#colortable=dem3
colortable=gray
#colortable=relief
#colortable=cyclic
#colortable=panoply
#colortable=sealand
#colortable=topo
gmt makecpt -C${colortable} -T-5500/1800/5 -Z > mytopo.cpt
#for global overview map
gmt makecpt -C${colortable} -T-7000/7800/10 -Z > mytopo2.cpt

#for overview map
Ro="-R70/115/20/50"
#Ro=-R85/92/29/34
Jo=-JL-130/40/35/60/3i
Jo=-JPoly/85/35/2i
Jo=-JQ1.2i
dem_file_overview=${GMT_pub}/dem.gmt/ETOPO1_Ice_g_gmt4_3min/ETOPO1_Ice_g_gmt4_3min.grd
dem_file_overview=${GMT_pub}/dem.gmt/ETOPO1_Ice_g_gmt4/ETOPO1_Ice_g_gmt4.grd
dem_file_overview=${GMT_pub}/dem.gmt/envi.dem.min/envi.grd


echo "[$PROG]INFO: loop for each profile ..."
for n in $pis; do

    gmt gmtset PS_MEDIA = a0
    gmt gmtset FONT_TITLE = 18p
    gmt gmtset FONT_LABEL         = 12p
    gmt gmtset FONT_ANNOT_PRIMARY = 9p
    gmt gmtset MAP_FRAME_PEN               = .5p
    gmt gmtset MAP_FRAME_WIDTH             = 0.1c
    gmt gmtset MAP_TICK_LENGTH = .1c
    gmt gmtset MAP_TITLE_OFFSET = .1051c
    ##gmt gmtset ANNOT_FONT_SIZE_PRIMARY = 11p
    ##gmt gmtset HEADER_FONT_SIZE        = 16p
    ##gmt gmtset LABEL_FONT_SIZE         = 14p
    ##gmt gmtset PAPER_MEDIA             = a0
    ##gmt gmtset LABEL_OFFSET            = 0.2c
    gmt gmtset MAP_FRAME_TYPE                  = plain 

    n=`echo $n | awk '{printf("%03d",$1)}'`
    
    ofile=vel_profile_${n}.ps
    echo "[$PROG]INFO: output to $ofile"
    
    #first, plot DEM on the location map
    files_dem=`find $path_dem -name "*.grd"`
    fir=1
    for file_dem in $files_dem; do
    tfile=`basename $file_dem`-${fir}
    if [ ! -s $tfile ]; then
        gmt grdclip $file_dem  -G${tfile} $R -Sb-9999/NaN #
        gmt grdgradient $tfile -A50  -Ne.316 -Gshaded.grd
    fi
    if [ $fir -eq 1 ]; then
        zmin=`gmt grdinfo -C $tfile | awk '{print $6-3000}'`
        zmax=`gmt grdinfo -C $tfile | awk '{print $7+10}'`
        echo "gmt makecpt -C${colortable} -T${zmin}/${zmax}/1 -Z"
        gmt makecpt -C${colortable} -T${zmin}/${zmax}/1 -Z > mytopo3.cpt
        gmt grdimage $file_dem -Cmytopo3.cpt $R -JQ7i -Y7i -Ishaded.grd    ${B}:"":/10f5:""::."(a). Overview Map":WSEN -K -P   > ${ofile}
        fir=0
    else
        gmt grdimage $file_dem -Cmytopo.cpt -R -J    -K -O >> ${ofile}
    fi
    done
    
    echo "[$PROG]INFO: adding bounaries to the location map"
    gmt pscoast  -R -Dh -N1 -J -Swhite -Wwhite   -K -O  >> ${ofile}
    
    #(4) 
    echo "[$PROG]INFO: (4) adding insar los rate image to the location map"
    gmt grdimage  -R -Cmy.cpt -J -O -K $grdfile -Q >> $ofile
    
    echo "[$PROG]INFO: adding earthquake"
    #earthquakes
    file=../quakes.in.China/global.cmt.catalog.mw6.psmeca.asof.2007212
    file=../quakes.in.China/global.cmt.catalog.mw5.psmeca
    file=${GMT_pub}/quake/gcmt/tibet.M6+.psmeca
    #file=${GMT_pub}/quake/gcmt/tianshan.psmeca
    grep -v '^ ' $file  | sed '/^$/d' > .tmp.gcmt
    gmt psmeca -R -J .tmp.gcmt -Sm.33/-1 -W -Gdarkgray -O -K >> $ofile
    
    #micro-seismicity                                      
    file=/cygdrive/d/ICD/projects/nsfc/2011/annual.report.2
    file=${GMT_pub}/quake/xqc/pre-1970.txt
    cat $file | awk '{print $1,$2,$3*.1}' > .tmp       
    file=${GMT_pub}/quake/xqc/post-1970.txt
    cat $file | awk '{print $1,$2,$3*.1}' >> .tmp             
    #gmt psxy -R -J -h1 -O -K .tmp -Sc -W.35p,purple >> $ofile  
    
    echo "[$PROG]INFO: adding fault lines"
    #file=./fault/fault_gmt psxy.txt
    #gmt psxy -R -J -O -K -W.5p,blue -m $file >> $ofile
    #file=./tibet-fault.txt
    file=../../faultline/mtab.mif.shp/yarlung-fixed.psxy
    #gmt psxy -R -J -O -K -W.5p,black -Sf1i/.25+r+s+o.5i -m $file >> $ofile
    
    echo "[$PROG]INFO: dextral faults"
    file=${GMT_pub}/vector/HimaTibetMap-1.0/GMT/HimaTibetMap-1.0_gmt/dextral_faults.gmt
    gmt psxy -R -J -O -Sf1i/.25+r+s+o.5i -W.5p,red -K  $file >> $ofile
    echo "[$PROG]INFO: sinistral faults"
    file=${GMT_pub}/vector/HimaTibetMap-1.0/GMT/HimaTibetMap-1.0_gmt/sinistral_faults.gmt
    gmt psxy -R -J -O -Sf2i/.25+l+s+o.5i -W.5p,red -K  $file >> $ofile
    echo "[$PROG]INFO: normal faults"
    file=${GMT_pub}/vector/HimaTibetMap-1.0/GMT/HimaTibetMap-1.0_gmt/normal_faults.gmt
    #gmt psxy -R -J -O -W.5p,black,- -K  $file >> $ofile
    gmt psxy -R -J -O -K -Sf.51/.0512+l+t -Gred -Wthin,red $file >> $ofile
    
    #file=../gmt.plot/.tmp
    #cat $file | awk '{print $2,$3,$6,$10,$7,$11,$12,substr($1,1,4)}' > .tmp
    
    echo "[$PROG]INFO: adding gps velocity map"
    file=/cygdrive/d/gpse/rerun.lutai/comb/trnsLTCM/gsoln/qmap.tseri.rotinv/vel.lhasa.2015oct
    file=${GMT_pub}/gps/vel.lhasa.2016jul
    #file=../../tibet.velrot/vel.tibet_cgps_sgps
    #*Station   Longitude   Latitude Ve_init Ve_incr    Ve     dVe   Vn_init Vn_incr    Vn     dVn   Cen
    # AIRA_GPS  130.5996   31.8241   -19.3    15.5   -34.8     0.2    23.2    27.6    -4.4     0.0
    ##grep "^ " $file | awk '{print $2,$3,$6,$10,$7,$7,0.0,tolower(substr($1,1,4))}' > .tmp.gps
    grep "^ " $file | awk '{if($11<2&&$7<2){print $2,$3,$6,$10,$7,$11,$12,tolower(substr($1,1,4))}}' > .tmp.gps
    
    #file=${GMT_pub}/gps/Supp_Table_S1.psvelo
    #cat $file > .tmp.gps
    
    #file=${GMT_pub}/gps/velo.psvelo
    #cat $file > .tmp.gps
    
    #   113.21    40.79 2.99667 -1.09333 0.13 0.17 A006
    #file=${GMT_pub}/gps/pingjun.vel
    #cat $file | awk '{print $1,$2,$3,$4,$5,$6,0,$7}' > .tmp.gps
    
    
    #file=${GMT_pub}/gps/wang.min.jgr2020/Table.S4
    #grep '^ ' $file | awk '{print $2,$3,$5,$8,$6,$9,$10,$1}' > .tmp.gps


    gmt psxy -R -J -Sc0.12c -W.5p -Gwhite .tmp.gps -O -K -h1 >> $ofile
    gmt psvelo -R -J -W0.35p,navy -Glightblue -Se.1/0.95/0   -L -A6p+e -V .tmp.gps -O -K>> $ofile
    
    
x1=`echo $X_MIN $X_MAX | awk '{print $1+1*($2-$1)/60.}'`
x2=`echo $X_MIN $X_MAX | awk '{print $1+1*($2-$1)/60.+1}'`
x3=`echo $X_MIN $X_MAX | awk '{print $1+1*($2-$1)/60.+.4}'`
y1=`echo $Y_MIN $Y_MAX | awk '{print $1+00*.3+1}'`
y2=`echo $Y_MIN $Y_MAX | awk '{print $1+01*.3+1}'`
y3=`echo $Y_MIN $Y_MAX | awk '{print $1+02*.3+1}'`
y4=`echo $Y_MIN $Y_MAX | awk '{print $1+03*.3+1}'`
y5=`echo $Y_MIN $Y_MAX | awk '{print $1+04*.3+1}'`
y6=`echo $Y_MIN $Y_MAX | awk '{print $1+05*.3+1}'`
y7=`echo $Y_MIN $Y_MAX | awk '{print $1+06*.3+1}'`
y8=`echo $Y_MIN $Y_MAX | awk '{print $1+07*.3+1}'`
y9=`echo $Y_MIN $Y_MAX | awk '{print $1+08*.3+1}'`
#echo x y are $x1 $y1 $y2 $y3 $y4 $y5 $y6

gmt psxy -R -J -L -O -K <<eob -Glightgray@50 -W.25p,lightgray >> $ofile
$X_MIN $Y_MIN
$x2 $Y_MIN
$x2 $y9
$X_MIN $y9
eob

gmt psvelo <<eob -R -J -N -W0.5p,purple -Gpurple   -Se.1/0.95/0  -L -A6p+e  -V -O -K >> $ofile
$x1 $y1 10 0 0 0 0 
eob
gmt pstext <<eob -R -J -D1.c/0 -F+f7p+a0+jLM -O -K -N  >> $ofile
$x1 $y1 10mm/yr(GPS)
eob

gmt pstext <<eob -R -J -D.2c/0 -F+f8p+a0+jLM -O -K -N  >> $ofile
$x1 $y2 @%2%M@%%5
eob
##echo a
gmt psxy -R -J -O -K <<eob -N -Sc -W.5p,96/96/96 -G96/96/96@50 >> $ofile
$x1 $y2 0.15
eob

gmt psmeca -R -J <<eob -Sm.33/7/-.1c -N -W -O -K -Gdarkgray >> $ofile
$x1 $y3 21 -0.27 -0.77 1.04 0.26 0.04 -0.53 25 X Y Mw6.0
eob

gmt psxy -R -J -O -K <<eob -N -Sa -W.25p,red -Gred >> $ofile
$x1 $y4 0.3
eob
gmt pstext <<eob -R -J -D.2c/0 -F+f7p+a0+jLM -O -K -N  >> $ofile
$x1 $y4 Recent earthquakes
eob
    
    
    echo "[$PROG]INFO: adding north arrow"
    gmt gmtset FONT_TITLE = 7p
    gmt pscoast  -R -Df -J  -V  -K -O -T$x1/$y5/.2i -L$x3/$y6/$y6/50+lkm -Wblack >> ${ofile}

gmt psxy -R -J -O -K <<eob -W2p,blue >> $ofile
`echo $x1| awk '{print $1+.1}'` $y7
`echo $x1| awk '{print $1+.9}'` $y7
eob
gmt pstext <<eob -R -J -D.2c/.2c -F+f7p+a0+jLM -O -K -N  >> $ofile
$x1 $y7 fault
eob

gmt psxy -R -J -O -K <<eob -W2p,yellow,- >> $ofile
`echo $x1| awk '{print $1+.1}'` $y8
`echo $x1| awk '{print $1+.9}'` $y8
eob
gmt pstext <<eob -R -J -D.2c/.2c -F+f7p+a0+jLM -O -K -N  >> $ofile
$x1 $y8 profile
eob

    #echo "[$PROG]INFO: adding scale bar for InSAR rate "
    #gmt psscale -D3.2i/-.4i/4c/.23ch  -O -Cmy.cpt -K  -B5f1::/:"InSAR LOS Rate (mm/yr)":  >> $ofile
    gmt psscale -D3.2i/.4i/4c/.23ch    -O -Cmy.cpt -K  -B5f1::/:"InSAR LOS Rate (mm/yr)":  >> $ofile

    

xw=`echo $X_MIN | awk '{print $1+.5}'`
xe=`echo $X_MAX | awk '{print $1-.5}'`
yw=`echo $Y_MAX | awk '{print $1-.25}'`
ye=$yw
    gmt pstext -R -J <<eob -O -K -F+f12p+a0+jCM >>  $ofile
$xw $yw WEST
$xe $ye EAST
eob

    
    echo "[$PROG]INFO: plot profile information on the rate map"
    file=${profiles_path}/profile_${n}_vel.psxy
    file_mdl=${profiles_path}/profile_${n}_vel_mdl_los.txt
    file_mdl=${profiles_path}/profile_${n}_vel_mdl_raw.txt
    
    if [ ! -s $file ]; then
        echo "[$PROG]ERROR: profile file ($file) not exist!! Skipped."
        continue
    fi
    
    #for convert los velocity to fault-parallel and fault-perpendicular components
    #alpha - satellite heading direction
    #theta - satellite looking direction
    #beta  - fault strike
    
    echo "[$PROG]INFO: get the orbit type (ascending/descedning)"
    orbtyp1=`echo $file | awk '{if(index($1,"-a-")>0){print "asc" } else {print ""}}'`
    orbtyp2=`echo $file | awk '{if(index($1,"-d-")>0){print "des" } else {print ""}}'`
    if [ "$orbtyp1" = "" -a "$orbtyp2" = "" ]; then
        echo "[$PROG]WARNING: not orbit type information available!"
        orbtyp=""
    elif [ "$orbtyp1" = "asc" -a "$orbtyp2" = "des" ]; then
        echo "[$PROG]WARNING: conflict orbit types!"
        orbtyp=""
    elif [ "$orbtyp1" = "asc" ]; then
        orbtyp=$orbtyp1
        alpha=`echo -13 | awk '{print ($1+360)*3.1415927/180.}'`
    else
        orbtyp=$orbtyp2
        alpha=`echo 193 | awk '{print $1*3.1415927/180.}'`
    fi
    echo "[$PROG]INFO: orbtype is $orbtyp"
    #exit
    
    theta=`echo 38. | awk '{print $1*3.1415927/180.}'`
    
    

    echo "[$PROG]INFO: add orbit/looking directions"
    if [ "$orbtyp" = "asc" ]; then
        x_orb=`echo $X_MIN | awk '{print $1+1.5}'`
        y_orb=`echo $Y_MIN | awk '{print $1+1}'`
        echo "x/y orb are $x_orb $y_orb"
        #exit
    	psvelo -R -J -W1p,black,- -Gblack -Se2/0.95/0   -L -A9p+e -V <<eob -O -K>> $ofile 
        $x_orb $y_orb -.2 0.866 0 0 0 Satellite (Ascending)
eob
        psvelo -R -J -W1p,blue,. -Gred -Se2/0.95/0   -L -A9p+e -V <<eob -O -K>> $ofile 
        $x_orb $y_orb 0.6 0.14 0 0 0 LOS Direction
eob
        pstext <<eob -R -D-.3i/.7i -J -N -F+f+a+j -O -K  >> $ofile
        $x_orb $y_orb 12 13 LB Satellite@+ (Ascending)@+
eob
        pstext <<eob -R -D.5i/.1i  -J -N -F+f+a+j -O -K  >> $ofile
        $x_orb $y_orb 12 13 LB LOS
eob
        pstext <<eob -R -D.3i/.08i  -J -N -F+f+a+j -O -K  >> $ofile
        $x_orb $y_orb 12p,red 13 LB -
eob
        pstext <<eob -R -D.1i/.02i  -J -N -F+f+a+j -O -K  >> $ofile
        $x_orb $y_orb 12p,blue 13 LB +
eob
        psxy <<eob -R -J -N -W.5p,black -Sj -O -K  >> $ofile
        $x_orb $y_orb 13 .2 .4
eob
    fi

	if [ "$orbtyp" = "des" ]; then
        x_orb=`echo $X_MAX | awk '{print $1-.5}'`
        y_orb=`echo $Y_MAX | awk '{print $1-1}'`
        echo "x/y orb are $x_orb $y_orb"
        psvelo -R -J -W1p,black,- -Gblack -Se2/0.95/0   -L -A9p+e -V <<eob -O -K>> $ofile 
        $x_orb $y_orb -.2 -0.866 0 0 0 DES
eob
        psvelo -R -J -W1p,blue,. -Gred -Se2/0.95/0   -L -A9p+e -V <<eob -O -K>> $ofile 
        $x_orb $y_orb -0.6 0.14 0 0 0 LOS 
eob
        pstext <<eob -R -J -D-.5i/.1i  -N -F+f+a+j -O -K  >> $ofile
        $x_orb $y_orb 12 -13 RB LOS
eob
        pstext <<eob -R -J -D-.2i/-.7i -N -F+f+a+j -O -K  >> $ofile
        $x_orb $y_orb 12 -13 CT Satellite@- (Descending)@-
eob
        pstext <<eob -R -D-.3i/-.01i  -J -N -F+f+a+j -O -K  >> $ofile
        $x_orb $y_orb 12p,red -13 RB -
eob
        pstext <<eob -R -D-.1i/-.05i  -J -N -F+f+a+j -O -K  >> $ofile
        $x_orb $y_orb 12p,blue -13 RB +
eob
        psxy <<eob -R -J -N -W.5p,black -Sj -O -K  >> $ofile
        $x_orb $y_orb -13 .2 .4
eob
    fi

    #
    line_ending=`cat -v $file | head -1 | awk '{print substr($0,length($0)-1)}'`
    echo "[$PROG]INFO: line_ending is $line_ending"
    if [ "$line_ending" = '^M' ]; then
        echo "[$PROG]INFO: converting DOS text file to Linux/Unix line-ending format ($file) ..."
        dos2unix $file
    fi
    
    if [ -s $file_mdl ]; then
        line_ending=`cat -v $file_mdl | head -1 | awk '{print substr($0,length($0)-1)}'`
        #echo "line_ending is $line_ending"
        if [ "$line_ending" = '^M' ]; then
            echo "[$PROG]INFO: converting DOS text file to Linux/Unix line-ending format ($file_mdl) ..."
            dos2unix $file_mdl
        fi
        #
        rate=`grep 'far-field strike-slip rates' $file_mdl | awk '{print $5}'`
        locking_depth=`grep 'far-field strike-slip rates' $file_mdl | awk '{print $8}'`
        echo "[$PROG]INFO: $rate $locking_depth"
    
        fts=`grep 'fault trace shift (km)' $file_mdl | awk '{print $6+0}'`
        xm=`grep 'de-mean of velocity' $file_mdl | awk '{print $5+0}'`
        echo "[$PROG]INFO: rate= $rate $fts $xm"
        
        #convert LOS velocity to strike-slip/vertical components
        ##ds=los/( SIN(theta)*SIN(alpha-beta) ); Garthwaite et al., 2013, JGR. equation (2)
        ##;ds=los/( SIN(theta)*COS(alpha-beta) ) 
        ##dd=los*COS(theta)
        rate_fa_pl=`echo $rate $alpha $beta $theta | awk '{print $1/( sin($4)*sin($2-$3) ) }'`
        rate_fa_pd=`echo $rate $alpha $beta $theta | awk '{print $1*( cos($4) ) }'`
        echo rate $rate alpha $alpha beta $beta theta $theta rate_fa_pl $rate_fa_pl rate_fa_pd $rate_fa_pd
    fi
    
    echo "[$PROG]INFO: create colormap for distance to profile line"
    grep "^ " $file | awk '{print$4}' >.tmp.dist
    maxdist=`gmt gmtinfo -I.001 .tmp.dist|awk -F\/ '{print $2}'`
    mindist=`gmt gmtinfo -I.001 .tmp.dist|awk -F\/ '{print -1*$2}'`
    #mindist=-5
    #maxdist=5
    gmt makecpt -Cno_green -T${mindist}/${maxdist}/.1 -Z> dist.cpt
    #exit
    
    
    #echo $file
    #
    #profile location
    x_pf1=`grep '^# PSXY_PROFILE' $file |head -1| awk '{print $3}'`
    y_pf1=`grep '^# PSXY_PROFILE' $file |head -1| awk '{print $4}'`
    x_pf2=`grep '^# PSXY_PROFILE' $file |tail -1| awk '{print $3}'`
    y_pf2=`grep '^# PSXY_PROFILE' $file |tail -1| awk '{print $4}'`
    rate_pf=`echo $x_pf1 $y_pf1 $x_pf2 $y_pf2 | awk '{print ($4-$2)/($3-$1)}'`
    rate_pf_angle=`echo $x_pf1 $y_pf1 $x_pf2 $y_pf2 | awk '{print atan2($4-$2,$3-$1)*180/3.1415926 }'`
    rate_pf_angle=`echo $rate_pf_angle | awk '{if($1<0) {print $1+180} else {print $1}}'`
    echo "[$PROG]INFO: rate of profile direction is $rate_pf ($rate_pf_angle degrees)"
    sign_pf=`echo $rate_pf | awk '{if($1>0){print 1}else{print -1}}'`
    rate_fa=`echo $rate_pf | awk '{print -1./$1}'`
    rate_fa_angle=`echo $rate_pf_angle | awk '{print $1-90 }'`
    beta=`echo $rate_fa_angle | awk '{print (90-$1)*3.1415927/180.}'`
    echo "[$PROG]INFO: rate of fault strike direction is $rate_fa ($rate_fa_angle degrees)"
    echo $x_pf1 $y_pf1 $x_pf2 $y_pf2 $sign_pf
    #exit
    # 
    grep '^# PSXY_PROFILE' $file | awk '{print $3,$4}'> .tmp
    gmt psxy -R -J -O .tmp -W2p,yellow,- -K  >> $ofile
    gmt psxy -R -J -O .tmp -St.3c -W1.5p,navy -Gwhite -K >> $ofile
    grep "^ " $file |awk '{print $9,$10,$4}' > .tmp
    \cp -f .tmp .tmp1
    gmt psxy -R -J -Sc0.05c  -Cdist.cpt  .tmp -O -K >> $ofile
    #grep "^ " $file |awk '{printf(">\n%f %f \n %f %f\n", $2,$3, $9,$10)}' > .tmp
    #gmt psxy -R -J .tmp -O -W.35p,blue,- -m -K>> $ofile
    
    #plot fault-profile intersection
    #grep _FAULT_PROFILE_INTERSECT $file | awk '{print $3,$4}' > .tmp
    x_fa_pf=`grep _FAULT_PROFILE_INTERSECT $file | awk '{print $3}' `
    y_fa_pf=`grep _FAULT_PROFILE_INTERSECT $file | awk '{print $4}' `
    gmt psxy -R -J -O <<eob -Sd.3c -W1p,white -Gred -K >> $ofile
    $x_fa_pf $y_fa_pf
eob
    
    #plot fault trace
    grep _FAULT_TRACE $file | awk '{print $3,$4}' > .tmp
    gmt psxy -R -J -O .tmp -W1.5p,blue -K >> $ofile

    echo "[$PROG]INFO: plot strike-slip sense"
    if [ -s $file_mdl ]; then
    
        #convert LOS velocity to strike-slip/vertical components
        ##ds=los/( SIN(theta)*SIN(alpha-beta) ); Garthwaite et al., 2013, JGR. equation (2)
        ##;ds=los/( SIN(theta)*COS(alpha-beta) ) 
        ##dd=los*COS(theta)
        rate_fa_pl=`echo $rate $alpha $beta $theta | awk '{print $1/( sin($4)*sin($2-$3) ) }'`
        rate_fa_pd=`echo $rate $alpha $beta $theta | awk '{print $1*( cos($4) ) }'`
        echo rate $rate alpha $alpha beta $beta theta $theta rate_fa_pl $rate_fa_pl rate_fa_pd $rate_fa_pd
        ###;Fattahi and Amelung [2016, GRL]
        ###;(Fattahi, H., and F. Amelung (2016), InSAR observations of strain accumulation and
        ###;fault creep along the Chaman Fault system, Pakistan and Afghanistan,
        ###;Geophys. Res. Lett., 43, doi:10.1002/2016GL070121)
        ###;Figure 2
        ###;  vp=v/(sin(az)cos(h)sin(theta)-cos(az)sin(h)sin(theta))
        ###;where, az-fault strike; h-satellite heading angle; theta-average radar incidence.
        vp4=`echo $rate $alpha $beta $theta | awk '{print $1/( sin($3)*cos($2)*sin($4)-cos($3)*sin($2)*sin($4) ) }' | awk '{printf("%6.2f",$1)}'`
    
        #direction of strike-slip sense arrows   
        #
        echo rate and orbtp are $rate $orbtyp
        strike_sense=`echo $rate $orbtyp | awk '{if( ($1>0&&$2=="des") || ($1<0&&$2=="asc") ){print 1}else{print -1}}'`
        strike_sense=`echo $strike_sense $sign_pf | awk '{print $1*$2}'` 
        strike_sense_invert=`echo $strike_sense | awk '{print -1*$1}'`
        
        #color of strike-slip sense arrows
        strike_color1=black
        strike_color2=black
        if [ "$orbtyp" = "asc" ]; then
            if [ $strike_sense -eq -1 ]; then
                strike_color1=blue
                strike_color2=red
            else
                strike_color2=blue
                strike_color1=red
            fi
        elif [ "$orbtyp" = "des" ]; then
            if [ $strike_sense -eq 1 ]; then
                strike_color1=blue
                strike_color2=red
            else
                strike_color2=blue
                strike_color1=red
            fi
        else
            echo "no orbit information for strike-slip sense color"
        fi
        
        #
        y_strike_sense1=`echo $y_fa_pf | awk '{print $1+.25}'`
        y_strike_sense2=`echo $y_fa_pf | awk '{print $1-.25}'`
        echo $x_fa_pf $y_strike_sense1 $y_strike_sense2 $strike_sense $strike_sense_invert
        
        #rotate by fault strike direction
        len_strike_sense=1
        dx1=`echo $len_strike_sense $rate_fa_angle $strike_sense | awk '{print $1*cos($2*3.1415926/180)*$3}'`
        dy1=`echo $len_strike_sense $rate_fa_angle $strike_sense | awk '{print $1*sin($2*3.1415926/180)*$3}'`
        dx2=`echo $len_strike_sense $rate_fa_angle $strike_sense_invert | awk '{print $1*cos($2*3.1415926/180)*$3}'`
        dy2=`echo $len_strike_sense $rate_fa_angle $strike_sense_invert | awk '{print $1*sin($2*3.1415926/180)*$3}'`
        
        echo dx dy are $dx1 $dy1 $dx2 $dy2 $len_strike_sense $rate_fa 
        gmt psvelo <<eob -R -J -N -W1p,yellow -G${strike_color1}   -Se1/0.95/0  -L -A18p+e  -V -O -K >> $ofile
$x_fa_pf $y_strike_sense1 $dx1 $dy1 0 0 0
eob
        gmt psvelo <<eob -R -J -N -W1p,yellow -G${strike_color2}   -Se1/0.95/0  -L -A18p+e  -V -O -K >> $ofile
$x_fa_pf $y_strike_sense2 $dx2 $dy2 0 0 0
eob
    fi
    
    lat_fp=0
    #echo "**lat of intersect of fault and profile: $lat_fp "
    
    echo "[$PROG]INFO: plot overview map"
gmtset MAP_FRAME_TYPE                  = plain 
    gmt gmtset FONT_TITLE = 7p
    gmt gmtset FONT_LABEL         = 6p
    gmt gmtset FONT_ANNOT_PRIMARY = 6p
    gmt gmtset MAP_FRAME_PEN               = .25p
    gmt gmtset MAP_FRAME_WIDTH             = 0.1c
    gmt gmtset MAP_TICK_LENGTH_PRIMARY = 2p/1p
    gmt gmtset MAP_TITLE_OFFSET = .051c

#grdimage $Ro $Jo  -B10f5/10f5WSEN $dem_file_overview -Cmytopo2.cpt -A250 -K -V -O  >> $ofile
grdimage $dem_file_overview  -Cmytopo2.cpt $Ro $Jo    -B10f5:"":/10f5:""::."":EN -K -P   -O >> ${ofile}
#pscoast $R $J -Wthin -I1 -N1 -B10f5/10f5WSEN -Glightgray -Wthinnest,lightgray -A250 -K -V -O >> $ofile
#pscoast $R $J -Wthin -I1 -N1 -B10f5/10f5WSEN -Glightgray -Wthinnest,lightgray -A250 -K -V -O >> $ofile
psxy -R -J -O -K -L <<eob -Gblue@80 >> $ofile
$X_MIN $Y_MAX 
$X_MAX $Y_MAX
$X_MAX $Y_MIN
$X_MIN $Y_MIN
eob
    
    #gmt gmtset MAP_TICK_LENGTH = -.1c
    #gmt gmtset MAP_FRAME_WIDTH = .2c
    #gmt gmtset MAP_FRAME_PEN               = 2p
    gmt gmtset FONT_TITLE = 18p
    gmt gmtset FONT_LABEL         = 12p
    gmt gmtset FONT_ANNOT_PRIMARY = 9p
    gmt gmtset MAP_FRAME_PEN               = .5p
    gmt gmtset MAP_FRAME_WIDTH             = 0.1c
    gmt gmtset MAP_TICK_LENGTH = .1c
    gmt gmtset MAP_TITLE_OFFSET = .1051c
    
    
    


    echo "[$PROG]INFO: plot the velocity profiles"
    

    grep "^ " $file | awk '{print $11,$12,$4,$13}' >.tmp.los
    grep "^ " $file_mdl | awk '{print $1,$2}' >.tmp.los.mdl
    
    Rp=`minmax -I.5/5 .tmp.los`
    Rp=-R-250/250/-29/29
    #Rp=-R-250/250/-20/20
    echo "[$PROG]INFO: (5) change the ranges of X and Y axes to $R"
    
    #xmin=`echo $R | awk -F/ '{print $1}'`
    #xmax=`echo $R | awk -F/ '{print $2}'`
    #echo $R $xmin $xmax
    gmt psxy $Rp -JX7i/5.5i -X0i -Y-6.5i -Sc0.05c   -B40f10:"Distance from Fault (km)":/5f1:"InSAR LOS Velocity (mm/yr)"::."(b). InSAR LOS Velocity of profile_${n}":/SWen -O -K   .tmp.los -Cdist.cpt >>$ofile
    gmt psxy -R -J -O -K .tmp.los.mdl -W1p,red >> $ofile
    
    gmt psscale -D3.5i/.4i/4c/.23ch    -O -Cdist.cpt -K  -B2f1::/:"Distance to Profile (km)":  >> $ofile
    
    
    echo "[$PROG]INFO: plot rorated axis"
    grep PSXY_AXIS_MDL_RAW $file_mdl | awk '{print $3,$4}' > .tmp.mdl.rot.axis
    gmt psxy -R -J -O .tmp.mdl.rot.axis -W.5p,blue -K >> $ofile
    

    
    gmt pstext -R -J <<eob -O -K -F+f12p+a0+jRM >>  $ofile
0 26 strike-slip rate (LOS direction) = 
0 23 locking depth = 
0 20 fault trace shift =
#0 17 shift of velocity mean =
eob
    if [ "$rate" != "" ]; then
    gmt pstext -R -J <<eob -O -K -F+f12p+a0+jLM >>  $ofile
10 26  $rate mm/yr (faul-parallel: $vp4 mm/yr)
10 23 $locking_depth km
10 20 $fts km
#10 17 $xm mm/yr
eob

fi


#date-and-time (versions)
dt_rate_map=`stat $grdfile | grep Modify | awk '{print $2"T"$3}'`
dt_plot_map=`date --rfc-3339=seconds | awk '{print $1"T"$2}'`    

    gmt pstext -R -J <<eob -O -K -F+f7p+a0+jLM >>  $ofile
-246 -20 InSAR Rate Map Version $dt_rate_map
-246 -21 Plot Version $dt_plot_map
-246 -22 Yunfeng Tian (tianyf@@gmail.com  13522218117)
-246 -23 Institute of Crustal Dynamics (ICD), China Earthquake Administration (CEA)
-246 -24 1 Anningzhuang Road, Haidian, Beijing, China  100085
eob
    gmt pstext -R -J <<eob -O -K -F+f12p+a0+jCM >>  $ofile
-220 -26 WEST
220  -26 EAST
eob

    
    gmt psxy -R -J -O -K <<eob -W1p,red,- >> $ofile
    $lat_fp -10000
    $lat_fp 10000
eob
    gmt psxy -R -J -O -K <<eob -W.25p,black,- >> $ofile
-1000 $xm
1000 $xm
eob
    echo "$fts -1000" > a
    gmt psxy -R -J -O -K <<eob -W.25p,black,- >> $ofile
$fts -1000
$fts 1000
eob
    
    #add ICD icon
    file_icd_icon=${GMT_pub}/vector/icd.gif
    gmt psimage $file_icd_icon -Dx-.1i/.3i+w1i  -O -K >> $ofile
    
    #add an annotation text
    fig_cap= #blank
    #fig_cap="LOS Rate Map by Sentinel-1 [${orb}] Using GMT5SAR Time Series Analysis (SBAS) (Positive: move towards satellite (des-right; asc-left) )"
    gmt pstext -R0/100/0/100 -JX4.6i  -F+f+a+j  -Y-.7i -X-0i -O  <<eob >> $ofile
50 2 8 0 2 ${fig_cap}
eob
    
    echo "[$PROG]INFO: converting JPEG ($file)..."
    gmt ps2raster -A -Tj -Z $ofile
    #echo "converting PDF ..."
    #psconvert -A -Tf $ofile
    
    #exit
done  #end-of-profile-loop
