#!/bin/bash

# Name:
#   sh_sar_intf_all_corr
#

# Purpose:
#

# Example:
#

# Modifications:
#

# Algorithm:
#

# Dependency:
#


PROG=sh_sar_intf_all_corr

timestamp=`date | sed -e "s/ /_/g" | sed -e "s/:/-/g"`

path_old=`pwd`

usage_of_it(){
cat <<eob
${PROG}
|_Calcualte mean coherence for interferograms.
|+
  -intf_all/*/corr_cut.grd
  -GMT
  -proj_ll2ra_ascii.csh (GMTSAR)
  -baseline_table.dat
|<
  [-r|-roi ROI_KML_FILE]
  [-p|-path INPUT_PATH]
    default: intf_all
  [-o|-ofile OUTPUT_FILE]
    default: corr.intf.txt
  [-h|-help|--help]
|e.g., in F1 (F2/F3)
  ${PROG}
  ${PROG} -ofile intf_all_corr.txt
  ${PROG} -roi roi_lasa.kml -ofile intf_all_corr_lasa.txt
(c)iGPS (https://github.com/igps-ftk/)
eob
}

#if [ $# -eq 0 ]; then
#    usage_of_it
#    exit 1
#fi


path=`pwd`
ofile=${path}/corr.intf.txt

if [ "`basename $path`" != "intf_all" ]; then
  if [ -s $path/intf_all ]; then
    path=$path/intf_all
  fi
fi

file_roi=
R=
is_mask=n
file_mask=

while [ "$1" != "" ]; do
  case $1 in
    -p|-path)
      path=$2
      ;;
    -r|-roi)
      file_roi=$2
      ;;
    -m|-mask)
      is_mask=$2
      ;;
    -R)
      R=$2
      ;;
    -o|-ofile)
      ofile=$2
      ;;
    -h|-help|--help)
      usage_of_it
      exit 1
      ;;
    *)
      usage_of_it
      echo -e "[$PROG]\033[1;33;41mERROR\033[0m: invalid option ($1)!!"
      exit 1
      ;;
  esac
  shift 2
done

if [ "$file_roi" != "" ]; then
  gmt kml2gmt $file_roi | grep -v '>' | awk '{print $0,0}' > _tmp.llz
  ln -s $path/../topo/trans.dat .
  proj_ll2ra_ascii.csh trans.dat _tmp.llz _tmp.xyz
  if [ "$is_mask" == "y" ]; then
    echo "create a mask"
    exit
  else
    R=`gmt gmtinfo -I1/1 _tmp.xyz`
  fi  
fi

echo R $R
echo path $path
echo ofile $ofile
echo mask $file_mask
cd $path
exit

path_cur=`pwd`
echo $path_cur
bname=`basename $path_cur`
if [ "$bname" != "intf_all" ]; then
  echo -e "[$PROG]\033[1;33;41mERROR\033[0m: input path should be xxx/intf_all !!"
  exit
fi

#exit

bfile="$path_cur/../baseline_table.dat"

intfs=`find . -maxdepth 1 -type d -name "20?????_20?????" |sort`
\rm -f $ofile
for intf in $intfs; do
  echo intf $intf
  yd1=`basename $intf | awk -F_ '{print $1}'`
  yd2=`basename $intf | awk -F_ '{print $2}'`

  #day1=`grep -h " $yd1" $bfile | awk '{print $3}'`
  #day2=`grep -h " $yd2" $bfile | awk '{print $3}'`
  #nday=`echo $day1 $day2 | awk '{print sqrt(($1-$2)*($1-$2))}'`
  #
  #dyr1=`grep -h " $yd1" $bfile | awk '{print $2}'`
  #dyr2=`grep -h " $yd2" $bfile | awk '{print $2}'`


  year1=`basename $intf | awk '{print substr($0,1,4)}'`
  doyr1=`basename $intf | awk '{print substr($0,5,3)}'`
  year2=`basename $intf | awk '{print substr($0,9,4)}'`
  doyr2=`basename $intf | awk '{print substr($0,13,3)}'`
  mjd1=`doy $year1 $doyr1 | head -1 | awk '{print $10}'`
  mjd2=`doy $year2 $doyr2 | head -1 | awk '{print $10}'`
  nday=`echo $mjd1 $mjd2 | awk '{print $2-$1}'`
  dyr1=`doy $year1 $doyr1 | tail -1 | awk '{print $3}'`
  dyr2=`doy $year2 $doyr2 | tail -1 | awk '{print $3}'`
  #echo $year1 $doyr1 $year2 $doyr2 $mjd1 $mjd2 $nday

  bperp1=`grep -h " $yd1" $bfile | awk '{print $5}'`
  bperp2=`grep -h " $yd2" $bfile | awk '{print $5}'`
  bperp=`echo $bperp1 $bperp2 | awk '{print sqrt(($1-$2)*($1-$2))}'`

  #echo $yd1 $yd2 $day1 $day2 $nday

  file_corr=${intf}/corr_cut.grd
  #echo file_corr $file_corr
  #exit
  echo "gmt grdinfo $R -L2 $file_corr"
  val=`gmt grdinfo $R -L2 $file_corr | grep mean | awk '{print $3}'`
  echo `basename $intf` $dyr1 $dyr2 $nday $bperp $val >> $ofile
  #exit
  #break
done

echo "[$PROG]INFO: done."
