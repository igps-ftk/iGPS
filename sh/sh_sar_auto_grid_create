#!/bin/sh

# Name:
#   sh_sar_auto_grid_create
#   

# Purpose:
#   create/update input.lst files in /sar/proc_gmtsat/auto_grid based upon observations files in /sar/s1

# Example:
#   

# Modifications:
#   

# Algorigthm:
#   

# Dependency:
#   

. ${HOME}/.bashrc

PROG=sh_sar_auto_grid_create


usage(){
    echo "[$PROG]INFO: $PROG [-date YYYYMM ]"
    echo "[$PROG]INFO:       [-expt EXPT]"
    echo "[$PROG]INFO: "
}


path_slc=/sar/s1/metainfo/safe.all/
path_run=/sar/proc_gmtsar/auto_grid

datestr=202001
#datestr=20200
exptstr='[AD]???_????'
is_update_list=n
file_tmp=_tmp_${PROG}_`date +%s`_$$

file=


while [ "$1" != "" ]; do
  case $1 in
   -date)
      datestr=$2
      ;;
    -expt)
      exptstr=$2
      ;;
    -file)
      file=$2
      ;;
    -h|-H|--help|-help|"?")
      usage
      exit 0
      ;;
    -update_list)
      is_update_list=$2
      ;;
    *)
      echo "[$PROG]ERROR: invalid option ($1)!!"
      echo "[$PROG]INFO: use $PROG -h for usage."
      exit 1
      ;;
  esac

  shift 2
done

if [ "$file" == "" ]; then
  paths=`find $path_slc -maxdepth 1 -type d -name "$exptstr" | sort`
else
  paths=`grep '^ ' $file | awk '{print path_slc"/"$1}' path_slc=$path_slc`
fi

echo paths $paths
#exit
for path in $paths; do
  expt=`basename $path`
  
  files_tmp=`find $path_slc/$expt -maxdepth 1 -type f -name "S1*IW*SLC*_${datestr}*.manifest.safe"`
  if [ "$files_tmp" == "" ]; then
    echo "[]WARNING: no scenes matching $datestr in $path_slc/$expt!! Skipped."
    continue
  fi
  
  if [ -s $path_run/$expt/input.lst.init ]; then
    echo "[]INFO: input.lst.init already exists in $expt. Skipped."
    continue
  fi 
  
  echo sh_sar_auto_grid_create_input_list -expt $expt -date $datestr
  echo sh_sar_auto_grid_create_input_list -expt $expt -date $datestr | sh
  #exit
done
