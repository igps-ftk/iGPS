#!/bin/sh

# Name:
#   sh_slurm_intf_tops
#   

# Purpose:
#   Queue gamit tasks to slurmd.

# Example:
#   

# Modifications:
#   

# Algorigthm:
#   

# Dependency:
#   
. ${HOME}/.bashrc


#the directory to hold the interferograms, e.g. f123.1
COMB_DIR=`pwd`
ROOT_DIR=${COMB_DIR}/..

#--
# |-des_F?/asc_F?/
# |  |-intf/
# |  |-intf_all/
# |  |-raw/
# |  |-topo/
# |  |  |-dem.grd
# |  |  |-trans.dat
# |  |-batch_tops.config
# |  |-intf.in




#session name
tmp=`dirname ${COMB_DIR}/test.txt`
#echo tmp is $tmp
#echo COMB_DIR is $COMB_DIR
PROC_ID=`dirname ${tmp} | awk -F\/ '{print $NF}'`
COMB_ID=`basename ${tmp}`
echo PROC_ID is $PROC_ID
echo COMB_ID is $COMB_ID


#gamit processing directory, e.g. 
PROC_DIR=/home/tianyf/gsar/
#echo "*Note: the daily processing will be in ${PROC_DIR}/TEMP/"

#Archive H-file directory
ARCHIVE_DIR=${COMB_DIR}/intf_all
mkdir -p $ARCHIVE_DIR

#Temporary files directory
TMP_DIR=`pwd`


overwrite=n
file_intf_in=intf.in
batch_config=batch_tops.config
delay=1

while [ "$1" != "" ]; do
    case $1 in
	-file)
	    file_intf_in=$2
	    ;;
	-config)
	    batch_config=$2
	    ;;
	-delay)
	    delay=$2
	    ;;
	-ndays)
	    ndays=$2
	    ;;
	-orbit)
	    orbit=$2
	    ;;
	-overwrite)
	    overwrite=$2
	    ;;
        -expt)
            expts=$2
            expts=`echo $expts | sed -e 's/,/ /g'`
            ;;
	*)
	    echo "[run_rapid]ERROR: invalid options ($1) !!!"
	    exit 1
	    ;;
    esac
    shift 2
done

#exit

#test ascending/descending
#orb_type=
#if [ -d ../asc_F1 ]; then
#    orb_type=asc
#elif [ -d ../des_F1 ]; then
#    orb_type=des
#else
#    echo "[]ERROR:no ascending/descending paths found!"
#    exit 1
#fi
#
#echo "orbit type: $orb_type"




while read line; do
    date1=`echo $line |awk -F":" '{print $1}'|cut -c 4-11`
    date2=`echo $line |awk -F":" '{print $2}'|cut -c 4-11`

    #echo $date1 $date2
    year1=`echo $date1 | awk '{print substr($1,1,4)}'`
    mon1=`echo $date1 | awk '{print substr($1,5,2)}'`
    day1=`echo $date1 | awk '{print substr($1,7,2)}'`
    doyr1=`doy $year1 $mon1 $day1 | head -1 | awk '{printf("%03d", $6-1)}'`
    #echo $year1 $mon1 $day1 $doyr1

    year2=`echo $date2 | awk '{print substr($1,1,4)}'`
    mon2=`echo $date2 | awk '{print substr($1,5,2)}'`
    day2=`echo $date2 | awk '{print substr($1,7,2)}'`
    doyr2=`doy $year2 $mon2 $day2 | head -1 | awk '{printf("%03d", $6-1)}'`
    #echo $year2 $mon2 $day2 $doyr2
 
    out_dir="${year1}${doyr1}_${year2}${doyr2}"
    #pwd
    #echo $out_dir

    echo "[]INFO: chekcing ./intf_all/${out_dir}/unwrap_mask.grd ..."
    if [ -s ./intf_all/${out_dir}/unwrap_mask.grd ]; then
      echo "[]INFO: already done ($out_dir). Skipped."
      continue
    fi

    echo "[]INFO: queuing $out_dir ..."
    #continue
    #exit 

    cmdfile=slurm_intf_tops_${date1}_${date2}.cmd

    if [ -s "${ARCHIVE_DIR}/${date1}_${date2}/unwrap_mask_ll.png" ]; then
      if [ "$ovewrite" == "n" ]; then
        echo "[]INFO:output already! Skipped."
        continue
      fi
    else
      if [ -s "$cmdfile" -a "$overwrite" == "n" ]; then
        echo "[]INFO:already queued! Skipped."
        continue
      fi
    fi

    logfile="slurm_intf_tops_"$date1"_"$date2".log"
     infile="slurm_intf_tops_"$date1"_"$date2".in"
    
    echo $line > $infile
    #cmdfile=slurm_intf_tops_${date1}_${date2}.cmd
    echo "intf_tops.csh $infile $batch_config >& $logfile" > $cmdfile

    #dir_name=`echo $line | awk -F, '{print $1}' | awk -F: '{print $1}' | awk -F"/" '{print $(NF-1)}'`
    
    dir_name="${date1}_${date2}"
    echo dir_name $dir_name
    file_t=${COMB_DIR}/slurm_intf_tops_${dir_name}.sh
    #check whether already done
    #

    tmp=`date | sed -e 's/ /_/g' | sed -e 's/:/-/g'`
 

    echo "#!/bin/sh" > $file_t
    echo "#SBATCH --nodes=1" >> $file_t
    echo "#SBATCH --ntasks=1" >> $file_t
    echo "#SBATCH --cpus-per-task=1" >> $file_t
    echo "pwd; hostname; date" >> $file_t

    path_t=${PROC_DIR}/temp/${tmp}-${PROC_ID}-${COMB_ID}-${dir_name}
    echo "mkdir -p $path_t " >> $file_t
    # make links
    echo "cd ${path_t}" >> $file_t
    echo "ln -s ${COMB_DIR}/raw" >> $file_t
    echo "ln -s ${COMB_DIR}/topo" >> $file_t
    echo "ln -s ${COMB_DIR}/batch_tops.config" >> $file_t
    echo "mkdir -p intf_all" >> $file_t
    echo "pwd" >> $file_t

    echo "ln -s ${COMB_DIR}/$cmdfile" >> $file_t
    echo "ln -s ${COMB_DIR}/$infile" >> $file_t



    echo 'date' >> $file_t
    echo '#sleep 3' >> $file_t
    echo "sh $cmdfile" >> $file_t

    echo "tmp=\`ls intf_all/ | grep _ \`" >> $file_t
    echo "if [ \"\$tmp\" != \"\" ]; then" >> $file_t
    echo "  mv intf_all/\$tmp ${ARCHIVE_DIR}/" >> $file_t
    echo "" >> $file_t
    echo "" >> $file_t
    echo "" >> $file_t

#    echo "if [ -s \"${dir_name}/unwrap_mask_ll.png\" ]; then " >> $file_t
#    echo "  mv intf_all/${dir_name} ${ARCHIVE_DIR}/" >> $file_t
    echo "fi" >> $file_t

    echo 'date' >> $file_t

    echo $file_t
    #cat $file_t
    pwd
    #sleep 1
    sbatch $file_t
    sleep $delay
    echo delay is $delay
    #exit
done < $file_intf_in


sinfo
squeue
