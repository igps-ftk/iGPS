#!/bin/csh 

# !!! NOTE: Revised from GAMIT/GLOBK installation script files.
#     ++++
#Commented by tianyf

set INST_PROG = install_igpsftk

#Get current system information
set arch = "`uname -s`"
#echo $arch
set sys =  `uname`
#echo $sys
if (${sys} == "SunOS") then
    set arch = "${arch}_`uname -i`_`isainfo -b`"
else if (${sys} == "Darwin") then
    set arch = "${arch}_`uname -p`"    
else
    set arch = "${arch}_`uname -i`"
endif

echo "Creating iGPS FTK executables for $arch ..."


set TARGETDIR = `pwd` 


set MK_CMD = "make -f Makefile.${arch}"
set UNIMAKE_CMD = ${TARGETDIR}/unimake_igpsftk
#set FC_CMD = ifort #Fortran Compiler
#set FC_CMD = gfortran

#Test compiler used.
cd $TARGETDIR
${UNIMAKE_CMD} -m lib -e ${arch} 
if( $status != 0 ) then
  echo "Failure in ${UNIMAKE_CMD} for testing compiler in lib --  terminated"   
  exit 1
endif
set FC_CMD = `cat lib/Makefile.${arch} | awk '{if(substr($1,1,1)!="#"){print $0}}' | grep FTN | grep '=' | tail -1 | awk -F= '{print $2}' | awk '{print $1}'`
echo Using Fortran Compiler: $FC_CMD
#${UNIMAKE_CMD} -m lib -c ${FC_CMD} -e ${arch} 
#exit

#  common libraries
echo ++++++++++++++++++++++++++++++++++++++++++
echo Make sure the common libraries are current
echo ++++++++++++++++++++++++++++++++++++++++++
echo " "
cd $TARGETDIR
${UNIMAKE_CMD} -m lib -c ${FC_CMD} -e ${arch} 
if( $status != 0 ) then
  echo "Failure in ${UNIMAKE_CMD} for lib --  terminated"   
  exit 1
endif
cd lib; ${MK_CMD}
if( $status != 0 ) then
   echo "Failure in ${UNIMAKE_CMD} for lib -- ${INST_PROG} terminated"   
   exit 1
endif

touch tmp.o; \rm -f *.o
echo Made lib


# then gmake (or check) the NR libraries
echo ++++++++++++++++++++++++++++++++++++++++++
echo Make sure the NR libraries are current
echo ++++++++++++++++++++++++++++++++++++++++++
echo " "
cd $TARGETDIR
${UNIMAKE_CMD} -m nr -c ${FC_CMD}  -e ${arch} 
if( $status != 0 ) then
  echo "Failure in ${UNIMAKE_CMD} for nr --  terminated"   
  exit 1
endif
cd nr; ${MK_CMD}
if( $status != 0 ) then
   echo "Failure in ${UNIMAKE_CMD} for nr -- ${INST_PROG} terminated"   
   exit 1
endif

touch tmp.o; \rm -f *.o
echo Made nr


# gmake the data libraries    

echo ' '
echo ++++++++++++++++++++++++++++++++++++
echo "Making the DATA libraries & programs"
echo ++++++++++++++++++++++++++++++++++++
echo " "
if (`uname` == "SunOS") then
    set PROGS = "write read site format combine interp lesq mdl niko offset outlier stat"
else
    set PROGS = "write read site format combine interp offset outlier demean"
endif
#set PROGS = ""
foreach PROG ( $PROGS )
    cd $TARGETDIR/data  
    ${UNIMAKE_CMD} -m ${PROG} -c ${FC_CMD} -e ${arch} 
    if( $status != 0 ) then
	echo "Failure in ${UNIMAKE_CMD} for ${PKG}/${PROG} -- ${INST_PROG} terminated"   
	exit 1
    endif   
    cd ${PROG}; ${MK_CMD}
    if( $status != 0 ) then
	echo "Failure in ${UNIMAKE_CMD} for ${PKG}/${PROG} -- ${INST_PROG} terminated"   
	exit 1
    endif
    touch tmp.o; \rm -f *.o  
    echo Made ${PROG} 
end

echo ' '
echo +++++++++++++++++++++++++++++++++++
echo "SAR libraries & programs"
echo +++++++++++++++++++++++++++++++++++
echo " "

set PROGS = "util overlap profile"
#set PROGS = ""
foreach PROG ($PROGS)
    cd $TARGETDIR/sar
    ${UNIMAKE_CMD} -m ${PROG} -c ${FC_CMD} -e ${arch} 
    if( $status != 0 ) then
	echo "Failure in ${UNIMAKE_CMD} for ${PKG}/${PROG} -- ${INST_PROG} terminated"   
	exit 1
    endif   
    cd ${PROG}; ${MK_CMD}
    if( $status != 0 ) then
	echo "Failure in ${UNIMAKE_CMD} for ${PKG}/${PROG} -- ${INST_PROG} terminated"   
	exit 1
    endif
    touch tmp.o; \rm -f *.o  
    echo Made ${PROG} 
end



echo ' '
echo +++++++++++++++++++++++++++++++++++
echo "Making the CME libraries & programs"
echo +++++++++++++++++++++++++++++++++++
echo " "

set PROGS = " corr stack cmc"
set PROGS = ""
foreach PROG ($PROGS)
    cd $TARGETDIR/cme  
    ${UNIMAKE_CMD} -m ${PROG} -c ${FC_CMD} -e ${arch} 
    if( $status != 0 ) then
	echo "Failure in ${UNIMAKE_CMD} for ${PKG}/${PROG} -- ${INST_PROG} terminated"   
	exit 1
    endif   
    cd ${PROG}; ${MK_CMD}
    if( $status != 0 ) then
	echo "Failure in ${UNIMAKE_CMD} for ${PKG}/${PROG} -- ${INST_PROG} terminated"   
	exit 1
    endif
    touch tmp.o; \rm -f *.o  
    echo Made ${PROG} 
end


echo " "
echo +++++++++++++++++++++++++++++++++++++++++
echo "Making the spectral libraries & programs" 
echo +++++++++++++++++++++++++++++++++++++++++
echo " "
set PROGS = "run_cats periodogram run_estn"
#set PROGS = ""
foreach PROG ($PROGS)
    cd $TARGETDIR/spectral  
    ${UNIMAKE_CMD} -m ${PROG} -c ${FC_CMD} -e ${arch} 
    if( $status != 0 ) then
	echo "Failure in ${UNIMAKE_CMD} for ${PKG}/${PROG} -- ${INST_PROG} terminated"   
	exit 1
    endif   
    cd ${PROG}; ${MK_CMD}
    if( $status != 0 ) then
	echo "Failure in ${UNIMAKE_CMD} for ${PKG}/${PROG} -- ${INST_PROG} terminated"   
	exit 1
    endif
    touch tmp.o; \rm -f *.o  
    echo Made ${PROG} 
end
     


echo " "
echo ++++++++++++++++++++++++++++++++++
echo Making the Data Center programs 
echo ++++++++++++++++++++++++++++++++++
echo " "
if (`uname` == "SunOS") then
    if (`uname -i` == "i86pc") then
        set PROGS = "check get   mysql"
    endif
else if ( `uname -s` == "Darwin" ) then
    set PROGS = "check get"
else
    set PROGS = "check get mysql"
    set PROGS = "check get "
endif
#set PROGS = ""
foreach PROG (${PROGS})
    cd $TARGETDIR/dc
    ${UNIMAKE_CMD} -m ${PROG} -c ${FC_CMD} -e ${arch} 
    if( $status != 0 ) then
	echo "Failure in ${UNIMAKE_CMD} for ${PKG}/${PROG} -- ${INST_PROG} terminated"   
	exit 1
    endif   
    cd ${PROG}; ${MK_CMD}
    if( $status != 0 ) then
	echo "Failure in ${UNIMAKE_CMD} for ${PKG}/${PROG} -- ${INST_PROG} terminated"   
	exit 1
    endif
    touch tmp.o; \rm -f *.o  
    echo Made ${PROG} 
end


echo " "
echo ++++++++++++++++++++++++++++++++++
echo Making the Analysis Center programs 
echo ++++++++++++++++++++++++++++++++++
echo " "
set PROGS = "run"
#set PROGS = ""
foreach PROG (${PROGS})
    cd $TARGETDIR/ac
    ${UNIMAKE_CMD} -m ${PROG} -c ${FC_CMD} -e ${arch} 
    if( $status != 0 ) then
	echo "Failure in ${UNIMAKE_CMD} for ${PKG}/${PROG} -- ${INST_PROG} terminated"   
	exit 1
    endif   
    cd ${PROG}; ${MK_CMD}
    if( $status != 0 ) then
	echo "Failure in ${UNIMAKE_CMD} for ${PKG}/${PROG} -- ${INST_PROG} terminated"   
	exit 1
    endif
    touch tmp.o; \rm -f *.o  
    echo Made ${PROG} 
end


echo " "
echo ++++++++++++++++++++++++++++++++++
echo Making the tools programs 
echo ++++++++++++++++++++++++++++++++++
echo " "
set PROGS = "rewindstdin xyzneu u2l xyz2wgs84 td2rnx rnxdc newpsf met2wfile llhxyz geoxyz hello fcomb fcf"
set PROGS = "hello rnxdc newpsf"
foreach PROG (${PROGS})
    cd $TARGETDIR/tools
    ${UNIMAKE_CMD} -m ${PROG} -c ${FC_CMD} -e ${arch} 
    if( $status != 0 ) then
	echo "Failure in ${UNIMAKE_CMD} for ${PKG}/${PROG} -- ${INST_PROG} terminated"   
	exit 1
    endif   
    cd ${PROG}; ${MK_CMD}
    if( $status != 0 ) then
	echo "Failure in ${UNIMAKE_CMD} for ${PKG}/${PROG} -- ${INST_PROG} terminated"   
	exit 1
    endif
    touch tmp.o; \rm -f *.o  
    echo Made ${PROG} 
end

echo "install_gpsf_links ${TARGETDIR} ${arch}"
${TARGETDIR}/install_igpsftk_links ${TARGETDIR} ${arch}

echo ''
echo ++++++++++++++++++++++++++++++
echo iGPS Fortran ToolKit installed 
echo ++++++++++++++++++++++++++++++
echo ''
