#!/bin/bash

# Name:
#   sh_slurm_intf_tops
#

# Purpose:
#   Queue gamit tasks to slurmd.

# Example:
#

# Modifications:
#

# Algorithm:
#

# Dependency:
#
PROG=sh_slurm_intf_tops

timestamp=`date | sed -e "s/ /_/g" | sed -e "s/:/-/g"`

usage_of_it(){
cat <<eob
$PROG
|_Submit intf_tops.csh jobs to SLURM.
|+
  -files for subswath processing (F1/F2/F3)
|<
  [-f|-file intf.in]
  [-c|-config batch_tops.config]
  [-d|-delay DELAY_BETWEEN_SUBMITTING_SECONDS]
  [-o|-overwrite OVERWRITE_EXISTING_SUBMIT]
  [-n|-nmax_job NUMBER_OF_MAXIMUM_JOBS_TO_SUBMIT]
|>
  slurm_intf_tops_*.cmd
  slurm_intf_tops_*.sh
|e.g.,
  ${PROG}
(c)iGPS (https://github.com/igps-ftk/)
eob
}

#if called by crontab
if [ -t 0 ]; then
    interactive=1
else
    interactive=0
    . ${HOME}/.bashrc
fi
#echo "interactive $interactive"
#if [ $interactive -eq 0 ]; then
#  . ${HOME}/.bashrc
#fi

#the directory to hold the interferograms, e.g. f123.1
COMB_DIR=`pwd`
ROOT_DIR=${COMB_DIR}/..

#--
# |-des_F?/asc_F?/
# |  |-intf/
# |  |-intf_all/
# |  |-raw/
# |  |-topo/
# |  |  |-dem.grd
# |  |  |-trans.dat
# |  |-batch_tops.config
# |  |-intf.in




#session name
tmp=`dirname ${COMB_DIR}/test.txt`
#echo tmp is $tmp
#echo COMB_DIR is $COMB_DIR
PROC_ID=`dirname ${tmp} | awk -F\/ '{print $NF}'`
COMB_ID=`basename ${tmp}`
#echo PROC_ID is $PROC_ID
#echo COMB_ID is $COMB_ID


#gamit processing directory, e.g.
PROC_DIR=/home/tianyf/gsar/
#echo "*Note: the daily processing will be in ${PROC_DIR}/TEMP/"

#Archive H-file directory
ARCHIVE_DIR=${COMB_DIR}/intf_all
mkdir -p $ARCHIVE_DIR

#Temporary files directory
TMP_DIR=`pwd`


overwrite=n
file_intf_in=intf.in
batch_config=batch_tops.config
delay=10
nmax_job=9999
is_no_delay_when_alloc=y

while [ "$1" != "" ]; do
  case $1 in
    -f|-file)
      file_intf_in=$2
      ;;
    -c|-config)
      batch_config=$2
      ;;
    -d|-delay)
      delay=$2
      ;;
    -o|-overwrite)
      overwrite=$2
      ;;
    -n|-nmax|-nmax_job)
      nmax_job=$2
      ;;
    -h|-help|--help)
      usage_of_it
      exit 1
      ;;
    *)
      usage_of_it
      echo ""
      echo -e "[$PROG]\033[1;33;41mERROR\033[0m: invalid option ($1)!!"
      exit 1
      ;;
  esac
  shift 2
done


#file_intf_in=intf.in
if [ ! -s $file_intf_in ]; then
  usage_of_it
  echo ""
  echo -e "[$PROG]\033[1;33;41mERROR\033[0m: input file not exist ($file_intf_in)!!"
  exit 1
fi

#batch_config=batch_tops.config
if [ ! -s $batch_config ]; then
  echo -e "[$PROG]\033[1;33;41mERROR\033[0m: processing configuation file not exist ($batch_config)!!"
  exit 1
fi

is_no_delay_when_alloc=`echo $delay | awk '{if($1<0){print "y"}else{print "n"}}'`
delay=`echo $delay | awk '{if($1<0){print -1*$1}else{print $1}}'`
#echo $is_no_delay_when_alloc $delay
#exit


n_job=0
n_skip=0
n_new=0
while read line; do
    if [ $n_job -gt $nmax_job ]; then
      echo "[$PROG]INFO: maximum number of job reached ($nmax_job)."
      break
    fi

    date1=`echo $line |awk -F":" '{print $1}'|cut -c 4-11`
    date2=`echo $line |awk -F":" '{print $2}'|cut -c 4-11`

    #echo $date1 $date2
    year1=`echo $date1 | awk '{print substr($1,1,4)}'`
    mon1=`echo $date1 | awk '{print substr($1,5,2)}'`
    day1=`echo $date1 | awk '{print substr($1,7,2)}'`
    doyr1=`doy $year1 $mon1 $day1 | head -1 | awk '{printf("%03d", $6-1)}'`
    #echo $year1 $mon1 $day1 $doyr1

    year2=`echo $date2 | awk '{print substr($1,1,4)}'`
    mon2=`echo $date2 | awk '{print substr($1,5,2)}'`
    day2=`echo $date2 | awk '{print substr($1,7,2)}'`
    doyr2=`doy $year2 $mon2 $day2 | head -1 | awk '{printf("%03d", $6-1)}'`
    #echo $year2 $mon2 $day2 $doyr2

    out_dir="${year1}${doyr1}_${year2}${doyr2}"
    #pwd
    #echo $out_dir

    echo "[$PROG]INFO: chekcing ./intf_all/${out_dir}/unwrap_mask.grd ..."
    if [ -s ./intf_all/${out_dir}/unwrap_mask.grd ]; then
      echo "[$PROG]INFO: already done ($out_dir). Skipped."
      n_skip=`expr $n_skip + 1`
      continue
    fi

    echo "[$PROG]INFO: queuing $out_dir ..."
    #continue
    #exit

    cmdfile=slurm_intf_tops_${date1}_${date2}.cmd

    if [ -s "${ARCHIVE_DIR}/${date1}_${date2}/unwrap_mask_ll.png" ]; then
      if [ "$ovewrite" == "n" ]; then
        echo "[$PROG]INFO:output already! Skipped."
        n_skip=`expr $n_skip + 1`
        continue
      fi
    else
      if [ -s "$cmdfile" -a "$overwrite" == "n" ]; then
        echo "[$PROG]INFO:already queued! Skipped."
        continue
      fi
    fi

    logfile="slurm_intf_tops_"$date1"_"$date2".log"
     infile="slurm_intf_tops_"$date1"_"$date2".in"

    echo $line > $infile
    #cmdfile=slurm_intf_tops_${date1}_${date2}.cmd
    echo "which gmt" > $cmdfile
    echo 'echo $PATH' >> $cmdfile
    echo 'which intf.csh' >> $cmdfile
    echo "intf_tops.csh $infile $batch_config" >> $cmdfile

    #dir_name=`echo $line | awk -F, '{print $1}' | awk -F: '{print $1}' | awk -F"/" '{print $(NF-1)}'`

    dir_name="${date1}_${date2}"
    echo dir_name $dir_name
    file_t=${COMB_DIR}/slurm_intf_tops_${dir_name}.sh
    #check whether already done
    #

    tmp=`date | sed -e 's/ /_/g' | sed -e 's/:/-/g'`


    echo "#!/bin/bash" > $file_t
    echo "#SBATCH --job-name=${dir_name}-${COMB_ID}-${PROC_ID}" >> $file_t
    echo "#SBATCH --nodes=1" >> $file_t
    echo "#SBATCH --ntasks=1" >> $file_t
    echo "#SBATCH --cpus-per-task=1" >> $file_t
    echo "pwd; hostname; date" >> $file_t

    path_t=${PROC_DIR}/temp/${tmp}-${PROC_ID}-${COMB_ID}-${dir_name}
    echo "mkdir -p $path_t " >> $file_t
    # make links
    echo "cd ${path_t}" >> $file_t
    echo "ln -s ${COMB_DIR}/raw" >> $file_t
    echo "ln -s ${COMB_DIR}/topo" >> $file_t
    echo "ln -s ${COMB_DIR}/batch_tops.config" >> $file_t
    echo "mkdir -p intf_all" >> $file_t
    echo "pwd" >> $file_t

    echo "ln -s ${COMB_DIR}/$cmdfile" >> $file_t
    echo "ln -s ${COMB_DIR}/$infile" >> $file_t



    echo 'date' >> $file_t
    echo '#sleep 3' >> $file_t
    echo "sh $cmdfile >& $logfile" >> $file_t
    echo "hostname >> $logfile" >> $file_t

    echo "tmp=\`ls intf_all/ | grep _ \`" >> $file_t
    echo "if [ \"\$tmp\" != \"\" ]; then" >> $file_t
    echo "  mv intf_all/\$tmp ${ARCHIVE_DIR}/" >> $file_t
    echo "" >> $file_t
    echo "" >> $file_t
    echo "" >> $file_t

#    echo "if [ -s \"${dir_name}/unwrap_mask_ll.png\" ]; then " >> $file_t
#    echo "  mv intf_all/${dir_name} ${ARCHIVE_DIR}/" >> $file_t
    echo "fi" >> $file_t
    echo "\cp -f $logfile ${COMB_DIR}" >> $file_t

    echo 'date' >> $file_t

    echo $file_t
    #cat $file_t
    pwd
    #sleep .1
    sbatch $file_t
    n_new=`expr $n_new + 1`

    tmp1=`sinfo | grep intf | grep -i idle`
    tmp2=`sinfo | grep intf | grep -i mix`
    tmp="${tmp1}${tmp2}"
    #echo "tmp1|$tmp1|"
    #echo "tmp2|$tmp2|"
    #echo "tmp|$tmp|"
    if [ "$tmp" != "" -a "$is_no_delay_when_alloc" != "y" -a $delay -gt 0 ]; then
      echo "[$PROG]INFO:waiting $delay seconds to submit next job ..."
      sleep $delay
    fi
    #exit

    n_job=`expr $n_job + 1`
done < $file_intf_in


sinfo
#squeue

echo "[$PROG]INFO: $n_new jobs submitted and $n_skip skipped."
echo "[$PROG]INFO: done."