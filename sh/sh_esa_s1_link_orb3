#!/bin/sh

. ${HOME}/.bashrc


if [ "$esa_data" = "" ]; then
    echo "[ERROR]ESA environment variable esa_data must be set first! Stopped."
    exit 1
fi

orbit=aux_poeorb
files_tiff=

while [ "$1" != "" ]; do
    case $1 in
        -orbit)
            orbit=$2
            ;;
        -files)
            files_tiff=$2
            ;;
        *)
            echo "Invalid option $1 !"
            exit 1
            ;;
    esac
    shift 2
done

path_poeorb=${esa_data}/aux_poeorb
path_resorb=${esa_data}/aux_resorb


oldyear=

if [ "$files_tiff" == "" ]; then
  files_tiff=`ls *.tiff`
fi

echo path_poeorb $path_poeorb
echo path_resorb $path_resorb
for file_tiff in $files_tiff; do
    year=`basename $file_tiff | awk -F- '{print substr($5,1,4)}'`
    #echo year is $year
    if [ "$oldyear" != $year ]; then
      oldyear=$year
      files_poeorb=`find ${path_poeorb}/${year} -maxdepth 1 -name "*.EOF"` >& /dev/null
      files_resorb=`find ${path_resorb}/${year} -maxdepth 1 -name "*.EOF"` >& /dev/null
    fi
    
    if [ "$files_poeorb" == "" ]; then
      if [ "$files_resorb" == "" ]; then
        echo "[]ERROR:no orbit files for ${file_tiff}!!"
        continue
      else
        tmp=`esa_s1_tiff_EOFs $file_tiff $files_resorb | head -1`
        file_orb=`echo $tmp | awk '{print $2}'`
        if [ "$file_orb" = "" ]; then
          echo "[]ERROR:orbit file not found for ${file_tiff}!!"
          continue
          #exit 1
        fi
      fi
      
    else
      tmp=`esa_s1_tiff_EOFs $file_tiff $files_poeorb | head -1`
      file_orb=`echo $tmp | awk '{print $2}'`
      if [ "$file_orb" = "" ]; then
                echo "[]INFO: OOD Precise Orbit NOT found! Trying POD Restituted Orbit [AUX_RESORB]."
                tmp=`esa_s1_tiff_EOFs $file_tiff $files_resorb | head -1`
                file_orb=`echo $tmp | awk '{print $2}'`
                if [ "$file_orb" = "" ]; then
                  echo "[]ERROR:orbit file not found for ${file_tiff}!!"
                  continue
                  #exit 1
                fi
      fi
    fi
    
    if [ ! -s `basename $file_orb` ]; then
      \rm -rf `basename $file_orb`
      echo "ln -s $file_orb" | sh
    fi
    echo " $file_tiff `basename $file_orb`"
    #exit
done
