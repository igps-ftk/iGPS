#!/bin/sh

# Name:
#   sh_tdefnode_plot_result
#

# Purpose:
#

# Example:
#

# Modifications:
#

# Algorigthm:
#

# Dependency:
#

PROG=sh_tdefnode_plot_result


path_old=`pwd`

usage(){
  echo "[$PROG]Usage: ${PROG} "
  echo "[$PROG]Usage: e.g.,"
  echo "[$PROG]Usage:  "
}

ofile=

is_plot_fault_grid=n
is_plot_gnss_raw=n
is_plot_gnss_cal=n
is_plot_gnss_res=n
is_plot_mid_vec=y
is_plot_phi=n
is_plot_surface_node=n
is_plot_up_raw=n
is_plot_up_cal=n
is_plot_up_res=n

#scale factor for plot velocity vectors
se_sf=.05
se_sf=.1

while [ "$1" != "" ]; do
  case $1 in
    -n|-nline)
      nline_out=$2
      shift 2
      ;;
    -o|-ofile)
      ofile=$2
      shift 2
      ;;
    -se_sf)
      se_sf=$2
      shift 2
      ;;
    +gr)
      is_plot_fault_grid=y
      shift 1
      ;;
    +node)
      is_plot_surface_node=y
      shift 1
      ;;
    +phi)
      is_plot_phi=y
      shift 1
      ;;
    +raw)
      is_plot_gnss_raw=y
      shift 1
      ;;
    -raw)
      is_plot_gnss_raw=n
      shift 1
      ;;
    +cal)
      is_plot_gnss_cal=y
      shift 1
      ;;
    -cal)
      is_plot_gnss_cal=n
      shift 1
      ;;
    +res)
      is_plot_gnss_res=y
      shift 1
      ;;
    -res)
      is_plot_gnss_res=n
      shift 1
      ;;
    #uplift
    +uraw)
      is_plot_up_raw=y
      shift 1
      ;;
    -uraw)
      is_plot_up_raw=n
      shift 1
      ;;
    +ucal)
      is_plot_up_cal=y
      shift 1
      ;;
    -ucal)
      is_plot_up_cal=n
      shift 1
      ;;
    +ures)
      is_plot_up_res=y
      shift 1
      ;;
    -ures)
      is_plot_up_res=n
      shift 1
      ;;      
    *)
      echo "[$PROG]ERROR: invalid option ($1)!!"
      usage
      exit 1
      ;;
  esac
done


gmt gmtset PAPER_MEDIA             = a3

if [ -f *.sum ] ; then
	MODL=`ls *.sum | awk '{print substr($1,1,4)}'`
	echo "$name: model name $MODL"
else
	echo "$name: Could not find model files."
fi
if [ "${MODL}" == "" ]; then
  echo "[$PROG]ERROR: model is not given(${MODL})!!"
  exit 1
fi
if [ ! -s "${MODL}.sum" ]; then
  echo "[$PROG]ERROR: model result (${MODL}.sum) not exist or empty!!"
  exit 1
fi

if [ "$ofile" == ""  ]; then
  ofile=fig-${MODL}.ps
fi


file_cov=${MODL}.cov              #- covariance matrix ('+wcv')
file_der=${MODL}.der              #- derivatives matrix ('+wdr')
file_dgt=${MODL}.dgt              #- residual strain rates and rotations for blocks (+dgt)
file_hcs=${MODL}.hcs              #- result of hard constraints (HC:)
file_nod=${MODL}.nod              #- summary of node information 
file_dsum=${MODL}.dsum            #- observed and calculated displacements (DS:)
file_vsum=${MODL}.vsum            #- observed and calculated velocity vectors (GP:)
file_poles=${MODL}.poles          #- summary of poles (relative poles for all block pairs)
file_strain=${MODL}.strain        #- summary of strain rate tensors
file_prm=${MODL}.prm              #- input parameters
file_prm_in=${MODL}_prm.in        #- input parameters
file_prm_out=${MODL}_prm.out      #- output parameters
file_srs=${MODL}.srs              #- summary of fits to slip rate data (SR:)
file_sss=${MODL}.sss              #- summary of fits to strain rate data (SS:)
file_sum=${MODL}.sum              #- summary of fits to data, poles, blocks
file_svs=${MODL}.svs              #- summary of fits to slip vectors/fault azimuths (SV:)
file_tlt=${MODL}.tlt              #- summary of fits to tilt rate data (TI:)
file_flt_atr=${MODL}_flt_atr.gmt  #- interseismic fault locking distributions for all faults
file_flt_FFF_atr=${MODL}_flt_FFF_atr.gmt  #- interseismic fault locking distribution for single fault number FFF (+atr)
file_blocks=${MODL}_blocks.out            #- block information output (see below)
file_grid_N_vec=${MODL}_grid_N.vec        #- predicted vectors for grid points in psvelo format, N is grid number (GR:)
file_grid_N_info=${MODL}_grid_N.info      #- predicted vectors for grid points, N is grid number (GR:)
file_grid_N_strain_atr=${MODL}_grid_N_strain_atr.gmt       #- grid of strain rates, N is grid number (GR:)
file_fslip=${MODL}_fslip.out      #- relative velocities at requested points (FS:)
file_info=${MODL}_info.out        #- information on each subsegment of faults (+inf)
file_model=${MODL}_model.input    #- poles, block boundaries and faults in control file format
file_control=${MODL}_control.backup       #- copy of control file
file_mid_vec=${MODL}_mid.vec              #- relative block vectors on faults at midpoints between surface nodes
file_pPPP=${MODL}_pPPP.out                # - output for profile number PPP (PR:)
file_removed_vec=${MODL}_removed.vec      #- vectors removed from inversion (RM:, etc)
file_sa=${MODL}_sa.out            #- summary of simulated annealing run with final solution (+sim)
file_IIII=${MODL}_IIII.insar      #- InSAR output (IS:)
file_LLLL=${MODL}_LLLL.level      #- Leveling output (LV:)

file_blk=${MODL}_blk.gmt
file_profile=${MODL}_lin.gmt 

R=`gmt gmtinfo -I1 ${file_blk}`
#R=-R1/2/3/4
XMIN=`echo $R | awk '{print substr($1,3)}' | awk -F\/ '{print $1}'`
XMAX=`echo $R | awk '{print substr($1,3)}' | awk -F\/ '{print $2}'`
YMIN=`echo $R | awk '{print substr($1,3)}' | awk -F\/ '{print $3}'`
YMAX=`echo $R | awk '{print substr($1,3)}' | awk -F\/ '{print $4}'`
step_X=`echo $XMIN $XMAX | awk '{print ($2-$1)/20}'`
step_Y=`echo $YMIN $YMAX | awk '{print ($2-$1)/20}'`
echo $XMIN $XMAX $YMIN $YMAX
#exit

#block outline
gmt psxy ${file_blk} -JM9i $R -B2f1/2f1/EWSN -W.5p,gray -P -K > ${ofile}

# filled blocks, fill color based on pole number
zmax=`grep -h '>' ${file_blk} | awk '{print $3*5}' | sort -n | tail -1`
echo zmax $zmax
#exit
gmt makecpt -Cgray -T0/${zmax}/1 -Z -I > blk.cpt
#gmt makecpt -Crainbow -T0/3/1 -Z > blk.cpt
#cat blk.cpt
awk '{ if ($1 ==">") print $1,$2$4; else print $1,$2 }' ${file_blk} | gmt psxy  -Cblk.cpt -V -L -R -J -O -K>> ${ofile}


#block label
awk ' { print $2, $3, " 12 0 0 CM ", $1 } ' ${file_blocks} | gmt pstext -W255/255/255  -R -J -O -K>> ${ofile}

# plot pole positions (dot) and error ellipses
#awk ' { print $4, $5 } ' ${file_blocks} | gmt psxy -Sc0.1i -R -J -O -K >> $ofile
#awk ' { print $4, $5, $8, $9*111.2, $10*111.2 } ' ${file_blocks} | gmt psxy -SE -R -J -O -K >> $ofile

# principle axes for block strain rates
#awk ' { print $2, $3, $21, $19, $23 } ' ${file_blocks} | gmt psvelo -Sx1 -R -J -O -K >> $ofile


if [ "$is_plot_phi" == "y" ]; then
  palette=seis
  palette=jet
  gmt makecpt -C$palette -T0/45/.3 > vel-phi.cpt
  ## make vel-phi map
  awk '{ if ($1 ==">") print $1,$2,$4; else print $1,$2 }' ${file_flt_atr} > .tmp.vel-phi
  #gmt psxy -R -J -L  -Cvel-phi.cpt -O -K .tmp.vel-phi >> $ofile
  #exit
  
  ## plot phi
  echo "plot coupling (phi)"
  gmt makecpt -C$palette  -Z -T0.0/1.0/0.05 > phi.cpt
  awk '{ if ($1 ==">") print $1,$2$5; else print $1,$2 }' ${file_flt_atr} > .tmp.phi
  gmt psxy -R -J -L  -Cphi.cpt -O -K .tmp.phi >> $ofile
  
  gmt psscale -D1.5i/.6i/2i/.2ih    -O -Cphi.cpt -K  -B.2f.1::/:"@%12%\152@%%":  >> $ofile
 
fi

#plot fault grid
if [ "$is_plot_fault_grid" == "y" ]; then
  gmt makecpt -Crainbow -T-50/50/.1 -Z > my.cpt
  awk '{ if ($1 ==">") print $1,$2,$8; else print $1,$2 }' ${file_flt_atr}  | gmt psxy -Cmy.cpt -L -R -J -O -K -W.2p,gray -m>> $ofile
fi

#profile lines
#gmt psxy ${MODL}_lin.gmt -R -J -W4/0/20/200t5_5:5 -O -K -m >> ${ofile}


## *MODL.nod* Summary of node information
##1. Fault name (10-char)
##2. Fault number
##3. Node X index
##4. Node Z index
##5. Hanging wall block name
##6. Foot wall block name
##7. Node Longitude
##8. Node Latitude
##9. Node depth
##10. Node phi
##11. Node phi 1-sigma uncertainty
##12. Fault East slip rate (mm/yr)
##13. Fault North slip rate (mm/yr)
##14. Fault East slip rate  1-sigma uncertainty (mm/yr)
##15. Fault North slip rate  1-sigma uncertainty (mm/yr)
##16. Fault slip rate NE correlation
##17. East component of slip deficit rate (mm/yr)
##18. North component of slip deficit rate (mm/yr)
##19. Azimuth of slip at node (Hanging wall relative to foot wall)
##20. Along strike distance of node (from first node) in km
##21. Across strike (horizontal) distance of node from surface node updip from it, in km
##22. Downdip distance of node from surface node updip from it, in km
##23. Fault strike at node
##24. Fault dip at node
##25. Moment (rate) associated with this node in N-m

#all fault nodes
awk '{print $7, $8}' ${file_nod} | gmt psxy -Sc.05c -W.5p,orange -R -J -O -K >> ${ofile}

#surface node
if [ "$is_plot_surface_node" == "y" ]; then
  awk '{if ($4==1) print $7, $8}' ${file_nod} | gmt psxy -Sc.075c -Gblue -W.5p,orange -Gred -R -J -O -K >> ${ofile}
  awk '{if ($4==1) print $7, $8, " 3 0 0 LT ", $2}' ${file_nod} | gmt pstext -R -J -O -K >> $ofile
fi

if [ "$is_plot_mid_vec" == "y" ]; then
  # plot fault slip vectors halfway between fault nodes
  awk '{ print $1, $2, $3, $4, $5, $6, $7, $8 }' ${file_mid_vec} | gmt psvelo -R -J -W0.35p,blue -Gblue -Se${se_sf}/0.95/0   -L -A6p+e  -O -K >> ${ofile}
  #awk '{ print $3, $4, $5, $6, $7, $8, $9, $10 }' ${file_mid_vec}
fi

## *MODL.vsum* ---- summary of velocities
## 1 Site name
## 2 Data code
## 3 Block code
## 4 Pole code
## 5 E flag (1=used, 0=not)
## 6 N flag (1=used, 0=not)
## 7 U flag (1=used, 0=not)
## 8 Longitude
## 9 latitude
##10 Year 1
##11 Year 2
##12 E observed
##13 E calculated
##14 E residual
##15 E 1-sigma uncertainty
##16 E res/sigma
##17 N observed
##18 N calculated
##19 N residual
##20 N 1-sigma uncertainty
##21 N res/sigma
##22 U observed
##23 U calculated
##24 U residual
##25 U 1-sigma uncertainty
##26 U res/sigma
##27 rho observed (NE)
##28 E calculated elastic velocity
##29 N calculated elastic velocity
##30 U calculated elastic velocity
##31 E calculated elastic velocity 1-sigma uncertainty (not yet calculated)
##32 N calculated elastic velocity 1-sigma uncertainty (not yet calculated)
##33 U calculated elastic velocity 1-sigma uncertainty (not yet calculated)
##34 E calculated strain rate velocity
##35 N calculated strain rate velocity
##36 E calculated strain rate velocity 1-sigma uncertainty (not yet calculated)
##37 N calculated strain rate velocity 1-sigma uncertainty (not yet calculated)
##38 E calculated rotation velocity
##39 N calculated rotation velocity
##40 E calculated rotation velocity 1-sigma uncertainty
##41 N calculated rotation velocity 1-sigma uncertainty
##42 NE calculated rotation correlation
##43 E calculated network velocity
##44 N calculated network velocity
##45 E calculated network velocity 1-sigma uncertainty
##46 N calculated network velocity 1-sigma uncertainty
##47 NE calculated network correlation
##48 E component of MR velocity
##49 N component of MR velocity
##50 U component of MR velocity
##51 Sum of squares of weighted residuals (E,N,U)
##52 Site elevation

#GPS raw vectors
#file=${MODL}.obs

if [ "$is_plot_gnss_raw" == "y" ]; then
  #gmt psvelo ${file} -Se${se_sf}/0.65/0 -R -J -O -K>> ${ofile}
  #gmt psxy ${file} -Sc0.073c -Wwhite -Gwhite -R -J -O -K>> ${ofile}
  #gmt psvelo -R -J -W0.35p,black -Gblack -Se${se_sf}/0.95/0   -L -A6p+e  ${file} -O -K>> $ofile
  grep -v '^#' ${file_vsum}  | awk '{print $8,$9,$12,$17,$15,$20,$27,tolower($1) }' | gmt psvelo -R -J -W0.35p,black -Gblack -Se${se_sf}/.95/0   -L -A6p+e  -O -K >> ${ofile}
fi

#plot the GPS modeled
if [ "$is_plot_gnss_cal" == "y" ]; then
  #grep '^ ' ${MODL}.res  | awk '{print $1,$2,$3,$4,$5,$6,$7,tolower($8) }' |gmt psvelo -Se${se_sf}/0.7/0 -R -W.25p,red -Gred -J -O -K >> ${ofile}
  #grep '^ ' ${MODL}.vec  | awk '{print $1,$2,$3,$4,$5,$6,$7,tolower($8) }' | gmt psvelo -R -J -W0.35p,blue -Gblue -Se${se_sf}/0.95/0   -L -A6p+e  -O -K >> ${ofile}
  grep -v '^#' ${file_vsum}  | awk '{print $8,$9,$13,$18,$15,$20,$27,tolower($1) }' | gmt psvelo -R -J -W0.35p,blue -Gblue -Se${se_sf}/.95/0   -L -A6p+e  -O -K >> ${ofile}
fi

#plot the GPS residual
if [ "$is_plot_gnss_res" == "y" ]; then
  #grep '^ ' ${MODL}.res  | awk '{print $1,$2,$3,$4,$5,$6,$7,tolower($8) }' |gmt psvelo -Se${se_sf}/0.7/0 -R -W.25p,red -Gred -J -O -K >> ${ofile}
  #grep '^ ' ${MODL}.res  | awk '{print $1,$2,$3,$4,$5,$6,$7,tolower($8) }' | gmt psvelo -R -J -W0.35p,red -Gred -Se${se_sf}/0.95/0   -L -A6p+e  -O -K >> ${ofile}
  grep -v '^#' ${file_vsum}  | awk '{print $8,$9,$14,$19,$15,$20,$27,tolower($1) }' | gmt psvelo -R -J -W0.35p,red -Gred -Se${se_sf}/.95/0   -L -A6p+e  -O -K >> ${ofile}
fi

if [ "$is_plot_gnss_raw" == "y" -o "$is_plot_gnss_cal" == "y" -o "$is_plot_gnss_res" == "y" ]; then
  lon_v=`echo $XMIN $XMAX | awk '{print ($1+$2)/2 }'`
  lat_v=`echo $YMIN $step_Y | awk '{print $1+$2}'`
  gmt psvelo -R -J -W1p,black -Gblack -Se${se_sf}/.95/12   -L -A9p+e  -O -K <<eof >> ${ofile}
  $lon_v $lat_v 10 0 1 1 0 10mm/yr
eof
fi


#uplift
if [ "$is_plot_up_raw" == "y" ]; then
  #gmt psvelo ${file} -Se${se_sf}/0.65/0 -R -J -O -K>> ${ofile}
  #gmt psxy ${file} -Sc0.073c -Wwhite -Gwhite -R -J -O -K>> ${ofile}
  #gmt psvelo -R -J -W0.35p,black -Gblack -Se${se_sf}/0.95/0   -L -A6p+e  ${file} -O -K>> $ofile
  grep -v '^#' ${file_vsum}  | awk '{print $8,$9,0,$22,$25,$25,0,tolower($1) }' | gmt psvelo -R -J -W0.35p,black -Gblack -Se${se_sf}/0.95/0   -L -A6p+e  -O -K >> ${ofile}
fi

#plot the GPS modeled
if [ "$is_plot_up_cal" == "y" ]; then
  #grep '^ ' ${MODL}.res  | awk '{print $1,$2,$3,$4,$5,$6,$7,tolower($8) }' |gmt psvelo -Se${se_sf}/0.7/0 -R -W.25p,red -Gred -J -O -K >> ${ofile}
  #grep '^ ' ${MODL}.vec  | awk '{print $1,$2,$3,$4,$5,$6,$7,tolower($8) }' | gmt psvelo -R -J -W0.35p,blue -Gblue -Se${se_sf}/0.95/0   -L -A6p+e  -O -K >> ${ofile}
  grep -v '^#' ${file_vsum}  | awk '{print $8,$9,0,$23,$25,$25,0,tolower($1) }' | gmt psvelo -R -J -W0.35p,blue -Gblue -Se${se_sf}/.95/0   -L -A6p+e  -O -K >> ${ofile}
fi

#plot the GPS residual
if [ "$is_plot_up_res" == "y" ]; then
  #grep '^ ' ${MODL}.res  | awk '{print $1,$2,$3,$4,$5,$6,$7,tolower($8) }' |gmt psvelo -Se${se_sf}/0.7/0 -R -W.25p,red -Gred -J -O -K >> ${ofile}
  #grep '^ ' ${MODL}.res  | awk '{print $1,$2,$3,$4,$5,$6,$7,tolower($8) }' | gmt psvelo -R -J -W0.35p,red -Gred -Se${se_sf}/0.95/0   -L -A6p+e  -O -K >> ${ofile}
  grep -v '^#' ${file_vsum}  | awk '{print $8,$9,0,$24,$25,$25,0,tolower($1) }' | gmt psvelo -R -J -W0.35p,red -Gred -Se${se_sf}/.95/0   -L -A6p+e  -O -K >> ${ofile}
fi

if [ "$is_plot_up_raw" == "y" -o "$is_plot_up_cal" == "y" -o "$is_plot_up_res" == "y" ]; then
  lon_v=`echo $XMAX $step_X | awk '{print ($1-3*$2) }'`
  lat_v=`echo $YMIN $step_Y | awk '{print $1+$2}'`
  gmt psvelo -R -J -W1p,black -Gblack -Se${se_sf}/0.95/12   -L -A9p+e  -O -K <<eof >> ${ofile}
  $lon_v $lat_v 0 5 1 1 0 5mm/yr
eof
fi

gmt pstext -R0/100/0/100 -JX5i -F+f1+a0+jCM  -Y-.5i -O  <<end >> $ofile
50 2 
end

echo converting
gmt ps2raster -A -Tj ${ofile}
gmt ps2raster -A -Tf ${ofile}
