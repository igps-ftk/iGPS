#!/bin/sh

# Name:
#   sh_sar_eof2kml
#   

# Purpose:
#   

# Example:
#   

# Modifications:
#   

# Algorigthm:
#   Supposed to run in F? directory.

# Dependency:
#   


PROG=sh_sar_eof2kml

dfile=data.in
file=
ifile=
ofile=orb.psxy

t1=2021-09-14T10:59:01
t2=2021-09-14T10:59:40

t1=0000-01-01T00:00:00
t2=9999-01-01T00:00:00

while [ "$1" != "" ]; do
  case $1 in
    -d|-dfile)
      dfile=$2
      ;;
    -f|-file)
      file=$2
      ;;
    -i|-ifile)
      ifile=$2
      ;;
    -o|-ofile)
      ofile=$2
      ;;
    -t1)
      t1=$2
      ;;
    -t2)
      t2=$2
      ;;
    *)
      echo "[$PROG]ERROR: invalid option ($1)!!"
      echo "[$PROG]Usage: ${PROG} "
      echo "[$PROG]Usage: e.g.,"
      echo "[$PROG]Usage: ${PROG} "
      exit 1
      ;;
  esac
  shift 2  
done


#data.in
# s1a-iw1-slc-vv-20141026t231118-20141026t231258-003007-0036ce-001:S1A_OPER_AUX_POEORB_OPOD_20141116T123700_V20141025T225944_20141027T005944.EOF
if [ "$dfile" != "" ]; then
  if [ -s $dfile ]; then
    file=`grep -h '^ ' $dfile | head -1 | awk -F: '{print $2}'`
    file="./raw/$file"
    tid=` grep -h '^ ' $dfile | head -1 | awk -F- '{print substr($5,1,8)}'`
    tiffiles=`find ./raw0/ -maxdepth 1 -type l -name "s1*-${tid}*.tiff" | sort | awk -F\/ '{print $NF}'`
    t1=`echo $tiffiles | awk '{print $1}' | awk -F- '{print toupper($5)}'`
    t2=`echo $tiffiles | awk '{print $NF}' | awk -F- '{print toupper($6)}'`
  fi
fi

#echo file $file
#echo tid $tid
#echo tiffiles $tiffiles
#echo t1 $t1
#echo t2 $t2
#exit

if [ "$file" == "" ]; then
  echo "[]ERROR: no orbit file (*.EOF) given!!"
  exit 1
fi


if [ "$ofile" == "" ]; then
  echo "[]ERROR: no output file!!"
  exit 1
fi


if [ "$ifile" != "" ]; then
#  S1A_IW_SLC__1SSV_20141026T231206_20141026T231233_003007_0036CE_9603.manifest.safe           0.76376147
  tid=`grep -h '^ ' $ifile | head -1 | awk -F_ '{print substr($6,1,8)}'`
  t1=`grep -h '^ ' $ifile | grep "_${tid}T" | head -1 | awk -F_ '{print $6}'`
  t2=`grep -h '^ ' $ifile | grep "_${tid}T" | tail -1 | awk -F_ '{print $7}'`
fi

#echo t1 $t1
#echo t2 $t2

tlen=`echo $t1 | awk '{print length($1)}'`
#echo tlen $tlen
if [ $tlen -eq 15 ]; then
  t1=`echo $t1 | awk '{print substr($1,1,4)"-"substr($1,5,2)"-"substr($1,7,5)":"substr($1,12,2)":"substr($1,14)}'`
fi

tlen=`echo $t2 | awk '{print length($1)}'`
#echo tlen $tlen
if [ $tlen -eq 15 ]; then
  t2=`echo $t2 | awk '{print substr($1,1,4)"-"substr($1,5,2)"-"substr($1,7,5)":"substr($1,12,2)":"substr($1,14)}'`
fi
#exit


t1a=`echo $t1 | sed -e 's/T/ /g'`
t2a=`echo $t2 | sed -e 's/T/ /g'`
#echo t1a $t1a
#echo t2a $t2a

t1b=`date -d "$t1a" +%s`
t2b=`date -d "$t2a" +%s`
echo t1b $t1b
#exit

cat $file | grep '<X unit="m">' | awk -F\> '{print $2}' | awk -F\< '{print $1}' > _X
cat $file | grep '<Y unit="m">' | awk -F\> '{print $2}' | awk -F\< '{print $1}' > _Y
cat $file | grep '<Z unit="m">' | awk -F\> '{print $2}' | awk -F\< '{print $1}' > _Z
cat $file | grep '<UT1>' | awk -F\> '{print $2}' | awk -F\< '{print $1}' | awk -F= '{print $2}' > _UT1

echo "[]INFO:converting time strings ..."
cat _UT1 | sed -e 's/T/ /g' > _UT1b
date +%s -f _UT1b > _UT1c

paste _X _Y _Z _UT1 _UT1c> _XYZU

#cat _XYZU | grep '2021-09-14T10:5' > _tmp_xyzu
cat _XYZU  > _tmp_xyzu


echo "[]INFO:filtering times ..."
cat _tmp_xyzu | awk '{if($5>=t1b&&$5<=t2b){print $0}}' t1b=$t1b t2b=$t2b > _tmp_xyzu2

echo "[]INFO:converting XYZ to LLH ..."
\rm -f $ofile
while read line; do
  echo "[]INFO:converting $line ..."  
  x=`echo $line | awk '{print $1}'`
  y=`echo $line | awk '{print $2}'`
  z=`echo $line | awk '{print $3}'`
  tmp=`llhxyz $x $y $z 2 | head -1`
  lat=`echo $tmp | awk '{print $1}'`
  lon=`echo $tmp | awk '{print $2}'`
  hgt=`echo $tmp | awk '{print $3}'`
  echo "> -L${t3}" >> $ofile
  echo "$lon $lat" >> $ofile
  #break
done < _tmp_xyzu2

gmt2kml -Fs -W1p,red $ofile -Sn.1 > ${ofile}.kml
echo "[]INFO:normal end."
