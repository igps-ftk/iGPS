#!/bin/bash

# Name:
#   sh_gnss_correct_insar_vel
#

# Purpose:
#   + Rotate InSAR LOS velocities into GNSS LOS direction.

# Input:
#   + GNSS velocity file generated by sh_gnss_psvelo2los

# Output:
#   +

# Example:
#   +

# Algorithm:
#   + Modified from GMTSAR's correct_insar_with_gnss.csh script.

# Modifications:
#   + Created on Mon Mar 20 15:48:06 CST 2023 by tianyf
#   +

# Dependency:
#   +
#


PROG=sh_gnss_correct_insar_vel

timestamp=`date | sed -e "s/ /_/g" | sed -e "s/:/-/g"`

path_old=`pwd`

usage_of_it(){
cat <<eob
$PROG
|_Rotate InSAR LOS velocities into GNSS LOS direction.
|+
  -output from sh_gnss_vel2los (-g)
  -InSAR velocity grid (-v)
|<
  [-g|-gnss GNSS_VELOCITY_PSVELO]
    default: wang_shen_2019JB018774_Table.S4.psvelo.los
  [-v|-vel INSAR_VELOCITY_GRID]
    default: vel_mask_ll.grd
  [-N|-m|-model GRDTREND_n_model[+r]]
    default: 3r
|e.g.,
  ${PROG}
  ${PROG} -N 9r
(c)iGPS (https://github.com/igps-ftk/)
eob
}

#if [ $# -lt 2 ]; then
#  usage_of_it
#  #exit 1
#fi

file_vel=vel_mask_ll3.grd
file_vel=vel_mask.grd
file_vel=vel_mask_ll.grd

file_gnss_los=Table.S4.psvelo.los
file_gnss_los=Table.S4.psvelo.los
file_gnss_los=wang_shen_2019JB018774_Table.S4.psvelo.los
ofile=

file_prm=master.PRM
N=3r

while [ "$1" != "" ]; do
  case $1 in
    -g|-gnss)
      file_gnss_los=$2
      ;;
    -v|-vel)
      file_vel=$2
      ;;
    -N|-m|-model)
      N=$2
      ;;
    -h|-help|--help)
      usage_of_it
      exit 1
      ;;
    *)
      echo -e "[$PROG]\033[1;33;41mERROR\033[0m: invalid option ($1)!!"
      usage_of_it
      exit 1
      ;;
  esac
  shift 2
done

if [ ! -s $file_vel ]; then
  echo -e "[$PROG]\033[1;33;41mERROR\033[0m: InSAR velocity file not exist ($file_vel)!!"
  exit 1
fi

if [ ! -s $file_gnss_los ]; then
  echo -e "[$PROG]\033[1;33;41mERROR\033[0m: GNSS (los) file not exist ($file_gnss_los)!!"
  exit 1
fi

if [ "$ofile" == "" ]; then
  tmp1=`basename $file_vel`
  ofile="${tmp1%.*}_gnss.grd"
  echo "[$PROG]INFO: output to $ofile"
fi
tmp1=`basename $ofile`
ofile3_name="${tmp1%.*}3"


echo "[$PROG]INFO: file_vel $file_vel"
echo "[$PROG]INFO: file_gnss_los $file_gnss_los"
echo "[$PROG]INFO: ofile $ofile"
#exit

if [ -s $file_prm ]; then
  wave=`grep wavelength $file_prm | awk '{print $3}'`
else
  wave=0.0554658 #C band
fi

#temporary files
tmp1=`basename $file_vel`
file_tmp_gnss_los=_tmp_${PROG}_${timestamp}_gnss_los

# gnss velocities projected to LOS direction
#file_tmp_gnss_lld=_tmp_${PROG}_${timestamp}_gnss_lld
file_tmp_gnss_lld="${tmp1%.*}_gnss.lld"

#file_tmp_gnss_llrad=_tmp_${PROG}_${timestamp}_gnss_llrad

#difference between InSAR and GNSS (los)
file_tmp_insar_gnss_diff=_tmp_${PROG}_${timestamp}_insar_gnss_diff
file_tmp_insar_gnss_diff="${tmp1%.*}_insar-gnss.txt"
file_tmp_insar_and_gnss="${tmp1%.*}_insar_gnss.txt"

#trend of difference
file_tmp_insar_gnss_diff_trend=_tmp_${PROG}_${timestamp}_insar_gnss_diff_trend.grd
#file_tmp_insar_gnss_diff_trend="${tmp1%.*}_insar-gnss_trend.grd"

file_tmp_insar_gnss_diff_trend_flt=_tmp_${PROG}_${timestamp}_insar_gnss_diff_trend_flt.grd
#file_tmp_insar_gnss_rad=tmp.rad

#GNSS correction grid for InSAR
#file_tmp_insar_gnss_diff_grd=_tmp_${PROG}_${timestamp}_insar_gnss_diff.grd
file_tmp_insar_gnss_diff_grd="${tmp1%.*}_correction.grd"

#file_tmp_llh=_tmp_${PROG}_${timestamp}_llh
#file_tmp_llh_gnss=_tmp_${PROG}_${timestamp}_llh_gnss
#file_tmp_look=_tmp_${PROG}_${timestamp}_look
#file_tmp_llhd=_tmp_${PROG}_${timestamp}_llhd
#file_tmp_rrhll=_tmp_${PROG}_${timestamp}_rrhll



  #filterw=40000
  #rng_samp_rate=`grep rng_samp_rate $file_prm | awk 'NR == 1 {printf("%d", $3)}'`
  #rng_px_size=`grep rng_samp_rate $file_prm | awk 'NR == 1 {printf("%f", 1.556*299792458/$3/2)}'`
  #vel=`grep SC_vel $file_prm | awk 'NR == 1 {printf("%f", $3)}'`
  #PRF=`grep PRF $file_prm | awk 'NR == 1 {printf("%f", $3)}'`
  #azi_px_size=`echo 'scale=3;' $vel '/' $PRF | bc`
#  now get the decimation factors
#
  x_inc=`gmt grdinfo $file_vel | grep x_inc | awk 'NR == 1 {printf("%f", $7*10)}'`
  y_inc=`gmt grdinfo $file_vel | grep y_inc | awk 'NR == 1 {printf("%f", $7*10)}'`
 echo x_inc y_in $x_inc, $y_inc
##
## the actual pixel size is
##
#   dx=`echo 'scale=3;' $x_inc '*' $rng_px_size | bc `
#   dy=`echo 'scale=3;' $y_inc '*' $azi_px_size | bc `0
#  echo dx dy $dx, $dy
##
## ----------------------
## PREPARE THE GRID CHARACTERISTICS
## ----------------------
##
#  echo "Preparing grid characteristics..."
##  downsample the grd-file to make a template for blockmedian and surface
##  make a sample size of the wavelength/16
##
#   ndx=`echo  $filterw '/' $dx ' / 16' | bc`
#   ndy=`echo  $filterw '/' $dy ' / 16' | bc`
# echo ndx ndy $ndx, $ndy
##
#echo   subsample the phase grid to make a template for blockmedian and surface
##
#   ndx2=`echo  $x_inc '*' $ndx | bc `
#   ndy2=`echo  $y_inc '*' $ndy | bc `
# echo  ndx2 ndy2 $ndx2, $ndy2


  echo "gmt grdsample $file_vel  -I$x_inc/$y_inc -Gtmp.grd"
  gmt grdsample $file_vel  -I$x_inc/$y_inc -Gtmp.grd


  #exit

grep '^ ' $file_gnss_los > $file_tmp_gnss_los
#cat $file_tmp_gnss_los | awk '{print $4,$5,$7}' > $file_tmp_gnss_lld

#in geographical coordinates
cat $file_tmp_gnss_los | awk '{print $1,$2,$7}' > $file_tmp_gnss_lld

#awk '{print $1, $2, $3*(4.0*3.141592653)/(-'$wave'*1000.0) }' < $file_tmp_gnss_lld > $file_tmp_gnss_llrad
#awk '{print $1, $2, $3 }' < $file_tmp_gnss_lld > $file_tmp_gnss_llrad

cat $file_tmp_gnss_lld | gmt grdtrack -G$file_vel | awk '{print $1,$2,($4-$3)}' | grep -v 'nan' > $file_tmp_insar_gnss_diff
cat $file_tmp_gnss_lld | gmt grdtrack -G$file_vel | awk '{print $1,$2,$4,$3}' | grep -v 'nan' > $file_tmp_insar_and_gnss


echo "#  now blockmedian and surface the data at this resolution"
#

  #echo "gmt blockmedian $file_tmp_insar_gnss_rad -Rtmp.grd > tmp.rad"
  #gmt blockmedian $file_tmp_insar_gnss_rad -Rtmp.grd > tmp.rad

  echo "gmt surface  $file_tmp_insar_gnss_diff -Rtmp.grd -T0.1 -G${file_tmp_insar_gnss_diff}.grd "
  gmt surface  $file_tmp_insar_gnss_diff -Rtmp.grd -T0.1 -G${file_tmp_insar_gnss_diff}.grd

  gmt grdtrend ${file_tmp_insar_gnss_diff}.grd -N${N} -T${file_tmp_insar_gnss_diff_trend}

  gmt grdfilter ${file_tmp_insar_gnss_diff_trend} -Dp -Fg17 -G${file_tmp_insar_gnss_diff_trend_flt}

echo "...using grdsample to upsample the correction grid..."
 incre=`  gmt grdinfo -Cn $file_vel | awk '{printf "%d+n/%d+n \n",$9,$10}' `
echo "gmt grdsample ${file_tmp_insar_gnss_diff_trend_flt} -I$incre -G$file_tmp_insar_gnss_diff_grd"
gmt grdsample ${file_tmp_insar_gnss_diff_trend_flt} -I$incre -G$file_tmp_insar_gnss_diff_grd
#
#gmt blockmedian $file_tmp_insar_gnss_rad -R$file_vel > tmp.rad
#echo "gmt surface $file_tmp_insar_gnss_rad -R$file_vel -T0.1 -G$file_tmp_insar_gnss_rad_grd"
#gmt surface $file_tmp_insar_gnss_rad -R$file_vel -T0.1 -G$file_tmp_insar_gnss_rad_grd



  echo "Correcting the interferogram..."
#
  echo "gmt grdmath $file_vel $file_tmp_insar_gnss_diff_grd SUB = $ofile "
  gmt grdmath $file_vel $file_tmp_insar_gnss_diff_grd SUB = $ofile



gmt grdsample $ofile -I.009 -G${ofile3_name}.grd
gmt grd2xyz ${ofile3_name}.grd -s > ${ofile3_name}.xyz
paste ${ofile3_name}.xyz rms_mask_ll3.xyz | awk '{print $1,$2,$3,$6}' > ${ofile3_name}.xyze

export FILE_GRD2JPG_LBL=$file_tmp_insar_and_gnss
sh_grd2jpg $file_vel

export FILE_GRD2JPG_LBL=$file_tmp_insar_gnss_diff
sh_grd2jpg $file_tmp_insar_gnss_diff_grd

export FILE_GRD2JPG_LBL=$file_tmp_insar_gnss_diff
sh_grd2jpg $ofile

gmt makecpt -Cjet -T-20/20/.1 -I -Z > vel2.cpt
sh_grd2kml $ofile vel2.cpt

tar zcf gnss.tar.gz *gnss* $file_gnss_los vel_mask_ll_correction* vel_mask_ll.jpg

#clean temporary files
\rm -rf _tmp_${PROG}_${timestamp}_*


echo "[$PROG]INFO: results written ($ofile)"
pwd

echo "[$PROG]INFO: done."
