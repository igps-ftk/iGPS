#!/bin/sh

# Name:
#   sh_esa_s1_align_node_caller
#   

# Purpose:
#   

# Example:
#   

# Modifications:
#   

# Algorigthm:
#   

# Dependency:
#   


PROG=sh_esa_s1_align_node_caller

file=
file_lock=
file_log='/dev/null'
iw=iw1
path_proc=`pwd`/_align_
path_old=`pwd`
master_date=
file_roi=

while [ "$1" != "" ]; do
  case $1 in
    -file)
      file=$2
      ;;
    -file_lock)
      file_lock=$2
      ;;
    -file_log)
      file_log=$2
      ;;
    -iw)
       iw=$2
       ;;
    -path_proc)
       path_proc=$2
       ;;
    -master_date)
       master_date=$2
       ;;
    -roi)
      path_tmp=`pwd`
      cd `dirname $2`
      file_roi=`pwd`/`basename $2`
      cd $path_tmp
      ;;
    *)
      echo "[]ERROR: invalid option ($1)!!"
      exit 1
      ;;
  esac

  shift 2
done
echo file $file
pwd
cd `dirname $file`
pwd

if [ "$file" == "" ]; then
  echo "[]ERROR: input is blank ($file)!!"
  exit 1
fi
if [ ! -s "$file" ]; then
  echo "[]ERROR: input file not exist ($file)!!"
  exit 1
fi


ln -s ../dem.grd .

mkdir -p $path_proc
cd $path_proc
pwd
ln -s ../topo .
head -1 ../data.in > ./data.in
head -1 ../baseline_table.dat ./baseline_table.dat
\cp -f ../batch_tops.config .
ln -s ../raw .
ln -s ../raw0 .
ln -s $file ./input.lst

if [ "$master_date" != "" ]; then
  master_str= 
else
  master_str=" "
fi

if [ "$file_roi" == "" ]; then
  opt_roi=
else
  opt_roi="-roi $file_roi"
fi

echo "sh_esa_s1_run_tsa_update -file input.lst -iw $iw $master_str $opt_roi >> $file_log"
sh_esa_s1_run_tsa_update -file input.lst -iw $iw $master_str $opt_roi >> $file_log 2>&1
#echo wait 1 second
#sleep 1

if [ "$file_lock" != "" ]; then
  if [ ! -s $file_lock ]; then
    echo "[]WARNING: file not exist ($file_lock)! What's wrong?"
  fi
  #sleep 5
  #is_done=0
  #while [ $is_done -eq 0 ];
  file $file_lock
  #\rm -f $file_lock
  echo "0 $file" > $file_lock
  echo "[]INFO: locking file removed ($file_lock)."
  file $file_lock
fi

