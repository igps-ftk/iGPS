#!/bin/sh

# Name:
#   sh_esa_s1_prep_assemble3
#   

# Purpose:
#   

# Example:
#   

# Modifications:
#   

# Algorigthm:
#   

# Dependency:
#   

if [ "$esa_data" = "" ]; then
    echo "[ERROR]ESA environment variable esa_data must be set first! Stopped."
    exit 1
fi


if [ "$esa_unzip" = "" ]; then
    echo "ESA environment esa_unzip variable not set! Stopped!!"
    exit 1
fi

if [ "$1" = "" ]; then
  echo "Usage: sh_esa_s1_assemble input_file  [iw_type]"
  exit 1
fi

file=$1

iw_typ=iw2
if [ "$2" != "" ]; then
    iw_typ=$2
fi

file_tmp=`pwd`/.tmp.unzip
echo $file_tmp
\rm -f $file_tmp
days=`grep -h '^ ' $file | awk -F_ '{print $6}' | awk -FT '{print $1}' | sort |uniq`
echo $days
for day in $days; do
  echo $day
  nf=`grep '^ ' -h $file | grep $day | wc -l` 
  if [ $nf -lt 2 ]; then
    echo "[]ERROR: not enough files ($nf) for combining data of $day!!"
    #grep '^ ' -h $file | grep $day
    continue
  fi
  echo "combining $nf frames for $day ..."
  grep '^ ' -h $file | grep $day |sort | awk '{print $0}' >> $file_tmp
  #tfiles=`grep '^ ' -h $file | grep $day |sort`
  #echo $tfiles
done

#sh_esa_s1_unzip $file_tmp

\rm -rf raw0 raw
mkdir raw0 raw
cd raw0
pwd
sh_esa_s1_link_raworig $file_tmp $iw_typ
sh_esa_s1_link_orb3 >& tiff_EOF.list
sh_esa_s1_prep_prep $file_tmp $iw_typ

ls *.tiff | sed -e 's/.tiff//g'> .tmp.tiff
days=`grep -h '^ ' $file_tmp | awk -F_ '{print $6}' | awk -FT '{print $1}' | sort |uniq`
for day in $days; do
  echo $day
  echo "combining $nf frames for $day ..."
  cmdstr="assemble_tops 0s 0s "
  files=`cat .tmp.tiff | grep $day |sort | awk '{print $1}'`
  for file in $files; do
    cmdstr="$cmdstr $file"
  done
  file1=`cat .tmp.tiff | grep $day |sort | awk '{print $1}' | head -1`
  cmdstr="$cmdstr ../raw/$file1"
  
  echo $cmdstr
  echo $cmdstr | sh
  
  #file1=`cat .tmp.tiff | grep $day |sort | awk '{print $1}' | head -1`
  #file2=`cat .tmp.tiff | grep $day |sort | awk '{print $1}' | head -2 | tail -1`
  #file3=`cat .tmp.tiff | grep $day |sort | awk '{print $1}' | head -3 | tail -1`
  #echo assemble_tops 0s 0s $file1 $file2 $file3 ../raw/$file1
  #echo assemble_tops 0s 0s $file1 $file2 $file 3../raw/$file1 | sh
done