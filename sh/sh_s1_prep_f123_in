#!/bin/sh

# Name:
#   sh_s1_prep_f123_in
#

# Purpose:
#

# Example:
#

# Modifications:
#   +Created by tyf on Thu Dec 28 16:20:53 CST 2017


# Algorigthm:
#   +Convert intf.in to input filelist for merge_batch.csh
#
#   Inputs:
#     e.g., to combine three descending swaths, first process each swath separately:
#     ../F1/intf_all/YYYYDOY_YYYYDOY/
#     ../F2/intf_all/YYYYDOY_YYYYDOY/
#     ../F3/intf_all/YYYYDOY_YYYYDOY/
# Dependency:
#

PROG=sh_s1_prep_f123_in

timestamp=`date | sed -e "s/ /_/g" | sed -e "s/:/-/g"`

path_old=`pwd`

usage(){
    echo "[$PROG]HELP: $PROG   "
    echo "  inputs:"
    echo "    1) ../F1/intf_all/ or ../F2/intf_all"
    echo "    2) *F2*"
    echo "    3) *F3*"

    echo "[$PROG]HELP:   [-h|-help]"
    echo "[$PROG]HELP: e.g.,"
    echo "[$PROG]HELP:   ${PROG} "
    echo "(c)Copyright 2017 by Yunfeng Tian (tianyf@gmail.com)"
}

file_log=log1

#command-line parameters
path=..
Fn=F1
file_intf_in=intf.in
ofile=intf.in.f123.1
file_log=log1

while [ "$1" != "" ]; do
    case $1 in
  -path)
      oldpath=`pwd`
      cd $2
      path=`pwd`
      cd $oldpath
      ;;
  -file_intf_in)
      file_intf_in=$2
      ;;
  -Fn)
      Fn=$2
      ;;
  -h|-help|--help|?)
     usage
     exit 1
     ;;
  *)
      echo "[$PROG]ERROR: invalid option ($1)!!"
      usage
      exit 1
      ;;
  esac
    shift 2
done

if [ ! -e $file_intf_in ]; then
    echo "[$PROG]ERROR: $file_intf_in file not exist!! Stopped."
    exit 1
fi

if [ -s intf.in.f123.1 ]; then
  ofile='intf.in.f123.2'  
  file_log=log2
fi
echo "[$PROG]INFO: searching for interferograms, please wait ..."

S1_ID=`head -1 baseline_table.dat | awk '{print substr($1,1,3)}'`
echo " [$PROG]INFO: S1_ID $S1_ID" > $file_log
#exit

ntot=`cat $file_intf_in | wc -l`
np=`echo $ntot | awk '{print int($1/10)}'`
if [ $np -eq 0 ]; then
  np=1
fi
n=0
#echo $n $np $ntot
echo "[$PROG]INFO: #interferograms is $ntot"
while read line; do

    n=`expr $n + 1`
    #echo $n $np $ntot
    echo $n $np | awk '{if( ($1-int($1/$2)*$2)==0){printf(".")}}'
    #echo $n $np | awk '{if( ($1-int($1/$2)*$2)==0){printf("\b:>")}}'
    #sleep .5
    
    echo " [$PROG]INFO: $line" >> $file_log
    ymd1=`echo $line | awk -F: '{print substr($1,4,8)}'`
    ymd2=`echo $line | awk -F: '{print substr($2,4,8)}'`

    year1=`echo $line | awk -F: '{print substr($1,4,4)}'`
    #mon1=`echo $line | awk -F: '{print substr($1,8,2)}'`
    #day1=`echo $line | awk -F: '{print substr($1,10,2)}'`
    year2=`echo $line | awk -F: '{print substr($2,4,4)}'`
    #mon2=`echo $line | awk -F: '{print substr($2,8,2)}'`
    #day2=`echo $line | awk -F: '{print substr($2,10,2)}'`

    #doyr1=`doy $year1 $mon1 $day1 12 0 | head -1 | awk '{print $6}'`
    #doyr2=`doy $year2 $mon2 $day2 12 0 | head -1 | awk '{print $6}'`

    #doyr1a=`echo  $doyr1 | awk '{printf("%03d", $1 - 1)}'`
    #doyr2a=`echo  $doyr2 | awk '{printf("%03d", $1 - 1)}'`
 
    doyr1a=`cat baseline_table.dat | grep $ymd1 | awk '{print substr($2,5,3)}'`
    doyr2a=`cat baseline_table.dat | grep $ymd2 | awk '{print substr($2,5,3)}'`


    if [ -d ${year1}${doyr1a}_${year2}${doyr2a} -o -d ./intf_all/${year1}${doyr1a}_${year2}${doyr2a} ]; then
      echo " [$PROG]WARNING: day ${year1}${doyr1a}_${year2}${doyr2a} aleady done! Skipped.">> $file_log
      continue
    fi

    file1a=../F1/intf_all/${year1}${doyr1a}_${year2}${doyr2a}/${S1_ID}${ymd1}_ALL_F1.PRM
    file1b=../F1/intf_all/${year1}${doyr1a}_${year2}${doyr2a}/${S1_ID}${ymd2}_ALL_F1.PRM

    file2a=`echo $file1a | sed -e 's/F1/F2/g'`
    file3a=`echo $file1a | sed -e 's/F1/F3/g'`
    echo " [$PROG]$file1a">> $file_log
    echo " [$PROG]$file2a">> $file_log
    echo " [$PROG]$file3a">> $file_log

    if [ ! -e $file1a ]; then
      echo " [$PROG]WARNING: missing $file1a !!">> $file_log
      continue
    fi

    if [ ! -e $file2a ]; then
      echo " [$PROG]WARNING: missing $file2a !!">> $file_log
      continue
    fi

    if [ ! -e $file3a ]; then
      echo " [$PROG]WARNING: missing $file3a !!">> $file_log
      continue
    fi



    echo "  [$PROG]INFO: $year1 $mon1 $day1 $year2 $mon2 $day2 $doyr1 ">> $file_log

    odir=`dirname $file1a`
    line_f1="${odir}/:`basename ${file1a}`:`basename ${file1b}`"
    line_f2=`echo $line_f1 | sed -e 's/F1/F2/g'`
    line_f3=`echo $line_f1 | sed -e 's/F1/F3/g'`
    echo $line_f1,$line_f2,$line_f3 >> $file_log	#output result

    #exit
done < $file_intf_in
echo 1 | awk '{printf("\n")}'

if [ "$file_log" == "log1" ]; then
  grep -v '^ ' -a $file_log | sort > $ofile
else
  grep -v '^ ' -a $file_log | shuf > $ofile
fi
echo "[$PROG]INFO: results written to $ofile"
echo "[$PROG]INFO: check $file_log for more information."
wc -l intf.in*
echo "[$PROG]INFO: done."