#!/bin/bash

# Name:
#   sh_esa_s1_prep_prep
#   

# Purpose:
#   Prepare xml files for processing.

# Example:
#   

# Modifications:
#   

# Algorithm:
#   

# Dependency:
#   
PROG=sh_esa_s1_prep_prep

if [ "$esa_unzip" = "" ]; then
    echo "ESA environment esa_unzip variable not set! Stopped!!"
    exit 1
fi

if [ "$1" == "" ]; then
    echo "Usage: sh_esa_s1_prep_prep file [iw_type]"
    exit
fi
file=$1

if [ "$2" = "" ]; then
    echo "[INFO]iw_type not specified! Default iw1 used."
    iw_typ=iw1
else
    iw_typ=$2
fi


grep '^ ' $file | awk '{print $1}' > .tmp
while read line; do
    echo $line
    dfile="`echo $line | awk -F. '{print $1}'`.SAFE"
    if [ ! -d ${esa_unzip}/${dfile} ]; then
	echo -e "[$PROG]\033[1;33;41mERROR\033[0m:data not found [${esa_unzip}/${dfile}]!!"
	exit 1
    fi
    
    awk 'NR>1 {print $0}' < ${esa_unzip}/${dfile}/manifest.safe > tmp_file
    files=`ls ${esa_unzip}/${dfile}/annotation/*-${iw_typ}-*.xml`

    ipf_ver=`cat ${esa_unzip}/${dfile}/manifest.safe | grep IPF | tail -1 | awk -F\" '{print $4}'`
    echo "ipf_ver $ipf_ver $dfile"

    is_update_ipf=`cat ${esa_unzip}/${dfile}/manifest.safe | grep IPF | tail -1 | awk -F\" '{if($4>2.36){print 0}else{print 1}}'`
    echo is_update_ipf $is_update_ipf

    for file in $files; do
      ofile="`basename ${file}`"
      if [ -s $ofile ]; then
        echo "[$PROG]INFO: already exist! NOT overwitten ($ofile)."
        continue
      fi
      if [ $is_update_ipf -eq 1 ]; then
        echo "[$PROG]INFO: creating ($ofile) ..."
        cat ${file} tmp_file ${GMT5SAR}/preproc/S1A_preproc/src_tops/s1a-aux-cal.xml > $ofile
      else
        ln -s $file .
      fi
    done
    #exit
done < .tmp

