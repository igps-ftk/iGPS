#!/bin/bash

# Name:
#   gglib
#   

# Purpose:
#   +Merge gamit/globk functions into a *.a file, for using in ftk.

# Example:
#   gglib /usr/local/gamit-v10.71

# Modifications:
#   +

# Algorithm:
#   +Output file is written to ~/gglib/.
#   +Move the output file to ${iGPS}/ftk/gglib/ or create a symbolic link.

# Dependency:
#   +GAMIT/GLOBK installation (e.g., /usr/local/gmait-v10.71/)
#

PROG=gglib

timestamp=`date | sed -e "s/ /_/g" | sed -e "s/:/-/g"`

path_old=`pwd`
 
usage_of_it(){
cat <<eob
${PROG} [GAMIT_GLOBK_PATH  [OUTPUT_PATH]]
|_Create library file from GAMIT/GLOBK.
|<
  [GAMIT_GLOBK_PATH]
    default: \${HOME}/gg/
  [[OUTPUT_PATH]]
    default: \$iGPS/ftk/gglib/
  [-h|-help]
e.g.,
  ${PROG}  /usr/local/gamit-v10.71
  ${PROG}  /usr/local/gamit-v10.71/  /home/tianyf/iGPS/ftk/gglib/
(c)iGPS (https://github.com/igps-ftk/)
eob
}

file_func_list=${iGPS}/sh/gg_func.list
funcs=`grep -h '^ ' $file_func_list | awk '{print $1}'`
echo funcs $funcs
#exit

arch=`sh_arch`
#echo $arch

if [ "`echo $1 | awk '{print substr($1,1,2)}'`" == "-h" ]; then
  usage_of_it
  exit 1
fi

#input gg directory
path_gg=${HOME}/gg/
#exit
if [ $# -ge 1 ]; then
    cd $1
    path_gg=`pwd`
    cd $path_old
fi

#output location
path_lib=${iGPS}/ftk/gglib/
if [ ! -d ${path_lib} ]; then
    echo mkdir -p ${path_lib}
    echo mkdir -p ${path_lib} | sh
fi
file_lib=${path_lib}/gglib.a.${arch}
if [ $# -ge 2 ]; then
    cd $2
    path_lib=`pwd`
    cd $path_old
    file_lib=${path_lib}/gglib.a.${arch}
fi
#exit

#find gg library files
#echo find -L $path_gg -name "*.a"
#find $path_gg -name "*.a"
if [ ! -d $path_gg ]; then
  echo -e "[$PROG]\033[1;33;41mERROR\033[0m: directory not exist ($path_gg)!!"
  exit 1
fi
files=`find $path_gg -name "*.a"`
#files=
if [ "$files" = "" ]; then
    echo -e "[$PROG]\033[1;33;41mERROR\033[0m: no library files could be found in $path_gg."
    echo "[$PROG]INFO: Please check your ~/gg link, and try again. "
    echo "[$PROG]INFO: Sometimes symbolic link does not work."
    echo "[$PROG]INFO: Try use original path: gglib GAMIT_PATH"
    exit 1
fi

if [ -s $file_lib ]; then
  echo -e "[$PROG]\033[1;33;46mWARNING\033[0m: output file exsits and will be overwritten ($file_lib)!"
fi

path_gg=`pwd`

#create a temporary directory
path_tmp=`pwd`/_tmp_${PROG}_${timestamp}
mkdir -p $path_tmp
cd $path_tmp

#unpack each library file *.a
for file in $files; do
    echo $file
    ar x $file
done

#delete preread_cf.o (which proved to cause errors when compile iGPS ftk)
\rm -f preread_cf.o
#delete existing lib file
\rm -f  ${file_lib}

#ar rv ${file_lib} *.o
for func in $funcs; do
  file_o=`find $path_tmp -type f -name "*${func}*.o"`
  #echo $file_o
  if [ "$file_o" == "" ]; then
    echo "[$PROG]WARNING: cannot find library files for $func!"
    continue
  fi
  #echo ar rv $file_lib $file_o
  ar rv $file_lib $file_o
done

ar rv ${file_lib} *ymd*.o
ar rv ${file_lib} *decyr*.o
ar rv ${file_lib} *yds*.o
ar rv ${file_lib} *jd*.o

ranlib ${file_lib}
#echo $file_lib
cd ..
#pwd
echo \rm -rf ${path_tmp}
\rm -rf ${path_tmp}

echo "[$PROG]INFO: gg path: ${path_gg}"
echo "[$PROG]INFO: output: $file_lib"

echo "[$PROG]INFO: Done."
