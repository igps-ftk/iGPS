#!/bin/sh

# Name:
#   sh_sar_plot_intf_tab
#   

# Purpose:
#   Create spatio-temporal baseline plot.

# Example:
#   

# Modifications:
#   

# Algorithm:
#   

# Dependency:
#   + baseline_table.dat
#   + intf.tab


PROG=sh_sar_plot_intf_tab



gmt gmtset PS_MEDIA = a4
gmt gmtset FONT_TITLE = 12p
gmt gmtset FONT_LABEL         = 8p
gmt gmtset FONT_ANNOT_PRIMARY = 9p
gmt gmtset MAP_FRAME_PEN               = .5p
gmt gmtset MAP_FRAME_WIDTH             = 0.1c
gmt gmtset MAP_TICK_LENGTH = .1c
gmt gmtset MAP_TITLE_OFFSET = .1051c

if [ ! -s baseline_table.dat ]; then
  echo -e "[$PROG]\033[1;33;41mERROR\033[0m:baseline_table.dat file is missing!!"
  exit 1
fi
#file baseline_table.dat

if [ ! -s intf.tab ]; then
  echo -e "[$PROG]\033[1;33;41mERROR\033[0m:intf.tab file is missing!!"
  exit 1
fi

#file intf.tab

#default output file name
ofile=f-interferograms.ps
ofile=f-baseline-time.ps

is_lbl=n

while [ "$1" != "" ]; do
  case $1 in
    -h|help)
      echo "Usage: $PROG  [ -out OUTPUT_FILE_BASE_NAME ] "
      exit 1
      ;;
    -o|-out|-ofile)
      ofile=$2
      ;;
    -l|-label)
      is_lbl=$2
      ;;
    *)
      echo -e "[$PROG]\033[1;33;41mERROR\033[0m: invalid option ($1)!!"
      exit 1
      ;;
  esac

  shift 2
done


cat baseline_table.dat | awk '{if(NF>2){print substr($2,1,4)+substr($2,5)/365.25,$5,$1,$2}}' > .blt
#exit

###read baseline_table.dat file
##ids=`cat baseline_table.dat | awk '{print $1}'`
##yeardoyrs=`cat baseline_table.dat | awk '{print int($2)}'`
##years=`cat baseline_table.dat | awk '{print substr($2,1,4)}'`
##doyrs=`cat baseline_table.dat | awk '{print substr($2,5,3)}'`
###blens=`cat baseline_table.dat | awk '{print $5}'`
###echo $blens > .blens
##echo $years > .years
###exit


echo "[$PROG]INFO: reading intf.tab ..."
nf=`cat intf.tab | wc -l`
ntot=$nf
np=`echo $ntot | awk '{print int($1/10)}'`
if [ $np -eq 0 ]; then
  np=1
fi

sar_intf_tab_2_psxy --o=.tmp_

##n=0
##rm -rf .tmp_
###loop for lines of intf.tab
##while read line; do
##  n=`expr $n + 1`
##  #echo $n $np $ntot
##  echo $n $np | awk '{if( ($1-int($1/$2)*$2)==0){printf(".")}}'
##    
##  yeardoyr1=`echo $line | awk '{print $3}'`
##  yeardoyr2=`echo $line | awk '{print $4}'`
##  dyr1=`cat .blt | grep " $yeardoyr1" | awk '{print $1}'`
##  dyr2=`cat .blt | grep " $yeardoyr2" | awk '{print $1}'`
##  
##  ##n1=`grep -n " $yeardoyr1" baseline_table.dat | awk -F: '{print $1}'`
##  ##n2=`grep -n " $yeardoyr2" baseline_table.dat | awk -F: '{print $1}'`
##  ###echo n1 n2 $n1 $n2
##  ##year1=`echo $years | awk '{print $i}' i=$n1`
##  ##year2=`echo $years | awk '{print $i}' i=$n2`
##  ##doyr1=`echo $doyrs | awk '{print $i}' i=$n1`
##  ##doyr2=`echo $doyrs | awk '{print $i}' i=$n2`
##  ##dyr1=`doy $year1 $doyr1 | tail -1 | awk '{print $3}'`
##  ##dyr2=`doy $year2 $doyr2 | tail -1 | awk '{print $3}'`
##  
##  #blen1=`echo $blens | awk '{print $i}' i=$n1`
##  #blen2=`echo $blens | awk '{print $i}' i=$n2`
##  blen1=`cat baseline_table.dat | grep " $yeardoyr1" | awk '{print $5}'`
##  if [ "$blen1" = "" ]; then
##    echo "[]WARNING: no perpendicular baseline information for $yeardoyr1!!"
##    continue
##  fi
##  blen2=`cat baseline_table.dat | grep " $yeardoyr2" | awk '{print $5}'`
##  if [ "$blen2" = "" ]; then
##    echo "[]WARNING: no perpendicular baseline information for $yeardoyr2!!"
##    continue
##  fi
##  
##  #echo $yeardoyr1 $yeardoyr2 $n1 $n2 $year1 $doyr1 $year2 $doyr2 $blen1 $blen2
##  echo "> -L${yeardoyr1}_${yeardoyr2}" >> .tmp_
##  echo "$dyr1 $blen1" >> .tmp_
##  echo "$dyr2 $blen2" >> .tmp_
##  #exit
##done < intf.tab
###exit


R=`gmt gmtinfo -I2/50 .tmp_`
#R=`echo $R | awk -F\/ '{print $1"/"$2"/-250/250"}'`
#echo R $R
gmt psxy $R -JX4i/3i -Sc.1c -Gyellow -W.35p,red -B1f.5:"Time":/50f10:"Perpendicular Distance (m)"::."":/WSen -P -K .tmp_ > $ofile
gmt psxy -R -J -W0.2p,purple,- -O -K .tmp_  >> $ofile

#add text label to observations
if [ "$is_lbl" == "y" ]; then
  rm -rf .tmp_2
  while read line; do
    id=`echo $line | awk '{print $1}' | awk -F_ '{print $2}'`
    #year=`echo $line | awk '{print substr($2,1,4)}'`
    #doyr=`echo $line | awk '{print substr($2,5,3)}'`
    #dyr=`doy $year $doyr | tail -1 | awk '{print $3}'`
    dyr=`echo $line | awk '{print substr($2,1,4)+substr($2,5)/365.25}'`
    blen=`echo $line | awk '{print $5}'`
    echo "$dyr $blen $id" >> .tmp_2
  done < baseline_table.dat
  #
  gmt pstext -R -J -F+f5p+a0+j1 -O -K .tmp_2 >> $ofile
fi

gmt psxy -R -J -O <<eof -W.35p,red,- >> $ofile
>
0 -10000
0 10000
>
-10000 0
10000 0
eof

echo "converting JPEG ($ofile) ..."
gmt psconvert -A -Tj $ofile
echo "converting PDF ..."
gmt psconvert -A -Tf $ofile



echo "[$PROG]INFO: done"


