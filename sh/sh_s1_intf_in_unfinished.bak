#!/bin/sh

# Name:
#   sh_esa_s1_intf_in_get_remain
#   

# Purpose:
#  Create input file (intf.in) for intf_tops.csh based upon the intf.in file,
#    removing those already processed (with los_ll PNG files in 
#    intf_all_png/ directory copied by sh_sar_cp_los_ll_png script).


# Example:
#   

# Modifications:
#   

# Algorigthm:
#  For each line in intf.in file, if los_ll PNG file exists in 
#  intf_all_png/ directory, then skip it.
#  
#  Time in intf.in is YYYYMMDD, converted to YYYYDOY by checking YYYYMMMDD in 
#  data.in and extract the time for the same line in scene.tab1.

# Dependency:
#   intf.in
#   data.in
#   scene.tab1 (copy of the original scene.tab)
#   *Lines of data.in and scene.tab1 should correspond.

prog=sh_esa_s1_intf_in_get_remain
image_type=los_ll.png
image_type=phasefilt_mask_ll.png
image_type=_ll.png

while [ "$1" != "" ]; do
    case $1 in
        -image_type)
            image_type=$2
            ;;
        *)
            echo "[]ERROR: invalid option $1"
            exit 1
            ;;
       esac
    shift 2
done 


if [ ! -s intf.in ]; then
    echo "[${prog}]ERROR:intf.in not exist!!"
    exit 1
else
    echo "#lines: `wc -l intf.in | awk '{print $1}'`"
fi

if [ ! -s scene.tab1 ]; then
    echo "[${prog}]ERROR:scene.tab1 not exist!!"
    exit 1
fi
ns=`wc -l scene.tab1 | awk '{print $1}'`
echo "#lines of scene.tab1: $ns"

if [ ! -s data.in ]; then
    echo "[${prog}]ERROR:data.in not exist!!"
    exit 1
fi
nd=`wc -l data.in | awk '{print $1}'`
echo "#lines of data.in: $nd"

if [ $ns -ne $nd ]; then
    echo "[${prog}]ERROR:the numbers of lines in scene.tab1 and data.in do not equal!!"
    exit 1
fi

#days=`ls -lS intf_all_png/*-${image_type}.png | awk '{print $9}'|awk -F/ '{print $2}' | awk -F- '{print $1}'`
#days=`ls -lS intf_all_png/*-phasefilt_mask_ll.png | awk '{print $9}'|awk -F/ '{print $2}' | awk -F- '{print $1}'`
days=`ls -lS intf_all_png/*${image_type}* | awk '{print $9}'|awk -F/ '{print $2}' | awk -F- '{print $1}'`
echo $days
#exit

rm -f intf.in.rem
while read day; do
    echo $day
    ####continue
    ###day1=`echo $day | awk -F: '{print $1}'`
    ##day1=`echo $day | awk -F: '{print $1}' | awk -F_ '{print substr($1,4)}'`
    ##n1=`grep -n $day1 data.in | awk -F: '{print $1}'`
    ##ymd1=`sed -n "${n1}p" scene.tab1 | awk '{print $1}'`
    ###
    ###day2=`echo $day | awk -F: '{print $2}'`
    ##day2=`echo $day | awk -F: '{print $2}' | awk -F_ '{print substr($1,4)}'`
    ##n2=`grep -n $day2 data.in | awk -F: '{print $1}'`
    ##ymd2=`sed -n "${n2}p" scene.tab1 | awk '{print $1}'`
    
    day1=`echo $day | awk -F: '{print $1}' | awk '{print substr($1,4,8)}'`
    year1=`echo $day1 | awk '{print substr($1,1,4)}'`
    mm1=`echo $day1 | awk '{print substr($1,5,2)}'`
    dd1=`echo $day1 | awk '{print substr($1,7,2)-1}'`
    doyr1=`doy $year1 $mm1 $dd1 | head -1 | awk '{printf("%03d", $6)}'`
    ymd1="${year1}${doyr1}"
    #n1=`grep -n $day1 data.in | awk -F: '{print $1}'`
    #ymd1=`sed -n "${n1}p" scene.tab1 | awk '{print $1}'`
    #
    day2=`echo $day | awk -F: '{print $2}' | awk '{print substr($1,4,8)}'`
    year2=`echo $day2 | awk '{print substr($1,1,4)}'`
    mm2=`echo $day2 | awk '{print substr($1,5,2)}'`
    dd2=`echo $day2 | awk '{print substr($1,7,2)-1}'`
    doyr2=`doy $year2 $mm2 $dd2 | head -1 | awk '{printf("%03d",$6)}'`
    ymd2="${year2}${doyr2}"
    #n2=`grep -n $day2 data.in | awk -F: '{print $1}'`
    #ymd2=`sed -n "${n2}p" scene.tab1 | awk '{print $1}'`
    echo $ymd1 $ymd2 $n1 $n2 $day1 $day2
    pwd
    tmp=`find ./intf_all_png/ -maxdepth 1 -name "${ymd1}_${ymd2}-*${image_type}*"`
    #echo tmp is $tmp
    #echo string is "${ymd1}_${ymd2}-*${image_type}*"
    if [ "$tmp" != "" ]; then
    ##if [ -s ./intf_all_png/${ymd1}_${ymd2}-${image_type} ]; then
	echo "[]WARNING:./intf_all_png/${ymd1}_${ymd2}-${image_type} exist! skip"
        #exit
	continue
    else
	echo $day >> intf.in.rem
    fi
    #exit
done < intf.in
