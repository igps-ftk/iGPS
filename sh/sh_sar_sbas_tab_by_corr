#!/bin/sh

# Name:
#   sh_sar_sbas_tab_by_corr
#   

# Purpose:
#   

# Example:
#   

# Modifications:
#   

# Algorigthm:
#   

# Dependency:
#   


PROG=sh_plot_corr

file=corr.intfs.mean.txt

bfile="baseline_table.dat"

ofile=f-intfs.ps

corr_min=.18

y1=1900
y2=2199
d1=1
d2=366

while [ "$1" != "" ]; do
  case $1 in
    -file)
      file=$2
      ;;
    -bfile)
      bfile=$2
      ;;
    -ofile)
      ofile=$2
      ;;
    -corr_min)
      corr_min=$2
      ;;
    -y1)
      y1=$2
      ;;
    -y2)
      y2=$2
      ;;
    -d1)
      d1=$2
      ;;
    -d2)
      d2=$2
      ;;
    *)
      echo "[$PROG]ERROR: invalid option ($1)!!"
      echo "[$PROG]Usage: ${PROG} "
      echo "[$PROG]Usage: e.g.,"
      echo "[$PROG]Usage: ${PROG} "
      exit 1
      ;;
  esac
  shift 2  
done

if [ ! -s $file ]; then
  echo "[]ERROR: corr means file not exist ($file)!!"
  exit 1
fi

if [ ! -s $bfile ]; then
  echo "[]ERROR: baseline file not exist ($bfile)!!"
  exit 1
fi

dyr_s=`doy $y1 $d1 | tail -1 | awk '{print $3}'`
dyr_e=`doy $y2 $d2 | tail -1 | awk '{print $3}'`

echo time window $dyr_s $dyr_e

#ofile=corr_stat.ps
#
#cat $file | awk '{if($7<250){print $6,$8}}' > _tmp
#wc -l _tmp
#
#R=`gmtinfo -I100/.1 _tmp`
#R=-R0/500/0/1
#psxy $R -JX9i/3i -Sc.1c -Gyellow -W.35p,red -B100f50:"nadys (d)":/.2f.1:"corr"::."corr statistics":/WSen -P -K _tmp > $ofile
##psxy -R -J -W0.2p,purple,- -O -K _tmp  >> $ofile
#psxy -R -J -O <<eof -W1p,red,- >> $ofile
#>
#0 -10000
#0 10000
#>
#-10000 0
#10000 0
#eof
#
#echo "converting JPEG ..."
#psconvert -A -Tj $ofile
#echo "converting PDF ..."
#psconvert -A -Tf $ofile



cat $file | awk '{if($6>corr_min&&$2>=dyr_s&&$2<=dyr_e&&$3>=dyr_s&&$3<=dyr_e){print $0}}' corr_min=$corr_min dyr_s=$dyr_s dyr_e=$dyr_e > _tmp1
#\rm -f _tmp2
\rm -f intf.tab
#./ia/2016359_2017005/unwrap_mask.grd ./ia/2016359_2017005/corr_cut.grd 2016359 2017005 -21.0751
while read line; do
  echo $line
  #2016359_2017005 2016.978142077 2017.010958904 12 21.0751 0.327782670718
  
  id1=`echo $line | awk  '{print $1}' | awk -F_ '{print $1}'`
  id2=`echo $line | awk  '{print $1}' | awk -F_ '{print $2}'`
  #year1=`echo $id1 | awk  '{print substr($1,1,4)}'`
  #doyr1=`echo $id1 | awk  '{print substr($1,5,3)}'`  
  #year2=`echo $id2 | awk  '{print substr($1,1,4)}'`
  #doyr2=`echo $id2 | awk  '{print substr($1,5,3)}'`  
  #dyr1=`echo $line | awk  '{print $2}' `
  #dyr2=`echo $line | awk  '{print $3}' `
  blen1=`grep -h " $id1" $bfile | awk '{print $5}'`
  blen2=`grep -h " $id2" $bfile | awk '{print $5}'`
  bperp=`echo $blen1 $blen2 | awk '{print $2-$1}'`
  
  #echo "> ${id1}_${id2}" >> _tmp2
  #echo "$dyr1 $blen1" >> _tmp2
  #echo "$dyr2 $blen2" >> _tmp2
  
  intf=`echo $line | awk '{print $1}'`
  echo "./ia/$intf/unwrap_mask.grd ./ia/$intf/corr_cut.grd $id1 $id2 $bperp" >> intf.tab
  #break
done < _tmp1

\rm -f scene.tab
cat intf.tab | awk '{print $3}' > _tmp3
cat intf.tab | awk '{print $4}' >> _tmp3
sort _tmp3|uniq > _tmp4

wc -l _tmp3 _tmp4

while read line; do  
  day=`grep -h " $line" $bfile | awk '{print $3}'`
  echo "$line $day" >> scene.tab
done < _tmp4
wc -l intf.tab scene.tab

##wc -l _tmp2
##
###exit
##
##R=`gmtinfo -I2/200 _tmp2`
##echo R $R
##psxy $R -JX5i/4i -Sc.1c -Gyellow -W.35p,red -B1f.5:"Time":/200f100:"Distance (m)"::."baseline vs. time":/WSen -P -K _tmp2 > $ofile
##psxy -R -J -W0.2p,purple,- -O -K _tmp2  >> $ofile
##
##
##rm -rf _tmp22
##while read line; do
##  id=`echo $line | awk '{print $1}'`
##  year=`echo $line | awk '{print substr($2,1,4)}'`
##  doyr=`echo $line | awk '{print substr($2,5,3)}'`
##  blen=`echo $line | awk '{print $5}'`
##  dyr=`doy $year $doyr | tail -1 | awk '{print $3}'`
##  echo "$dyr $blen $id" >> _tmp22
##done < $bfile
###
###pstext -R -J -F+f5p+a0+j1 -O -K _tmp22 >> $ofile
##
##psxy -R -J -O <<eof -W1p,red,- >> $ofile
##>
##0 -10000
##0 10000
##>
##-10000 0
##10000 0
##eof
##
##echo "converting JPEG ..."
##psconvert -A -Tj $ofile
##echo "converting PDF ..."
##psconvert -A -Tf $ofile

