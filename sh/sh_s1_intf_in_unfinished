#!/bin/sh

# Name:
#   sh_s1_intf_in_unfinished
#   

# Purpose:
#  Create input file (intf.in) for intf_tops.csh based upon the intf.in file,
#    removing those already processed (with los_ll PNG files in 
#    intf_all_png/ directory copied by sh_sar_cp_los_ll_png script).


# Example:
#   

# Modifications:
#   

# Algorithm:
#  For each line in intf.in file, if phase/displcement preview file exists in 
#  intf_all_png/ directory, then skip it.
#  

# Dependency:
#   + intf.in
#   + intf_all_png/*.png
#   + baseline_table.dat
#

PROG=sh_s1_intf_in_unfinished

image_type=los_ll.png
image_type=phasefilt_mask_ll.png
image_type=_ll.png

while [ "$1" != "" ]; do
    case $1 in
        -image_type)
            image_type=$2
            ;;
        *)
            echo -e "[$PROG]\033[1;33;41mERROR\033[0m: invalid option $1"
            exit 1
            ;;
       esac
    shift 2
done 


if [ ! -s intf.in ]; then
    echo -e "[$PROG]\033[1;33;41mERROR\033[0m:intf.in not exist!!"
    exit 1
else
    echo "#lines: `wc -l intf.in | awk '{print $1}'`"
fi

if [ ! -s baseline_table.dat ]; then
    echo -e "[$PROG]\033[1;33;41mERROR\033[0m:baseline_table.dat not exist!!"
    exit 1
else
    echo "#lines: `wc -l baseline_table.dat | awk '{print $1}'`"
fi

days=`ls -lS intf_all_png/*${image_type}* | awk '{print $9}'|awk -F/ '{print $2}' | awk -F- '{print $1}'`
#echo $days
#exit

rm -f intf.in.rem
while read day; do
    #echo $day
    
    #intf.in:
    #S1_20141022_ALL_F3:S1_20141115_ALL_F3
    #
    #baseline_table.data:
    #S1_20141022_ALL_F3 2014294.4869860096 294 0.000000000000 0.000000000000
    #S1_20141115_ALL_F3 2014318.4869800478 318 -44.246267314066 -67.087914037567
    
    ###day1=`echo $day | awk -F: '{print $1}' | awk '{print substr($1,4,8)}'`
    ###year1=`echo $day1 | awk '{print substr($1,1,4)}'`
    ###mm1=`echo $day1 | awk '{print substr($1,5,2)}'`
    ###dd1=`echo $day1 | awk '{print substr($1,7,2)-1}'`
    ###doyr1=`doy $year1 $mm1 $dd1 | head -1 | awk '{printf("%03d", $6)}'`
    ###ymd1="${year1}${doyr1}"
    ####
    ###day2=`echo $day | awk -F: '{print $2}' | awk '{print substr($1,4,8)}'`
    ###year2=`echo $day2 | awk '{print substr($1,1,4)}'`
    ###mm2=`echo $day2 | awk '{print substr($1,5,2)}'`
    ###dd2=`echo $day2 | awk '{print substr($1,7,2)-1}'`
    ###doyr2=`doy $year2 $mm2 $dd2 | head -1 | awk '{printf("%03d",$6)}'`
    ###ymd2="${year2}${doyr2}"       
    
    ymd1=`echo $day | awk -F: '{print $1}' | awk '{print substr($1,4,8)}'`
    ymd2=`echo $day | awk -F: '{print $2}' | awk '{print substr($1,4,8)}'`
    yeardoy1=`cat baseline_table.dat | grep "_${ymd1}_" | awk '{print substr($2,1,7)}'`
    yeardoy2=`cat baseline_table.dat | grep "_${ymd2}_" | awk '{print substr($2,1,7)}'`
    #echo $ymd1 $ymd2 $yeardoy1 $yeardoy2
    #pwd
    #exit
    tmp=`find ./intf_all_png/ -maxdepth 1 -name "${yeardoy1}_${yeardoy2}-*${image_type}*"`
    #echo tmp is $tmp
    if [ "$tmp" != "" ]; then
	    echo "[$PROG]INFO: interfeorgram ${yeardoy1}_${yeardoy2} already done ($tmp)."
	    continue
    else
	    echo $day >> intf.in.rem
    fi
    #exit
done < intf.in

wc -l intf.in*