#!/bin/sh

# Name:
#   sh_grd_cut_roi
#   

# Purpose:
#   

# Example:
#   

# Modifications:
#   

# Algorigthm:
#   

# Dependency:
#   


PROG=sh_grd_cut_roi


file_grd=
file_roi=

#test case
#file_grd=/cygdrive/d/gsar/auto_grid/A142_0096/F3.roi_f3c/sbas.1.0.0001.0036.20170520.20220424.144.0408.01.___/vel_mask_ll.grd
#file_roi=../wkk_dam_anhui.kml

#test case 2
#file_grd=/sar/irm/by.frame/A142_0096/F3/sbas/vel_mask_ll.grd
#file_roi=../vector/wkk_dam_unmatched.kml


opath=`pwd`


while [ "$1" != "" ]; do
  case $1 in
    -f|-file)
      file_grd=$2
      ;;
    -r|-roi)
      file_roi=$2
      ;;
    -o|-opath)
      opath=$2
      ;;
    *)
      echo "[$PROG]ERROR: invalid option ($1)!!"
      echo "[$PROG]Usage: ${PROG} "
      echo "[$PROG]Usage: e.g.,"
      echo "[$PROG]Usage: ${PROG} "
      exit 1
      ;;
  esac
  shift 2  
done

if [ "$file_grd" == "" ]; then
  echo "[$PROG]ERROR: no grd file!! "
  exit 1
fi
if [ ! -s $file_grd ]; then
  echo "[$PROG]ERROR: grd file not exist ($file_grd)!! "
  exit 1
fi


if [ "$file_roi" == "" ]; then
  echo "[$PROG]ERROR: no roi file!! "
  exit 1
fi
if [ ! -s $file_roi ]; then
  echo "[$PROG]ERROR: roi file not exist ($file_roi)!! "
  exit 1
fi


kml2gmt $file_roi > _polygons
grep -n '> -L' _polygons | sed -e 's/:/ /g' > _poly_starts
li_all=`cat _polygons | wc -l`
np_all=`cat _poly_starts | wc -l`
echo li_all $li_all

#opath=_v
#mkdir -p $opath

#exit

\rm -f _stats
pi=1
pi=1
while [ $pi -le $np_all ]; do
  li_start=`sed -n "${pi}p" _poly_starts | awk '{print $1}'`
  wkk_id=`sed -n "${li_start}p" _polygons | awk -F\" '{print $2}'`
  echo wkk_id is $wkk_id
  
  opath_i="$opath/${wkk_id}"
  if [ ! -d $opath_i ]; then
    echo "mkdir -p $opath_i"
    echo "mkdir -p $opath_i" | sh
  fi

  #pi=`expr $pi + 1`
  #continue
  pj=`expr $pi + 1`
  echo pi np_all $pi $np_all
  if [ $pi -eq $np_all ]; then
    li_end=$li_all
  else
    li_end=`sed -n "${pj}p" _poly_starts | awk '{print $1-1}'`
  fi
  #ofile="$opath/`echo ${pi} | awk '{printf("%04d",$1)}'`.psxy"
  ofile="$opath_i/dam.psxy"
  echo ofile pi li_start li_end $ofile $pi $li_start $li_end
  
  sed -n "${li_start},${li_end}p" _polygons > $ofile
  #exit
  
  #Ri=`gmt gmtinfo $ofile -I.001/.001`
  #echo Ri $Ri
  
  #ofile_grd="$opath/`echo ${pi} | awk '{printf("%04d",$1)}'`.grd"
  ofile_grd="$opath_i/dam.grd"

  if [ ! -s $ofile_grd ]; then
    echo "gmt grdcut $file_grd -G$ofile_grd -F${ofile}+c " 
    echo "gmt grdcut $file_grd -G$ofile_grd -F${ofile}+c " | sh
    #grdinfo -C $ofile_grd -L2 >> _stats
  fi
 
  if [ -s $ofile_grd ]; then
    tmp=`gmt grdinfo -C $ofile_grd -L2 | grep NaN`
    if [ "$tmp" != "" ]; then
      #echo "[$PROG]INFO: no data in output file ($file_grd)!"
      #echo "\rm -f $ofile_grd"
      #echo "\rm -f $ofile_grd" | sh
      
      #try rect cut
      Ii=`gmt grdinfo -I $file_grd`
      Ri=`gmt gmtinfo $ofile $Ii`
      #echo "Ri $Ri"
      
      echo "gmt grdcut $Ri $file_grd -G$ofile_grd"
      echo "gmt grdcut $Ri $file_grd -G$ofile_grd" | sh

      #exit
    fi
  fi

  if [ -s $ofile_grd ]; then
    tmp=`gmt grdinfo -C $ofile_grd -L2 | grep NaN`
    if [ "$tmp" != "" ]; then
      echo "[$PROG]INFO: no data in output file ($file_grd)!"
      echo "\rm -f $ofile_grd"
      #exit
      echo "\rm -f $ofile_grd" | sh
    fi
  fi
  #gmt grd2cpt $ofile_grd -Cjet  > disp.cpt
  #sh_grd2kml $ofile_grd disp.cpt
  
  #exit
  
  pi=`expr $pi + 1`
done
