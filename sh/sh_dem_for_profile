#!/bin/sh

# Name:
#   sh_dem_for_profile
#   

# Purpose:
#   + Extract topography along velocity profiles

# Input:
#   + 
#   + 

# Output:
#   +

# Example:
#   +

# Algorithm:
#   +

# Modifications:
#   + Created on Tue Sep  9 20:52:13 CST 2025 by tianyf
#   +

# Dependency:
#   +
#


PROG=sh_dem_for_profile

timestamp=`date | sed -e "s/ /_/g" | sed -e "s/:/-/g"`

path_old=`pwd`

usage_of_it(){
cat <<eob
${PROG}
  version 20250909
|_ Description_of_this_program
|+
  -Dependencies_of_this_program
|<
  Inputs
  -p|-path INPUT_PATH (Location of velocity profiles generated by iGPS)
  [-o|-opath OUTPUT_PATH] (Output directory for topography profiles)
    default: pt.XXX
  [-t|-topo|-topography|-dem|-d DEM_FILE] 
    default: ETOPO1
  [-h|-help|--help]
|>
  Outputs
|e.g.,
  ${PROG} -p p.fa_jiali -o pt.fa_jiali -t /ETOPO1.grd
(c)iGPS (https://github.com/igps-ftk/)
eob
}

if [ $# -lt 2 ]; then
  usage_of_it
  exit 1
fi

file_dem=${GMT_pub}/dem.gmt/ETOPO1_Ice_g_gmt4/ETOPO1_Ice_g_gmt4.grd

path=
#path=pg.fa_yzs_20250721

opath=
#opath=pt.fa_yzs_20250721


while [ "$1" != "" ]; do
  case $1 in
    -p|-path)
      path=$2
      ;;
    -o|-opath)
      opath=$2
      ;;
    -t|-topo|-topography|-dem|-d)
      file_dem=$2
      ;;
    -h|-help|--help)
      usage_of_it
      exit 1
      ;;
    *)
      echo -e "[$PROG]\033[1;33;41mERROR\033[0m: invalid option ($1)!!"
      usage_of_it
      exit 1
      ;;
  esac
  shift 2
done

if [ "$path" = "" ]; then
  echo -e "[$PROG]\033[1;33;41mERROR\033[0m: no input path ($path)!!"
  exit 1
fi
if [ ! -d $path ]; then
  echo -e "[$PROG]\033[1;33;41mERROR\033[0m: input path not exist ($path)!!"
  exit 1
fi
echo opath $opath
if [ "$opath" = "" ]; then
  tmp="`dirname ${path}/test.txt1`"
  #echo tmp $tmp
  opath=`dirname $tmp`/pt`basename $tmp | awk '{print substr($0,index($0,"."))}'`
  echo opath $opath
  #exit
fi

echo "mkdir -p $opath"
echo "mkdir -p $opath" | sh

#pfiles=`find $path -maxdepth 1 -type f -name "profile_???_vel.psxy" |sort`
pfiles=`find $path -maxdepth 1 -type f -name "profile_1[5-6]*_vel.psxy" |sort`
if [ "$pfiles" = "" ]; then
  echo "[$PROG]INFO: no profiles (profile_???_vel.psxy) in $path."
  exit 1
fi

#echo pfiles $pfiles
for pfile in $pfiles; do
  #dos2unix $pfile
  oname=`basename $pfile | sed -e 's/vel.psxy/dem.txt/g'`
  ofile="${opath}/${oname}"
  echo $pfile $ofile
  
  line_start=`sed 's/\r$//' $pfile | grep PSXY_PROFILE | head -1 | awk '{print $3,$4}'`
  line_stop=`sed 's/\r$//' $pfile | grep PSXY_PROFILE | tail -1 | awk '{print $3,$4}'`
  pf_xy=`sed 's/\r$//' $pfile | grep PSXY_FAULT_PROFILE_INTERSECT | tail -1 | awk '{print $3,$4}'`
  line_ends=`echo $line_start $line_stop | awk '{print $1"/"$2"/"$3"/"$4}'`
  #line_center=`echo $line_start $line_stop | awk '{print ($1+$3)/2 , ($2+$4)/2}'`
  #echo line_ends $line_ends line_start $line_start line_stop $line_stop line_center $line_center
  
  #calculate distance from start to center
  line_start_intersect=`echo $line_start $pf_xy | awk '{print $1"/"$2"/"$3"/"$4}'`  
  #echo "gmt grdtrack -E${line_start_intersect}+d+n2 -G$file_dem"
  #exit
  dist_s2c=`gmt grdtrack -E${line_start_intersect}+d+n2 -G$file_dem | tail -1 | awk '{print $3}'`
  echo dist_s2c $dist_s2c
  #exit
  
  echo "#DISTANCE_START_INTERSECT: $dist_s2c" > $ofile
  echo "#lon lat distance_to_start dem(m)" >> $ofile
  echo "gmt grdtrack -E${line_ends}+n400 -G$file_dem > $ofile"
  echo "gmt grdtrack -E${line_ends}+d+n400 -G$file_dem  >> $ofile" | sh
  #break
done

echo "[$PROG]INFO: done."
