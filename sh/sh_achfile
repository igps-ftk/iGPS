#!/bin/sh

# Name:
#   sh_achfile
#   

# Purpose:
#   

# Example:
#   

# Modifications:
#   

# Algorigthm:
#   

# Dependency:
#   

if [ $# -le 2 ]; then
    echo "Usage: sh_armnr -dir src_dir -odir target_dir -expt EXPT -yrs YRS -yre YRE -doys DOYS -doye DOYE"
    exit 1
fi

yearStart=`date +%Y`
yearEnd=$yearStart

doys=`date +%j`
#doye=`ymd2ydoy ${yearStart} 12 31 | awk '{print $2}'`

expt="????"

path=
opath=

# process command-line parameters
#####################################################
#COMMAND LINE PARAMETERS
#####################################################
while [ "$1" != "" ]
do
  #echo $1
  case $1 in
      -dir)
	  cd $2
	  path=`pwd`
	  ;;
      -odir)
	  mkdir -p $2
	  cd $2
	  opath=`pwd`
	  ;;
      -yrs)
	  yearStart=$2
	  #yr=`echo $yearStart | awk '{print substr($0,3,2)}'`
	  #y=`echo $yearStart | awk '{print substr($0,4,1)}'`
	  #ndays=`ymd2ydoy ${yearStart} 12 31 | awk '{print $2}'`
	  ;;
      -yre)
	  yearEnd=$2
	  ;;
      -doys)
	  doys=$2
	  ;;
      -doye)
	  doye=$2
	  ;;
      -expt)
	  expt=$2
	  ;;

      *)
	  echo "invalid options: $1"
	  exit 1
	  ;;
  esac
  shift 2
done

if [ "$path" = "" ]; then
    echo "No source h-files path."
    exit 1
fi

src_dir=$path
cd ${src_dir}
if [ $? -ne 0 ]; then
    echo "Cannot change to source h-files path."
    exit 1
fi

tgt_dir=$opath
cd ${tgt_dir}
if [ $? -ne 0 ]; then
    echo "Cannot change to output h-files path."
    exit 1
fi

ptn="h${expt}a.?????"

year=$yearStart
#total number of days in current year
#doy0=`ymd2ydoy $year 12 31 | awk '{print $2}'`
#doy1=`ymd2ydoy $year 1 1 | awk '{print $2}'`
#ndoys=`expr $doy0 - $doy1 + 1`
#

while [ $year -le $yearEnd ]; do
    
    yr=`echo $year | awk '{print substr($0,3,2)}'`
    y=`echo $year | awk '{print substr($0,4,1)}'`

    if [ $year -eq $yearStart ];then
	doy=$doys
    else
	doy=001
    fi

    if [ $year -eq $yearEnd ]; then
	doye_yr=$doye
    else
	doye_yr=`ymd2ydoy $year 12 31 | awk '{print $2}'`
    fi
    
    while [ $doy -le $doye_yr ]; do
	doy=`echo $doy | awk '{printf("%03d",$0)}'`
	#echo $year $doy
	file=h${expt}a.${yr}${doy}.Z
	#echo "${src_dir}/${year}_${doy}/$file"
	#echo "${tgt_dir}/${year}/${doy}/$file"

	#echo  "mkdir -p ${tgt_dir}/${year}/${doy}"
	mkdir -p ${tgt_dir}/${year}/${doy}
        #echo  "mv ${src_dir}/${year}/${doy}/$file ${tgt_dir}/${year}/${doy}/$file"
        #mv ${src_dir}/${year}/${doy}/$file ${tgt_dir}/${year}/${doy}/$file
	echo "mv ${src_dir}/$file ${tgt_dir}/${year}/${doy}/$file"
	mv ${src_dir}/$file ${tgt_dir}/${year}/${doy}/$file
	#if [ $? -eq 0 ]; then
	#    \rm -f 
	#fi

	#mv ${src_dir}/${year}_${doy}/$file ${tgt_dir}/${year}/${doy}/$file
	#compress ${tgt_dir}/${year}/${doy}/$file
	doy=`expr $doy + 1`
    done
     year=`expr $year + 1`
     #total number of days in current year
     #doy0=`ymd2ydoy $year 12 31 | awk '{print $2}'`
     #doy1=`ymd2ydoy $year 1 1 | awk '{print $2}'`
     #ndoys=`expr $doy0 - $doy1 + 1`
     #yr=`echo $year | awk '{print substr($0,3,2)}'`
     #y=`echo $year | awk '{print substr($0,4,1)}'`

done



