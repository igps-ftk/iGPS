#!/bin/sh

# Name:
#   sh_sar_sbas_extract_time_series_lls
#   

# Purpose:
#   

# Example:
#   

# Modifications:
#   + Mon Mar 27 12:31:29 CST 2023
#     Fix a bug when data is NaN for some locations.
#     Added -N option to grdtrack.

# Algorigthm:
#   

# Dependency:
#   


PROG=sh_sar_sbas_extract_time_series_lls

path_old=`pwd`

file=
path=$path_old
opath=neu

while [ "$1" != "" ]; do
  case $1 in
    -f|-file)
      file=$2
      ;;
    -p|-path)
      path=$2
      ;; 
    -o|-opath)
      opath=$2
      ;; 
    *)
      echo "[$PROG]ERROR: invalid option ($1)!!"
      echo "[$PROG]Usage: ${PROG} "
      echo "[$PROG]Usage: e.g.,"
      echo "[$PROG]Usage: ${PROG} "
      exit 1
      ;;
  esac
  shift 2  
done

if [ "$file" == "" ]; then
  echo "[]ERROR: no input file given!!"
  exit 1
fi

mkdir -p $opath
if [ $? -ne 0 ]; then
  echo "[]ERROR: cannot create output path ($opath)!!"
  exit 1
fi

disp_files=`find $path -maxdepth 1 -type f -name "disp_20?????_mask_ll.grd" | sort`
#disp_files=`find $path -maxdepth 1 -type f -name "disp_20?????_mask_ll_r4.nc" | sort`

echo disp_files $disp_files


cat $file | awk '{print $2,$3}' > _ll
cat $file | awk '{print $2,$3,$1}' > _lls


\rm -f _disp_times
for disp_file in $disp_files; do
  echo $disp_file
  disp_name=`basename $disp_file`
  year=`echo $disp_name | awk -F_ '{print substr($2,1,4)}'`
  doyr=`echo $disp_name | awk -F_ '{print substr($2,5,3)}'`
  dyr=`doy $year $doyr | tail -1 | awk '{print $3}'`
  disp_time="$dyr $year $doyr"
  echo "$disp_name $dyr $year $doyr" >> _disp_times
  gmt grdtrack _ll -G$disp_file -N | awk '{print $1,$2,$3}' > _${disp_name}.lld
  cat _${disp_name}.lld | awk '{print dyr,year,doyr,$0}' dyr=$dyr year=$year doyr=$doyr > _${disp_name}.lldt
  paste _${disp_name}.lldt _lls > _${disp_name}.lldts
  #echo heh
  #exit
done

#exit

while read sline; do
  site=`echo $sline | awk '{print $1}'`
  lon=`echo $sline | awk '{print $2}'`
  lat=`echo $sline | awk '{print $3}'`
  echo site lon lat $site $lon $lat
  ofile=${opath}/${site}.neu
  #\rm -f $ofile
  
  grep -h " $site$" _*.lldts | sort -k1 | awk '{print $1,$2,$3,$4,$5,$6}'> $ofile
  #exit
  
done < $file

\rm -f _disp*_mask_ll.grd.lld*

