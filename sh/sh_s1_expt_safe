#!/bin/sh

# Name:
#   sh_s1_expt_safe
#   

# Purpose:
#   

# Example:
#   

# Modifications:
#   

# Algorithm:
#   

# Dependency:
#   


PROG=sh_s1_expt_safe


timestamp=`date | sed -e 's/ /_/g' | sed -e 's/:/-/g'`
file_tmp=/tmp/_tmp_${PROG}_${timestamp}


host_type=`hostname | awk '{print substr($1,1,1)}'`
if [ "$host_type" == "n" ]; then
  root_safe=/sar/s1/metainfo/manifest.safe/
else
  root_safe=${esa_data}/metainfo/manifest.safe/
fi

path=`pwd`
opath=$path
perc_min=
is_verbose=n
is_merge=y
master_date=

while [ "$1" != "" ]; do
  case $1 in
    -path)
      path=$2
      ;;
    -s|-path_safe)
      root_safe=$2
      ;;
    -opath)
      opath=$2
      ;;
    -p|-perc_min)
      perc_min=$2
      ;;
    -m|-merge)
      is_merge=$2
      ;;
    -master)
      master_date=$2
      ;;
    -v|-verbose)
      is_verbose=$2
      ;;
    *)
      echo -e "[$PROG]\033[1;33;41mERROR\033[0m: invalid option ($1)!!"
      echo "[$PROG]Usage: ${PROG} "
      echo "[$PROG]Usage: e.g.,"
      echo "[$PROG]Usage: ${PROG} "
      exit 1
      ;;
  esac
  shift 2  
done

files=`find $path -maxdepth 1 -type f -name "overlapping.S1*.txt"`
nf=`find $path -maxdepth 1 -type f -name "overlapping.S1*.txt" | wc -l`
if [ "$files" == "" ]; then
  echo -e "[$PROG]\033[1;33;41mERROR\033[0m: no existing overlapping files exist!!"
  exit 1
fi

echo nf $nf
#exit 1

#check settings in config file
if [ "$perc_min" == "" ]; then
  if [ -s config.txt ]; then
    perc_min=`grep '^ ' config.txt | grep perc_min | awk -F\= '{print $2}'`
  fi
  echo "[$PROG]INFO:perc_min in config.txt is $perc_min"
fi
if [ "$master_date" == "" ]; then
  if [ -s config.txt ]; then
    master_date=`grep '^ ' config.txt | grep master_date | awk -F\= '{print $2}'`
  fi
  echo "[$PROG]INFO:master date in config.txt is $master_date"
fi


if [ "$perc_min" == "" ]; then
  if [ -s input.lst.ok ]; then
    echo "[$PROG]INFO: use mininum overlapping percentage value from input.lst.ok."
    perc_min=`grep '^ ' input.lst.ok | awk '{print $2-.001}' | min`
  else
    if [ -s input.lst ]; then
      echo "[$PROG]INFO: use mininum overlapping percentage value from input.lst."
      perc_min=`grep '^ ' input.lst | awk '{print $2-.001}' | min`
    else
      echo "[$PROG]INFO: use mininum overlapping percentage value from overlapping.*.txt files."
      perc_min=`grep -h '^ ' $files | awk '{print $2-.001}' | min`
    fi
  fi
fi
echo "[$PROG]INFO:perc_min $perc_min"
#exit

if [ -s exclude_date.txt ]; then
  line_ending=`cat -v exclude_date.txt | head -1 | awk '{print substr($0,length($0)-1)}'`
  echo "[$PROG]INFO: line_ending is $line_ending"
  if [ "$line_ending" = '^M' ]; then
      echo "[$PROG]INFO: converting DOS text file to Linux/Unix line-ending format ($file) ..."
      dos2unix exclude_date.txt
  fi
  sed '/^$/d' exclude_date.txt > exclude_date_no_blank_line.txt
fi

#files=`find $path -maxdepth 1 -type f -name "overlapping.S1*.txt"`
for file in $files; do
  #echo file $file
  target=`basename $file | sed -e 's/overlapping.//g' | sed -e 's/.txt//g'`
  #echo target $target
  tmp=`dirname $file`
  expt_name=`basename $tmp`
  
  nfd=`echo $expt_name | awk -F- '{print NF}'`
  echo nfd $nfd for $expt_name
  if [ $nfd -ge 4 ] ;then
    track=`echo $expt_name | awk -F- '{print $1}'`
    AD=`echo $expt_name | awk -F- '{print toupper($2)}'`
  else
    track=`echo $expt_name | awk '{print substr($1,2,3)}'`
    AD=`echo $expt_name | awk '{print substr($1,1,1)}'`
  fi
  path_safe="$root_safe/${AD}${track}" 
  if [ "$is_verbose" == "y" ]; then
    file_log=${opath}/overlapping.${target}.log
  else  
    file_log='/dev/null'
  fi
  echo "esa_s1_manifest_overlap $path_safe $target $opath $perc_min > $file_log"
  echo "esa_s1_manifest_overlap $path_safe $target $opath $perc_min > $file_log" | sh
done

if [ "$is_merge" != "y" ]; then
  exit
fi

#exit
grep -h '^ ' $files | sort > ${file_tmp}

dates_excluded=
if [ -s exclude_date.txt ]; then
  dates_excluded=`grep -h '^ ' exclude_date.txt | awk '{print $1}'`
fi
echo dates_excluded $dates_excluded
cmdstr="grep '^ ' ${file_tmp} "
for date_excluded in $dates_excluded; do
  echo date_excluded $date_excluded
  cmdstr="$cmdstr | grep -v $date_excluded"
done
cmdstr="$cmdstr > input.lst"
echo cmdstr $cmdstr
echo $cmdstr | sh

if [ "$is_verbose" == "y" ]; then
  file_log=${opath}/input.lst.ok.log
else  
  file_log='/dev/null'
fi
echo "esa_s1_overlap_check3 input.lst input.lst.ok $nf > $file_log"
echo "esa_s1_overlap_check3 input.lst input.lst.ok $nf > $file_log" | sh

if [ "$master_date" != "" ]; then
  tmp=`grep '^ ' input.lst.ok | grep $master_date`
  if [ "$tmp" != "" ];then
    \cp -f input.lst.ok $file_tmp
    grep '^ ' $file_tmp | grep $master_date > input.lst.ok
    grep '^ ' $file_tmp | grep -v $master_date >> input.lst.ok
    grep '^ ' -v $file_tmp >> input.lst.ok
  fi  
fi

\rm ${file_tmp}
