#!/bin/sh

# Name:
#   sh_grd_disp_time_series
#   

# Purpose:
#   

# Example:
#   

# Modifications:
#   

# Algorigthm:
#   

# Dependency:
#   


PROG=sh_grd_disp_time_series

path=
path=../anhui/disp/3 #test purpose
path=`pwd`

opath=`pwd`/ts
#opath=../anhui/disp/3/ts


while [ "$1" != "" ]; do
  case $1 in
    -p|-path)
      path=$2
      ;;
    -o|-opath)
      opath=$2
      ;;
    *)
      echo "[$PROG]ERROR: invalid option ($1)!!"
      echo "[$PROG]Usage: ${PROG} "
      echo "[$PROG]Usage: e.g.,"
      echo "[$PROG]Usage: ${PROG} "
      exit 1
      ;;
  esac
  shift 2  
done

if [ "$path" == "" ]; then
  echo "[$PROG]ERROR: no input path!!"
  exit 1
fi

if [ ! -d "$path" ]; then
  echo "[$PROG]ERROR: path not exist ($path)!!"
  exit 1
fi

if [ ! -d "$opath" ]; then
  echo "mkdir -p $opath"
  echo "mkdir -p $opath" | sh
fi

echo opath $opath
#exit

files_grd=`find $path -maxdepth 1 -type f -name "disp_20?????_mask_ll.grd"|sort`
file_grd=`echo $files_grd | tail -1 | awk '{print $NF}'`
echo file_grd $file_grd

file_tmp="_tmp_sll_${PROG}_`date | sed -e 's/ /_/g' | sed -e 's/:/-/g'`"
echo file_tmp $file_tmp
#exit

file_site=$opath/sites

gmt grd2xyz -s $file_grd | nl | awk '{printf(" %04d %f %f\n",$1,$2,$3)}' > $file_tmp
gmt grd2xyz -s $file_grd | nl | awk '{printf("> -L\"%04d\"\n %f %f\n",$1,$2,$3)}' > ${file_site}.psxy
gmt gmt2kml -Fs ${file_site}.psxy > ${file_site}.kml
#exit

echo sh_sar_sbas_extract_time_series_lls -path $path -opath $opath -file $file_tmp
echo sh_sar_sbas_extract_time_series_lls -path $path -opath $opath -file $file_tmp | sh

\rm -f $file_tmp
