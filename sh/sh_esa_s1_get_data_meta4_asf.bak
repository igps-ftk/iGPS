#!/bin/sh

# Name:
#   sh_esa_s1_wget_data_meta4_asf
#   

# Purpose:
#   

# Example:
#   

# Modifications:
#   

# Algorigthm:
#   

# Dependency:
#   
file_user=${HOME}/iGPS.addon/sh/aria2.conf

if [ "$1" = "" ]; then
  echo "Usage: sh_esa_s1_wget_data_meta4_asf meta4_file [opath]"
  exit 1
fi


file=$1
ext=${file##*.}
echo $file $ext
if [ "$ext" != "meta4" ]; then
  echo "[]ERROR: wrong input file type {${file}}!!"
  exit 1
fi

#files=`cat $file | awk -F\> '{for(i=1;i<=NF;i++){print $i}}' |grep '.zip' | grep S1 | grep _IW_SLC__ | awk -F\" '{print $2}'`
files=`cat $file | awk -F\> '{for(i=1;i<=NF;i++){print $i}}' |grep '.zip' | grep S | grep _ | awk -F\" '{print $2}'`
echo files $files
#exit

opath=${esa_data}/S1/
if [ "$2" != "" ]; then
  opath=$2
fi

cd $opath
pwd

#file_aria2=${file}.aria2

for file in $files; do
  #if [ -s $file  ]; then
  if [ -s $file -a ! -s ${file}.aria2 ]; then
    echo "$file already exist! skipped"
    #echo ls -l $file
    #echo ls -l $file | sh
    file `pwd`/$file
    continue
  fi

  if [ -s ${esa_data}/S1/$file -a ! -s ${esa_data}/S1/${file}.aria2 ]; then
    echo "$file already exist! skipped"
    #echo ls -l $file
    #echo ls -l $file | sh
    file ${esa_data}/S1/$file
    continue
  fi
  
  #check if is already downloaded (but not in this server)
  tmp=`cat ${esa_data}/s1.list |grep $file`
	if [ "$tmp" != "" ]; then
	  echo "[]INFO: already downloaded (maybe not in this server)! skipped $file"
	  echo "[]INFO: available at $tmp "
	  continue
	fi

  tmp=`cat ${esa_data}/s1.2.list |grep $file`
	if [ "$tmp" != "" ]; then
	  echo "[]INFO: already downloaded (maybe not in this server 2)! skipped $file"
	  echo "[]INFO: available at $tmp "
	  continue
	fi
		
  pwd
  #echo aria2c --conf-path=$file_user --http-auth-challenge=true  "https://datapool.asf.alaska.edu/SLC/SA/${file}"
  #exit
  echo aria2c -c --conf-path=$file_user --check-certificate=false  --http-auth-challenge=true  "https://datapool.asf.alaska.edu/SLC/SA/${file}"
  aria2c -c --file-allocation=none --conf-path=$file_user --check-certificate=false  --http-auth-challenge=true  "https://datapool.asf.alaska.edu/SLC/SA/${file}"
  exit
done


