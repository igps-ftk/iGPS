;+
;PURPOSE:
;  Calculate CME using regional stacking algorighm of Nikolaidis 2002.
;INPUT:
;  Residual time series (SIO/NEU format).
;OUTPUT:
;  Common-mode Errors time series (SIO/NEU format)
;-
PRO CME_CAL_STACKING_NIKOLAIDIS2002, PATH=PATH, $
    OFILE=OFILE, $  ;OUTPUT CME FILE
    CME_SITE_FILE=CME_SITE_FILE, $ ;CME sites file
    SITES=SITES, $
    FILES=FILES
    
  IF N_ELEMENTS(PATH) EQ 0 && N_ELEMENTS(FILES) EQ 0 THEN BEGIN
    PATH=FILEPATH(ROOT_DIR=!IGPS_ROOT,SUBDIRECTORY=['example','sio'], $
      'cleanedNeuUnf.resid')
    PATH='E:\data\cmonoc\rerun\20100128b\rawNeu.cmonoc.demean.cln.resid'
    path='J:\gpse\rerun.lutai\comb\trnsLTCM\gsoln\pos.neu.Stibet.cGPS.resid'
    
    FILES = FILE_SEARCH(PATH+PATH_SEP()+'*.neu', COUNT=NF)
    OFILE=GETPATHNAME(PATH)+PATH_SEP()+'cmes.neu'
    SITES=STRMID(GETFILENAME(FILES),0,4)
  ENDIF
  
  IF N_ELEMENTS(FILES) LT 1 THEN BEGIN
    PRINT, '[CME_CAL_STACKING_NIKOLAIDIS2002]ERROR: no time series files found!', $
      FORMAT='(A)'
    RETURN
  ENDIF
  
  PRINT, '[CME_CAL_STACKING_NIKOLAIDIS2002]CME sites:',SITES, $
    FORMAT='(A,10A5)'
    
  NEUIS=[3,4,5]
  NEUEIS=[6,7,8]
  TI=0
  
  ;;READ DATA FOR CME SITES
  
  PRINT, '[CME_CAL_STACKING_NIKOLAIDIS2002]Reading data...', $
    FORMAT='(A)'
  IND=-1
  FOR SI=0, N_ELEMENTS(SITES)-1 DO BEGIN
    CFILES=GREPI(FILES,SITES[SI],/FOLD_CASE)
    IF CFILES[0] EQ '' THEN BEGIN
      PRINT, '[CME_CAL_STACKING_NIKOLAIDIS2002]WARNING: no data for site '+ $
        SITES[SI]+'!', FORMAT='(A)'
      CONTINUE
    ENDIF
    READ_SIO, CFILES[0], DATA=DATA
    NDAYS=N_ELEMENTS(DATA[0,*])
    TI=0
    IF N_ELEMENTS(CDATA) EQ 0 THEN BEGIN
      YEAR=DATA[1,*]
      DOY=DATA[2,*]
      JDS=YDOY2MJD(YEAR, DOY)
      DATA[0,*]=JDS
      CDATA=PTR_NEW(DATA)
      RDATA=PTR_NEW(DATARES)
      IND=SI
      JDMINS=JDS[0]
      JDMAXS=LAST(JDS[*])
      CFILES_USED=CFILES[0]
    ENDIF ELSE BEGIN
      YEAR=DATA[1,*]
      DOY=DATA[2,*]
      JDS=YDOY2MJD(YEAR, DOY)
      DATA[0,*]=JDS
      CDATA=[CDATA, PTR_NEW(DATA)]
      RDATA=[RDATA, PTR_NEW(DATARES)]
      IND=[IND,SI]
      JDMINS=[JDMINS, JDS[0]]
      JDMAXS=[JDMAXS, LAST(JDS[*])]
      CFILES_USED=[CFILES_USED,CFILES[0]]
    ENDELSE
  ENDFOR
  ;
  NCSITES=N_ELEMENTS(IND)
  CMESITES=SITES[IND]
  ;HELP, CDATA, YRMINS, YRMAXS, JDMINS, JDMAXS
  
  
  PRINT, '[CME_CAL_STACKING_NIKOLAIDIS2002]Calculating CME...', $
    FORMAT='(A)'
  ;;CALCULATE CME CORRECTIONS FOR EACH DAY
  NCDAYS=MAX(JDMAXS)-MIN(JDMINS)+1
  CME_NEU=DBLARR(6, NCDAYS)
  CME_NEU_DAY=DBLARR(6)
  CME_NEU_ALL=[-9999]
  CMEMJDS=DBLARR(NCDAYS)
  FOR JI=0, NCDAYS-1 DO BEGIN
    JD=MIN(JDMINS)+JI
    CME_NEU(0,JI)=JD
    CME_NEU_DAY[0]=JD
    
    FOR I=0,2 DO BEGIN
      ;;
      NEUI=NEUIS[I]
      NEUEI=NEUEIS[I]
      ;STOP
      SUM0=0D0
      SUM1=0D0
      NCSITE=0
      FOR SI=0, NCSITES-1 DO BEGIN
        ;;
        SITE=CMESITES[SI]
        ;JD_TO_DECYRS, JD, DECYR
        JD_TO_YDS , JD, YR, DOY, SEC
        YRS=(*CDATA[SI])[1,*]
        DOYS=(*CDATA[SI])[2,*]
        IND=WHERE(YRS EQ YR AND DOYS EQ DOY)
        IF IND[0] EQ -1 THEN BEGIN
          CONTINUE
        ENDIF
        
        ;POSSIBLE
        IF N_ELEMENTS(IND) NE 1 THEN BEGIN  ;DUPLICATE DATE
          CONTINUE
        ENDIF
        
        NEU=(*CDATA[SI])[NEUI,IND]
        NEUE=(*CDATA[SI])[NEUEI,IND]
        SUM0=SUM0+NEU/NEUE^2
        SUM1=SUM1+1D0/NEUE^2
        
        NCSITE=NCSITE+1
      ENDFOR
      
      IF NCSITE LT 3 THEN BEGIN
        GOTO,NEXT_DAY
      ENDIF
      IF SUM1 NE 0 THEN CME=SUM0/SUM1
      ;PRINT,CME
      
      CME_NEU(I+3,JI)=CME
      CME_NEU_DAY[I+3]=CME
    ENDFOR
    ;PRINT,JD
    DOY,JD,DYEAR=DYR,DAY_OF_YEAR=DOYR,MJD=MJD
    CME_NEU(0,JI)=DYR
    CME_NEU[1,JI]=FIX(DYR)
    CME_NEU[2,JI]=DOYR
    CME_NEU_DAY[0]=DYR
    CME_NEU_DAY[1]=FIX(DYR)
    CME_NEU_DAY[2]=DOYR
    
    IF CME_NEU_ALL[0] EQ -9999 THEN BEGIN
      CME_NEU_ALL=CME_NEU_DAY
    ENDIF ELSE BEGIN
      CME_NEU_ALL=[[CME_NEU_ALL],[CME_NEU_DAY]]
    ENDELSE
    CMEMJDS[JI]=MJD
    NEXT_DAY:
  ENDFOR
  ;;
  ;;OUTPUT CME SERIES
  PRINT,'[CME_CAL_STACKING_NIKOLAIDIS2002]CME series output to ',OFILE, $
    FORMAT='(2A)'
  WRITE_SIO,OFILE,DATA=CME_NEU_ALL, $
    PROG='CME_CAL_STACKING_NIKOLAIDIS2002', $
    SRC=CFILES_USED
  PRINT, '[CME_CAL_STACKING_NIKOLAIDIS2002]Normal end.', FORMAT='(A)'
END