#!/bin/sh

# Name:
#   sh_asf_s1_get_slc_py
#   

# Purpose:
#   

# Example:
#   

# Modifications:
#   

# Algorithm:
#   

# Dependency:
#   

PROG=sh_asf_s1_get_slc_py

timestamp=`date | sed -e "s/ /_/g" | sed -e "s/:/-/g"`

path_old=`pwd`

usage_of_it(){

cat <<eob
$PROG
|_Use aria2 to download S1 SLC zip files in ASF Python downloader (download*.py).
  https://search.asf.alaska.edu/  (search and download Python script)
|<
  -f|-file PY_FILE
  -ac|-aria2_conf ARIA2_CONF_FILE
  [-p|-path OUTPUT_PATH]
    default: \`pwd\`
  [-h|-help]
|e.g.,
  $PROG -file download-all-2021-01-07_06-49-41.py
    -ac /home/tianyf/earthdata_yftian.txt
    -path /sar/s1/
  Sample aria2 account file:
    http-user=your_account
    http-passwd=your_password
(c)iGPS (https://github.com/igps-ftk/)
eob

}


if [ "$1" = "" ]; then
  usage_of_it
  exit 1
fi

user=tianyunfeng
file_aria2_conf=

file_py=

path=`pwd`


if [ "`echo $1 | awk '{print substr($1,1,1)}'`" == "-" ]; then
  while [ "$1" != "" ]; do
    case $1 in
      -f|-file)
        file_py=$2
        ;;
      -a|-ac|-aria2_conf)
        file_aria2_conf=$2
        ;;
      -u|-user)
        user=$2
        ;;
      -p|-path)
        path=$2
        ;;
      -w1)
        w1=$2
        ;;
      -w2)
        w2=$2
        ;;
      -h|-help|--help)
        usage_of_it
        exit 1
        ;;
      *)
        echo -e "[$PROG]\033[1;33;41mERROR\033[0m: invalid option ($1)!!"
        usage_of_it
        exit 1
        ;;
    esac
    shift 2
  done
else
  file_py=$1
  
  if [ "$2" != "" ]; then
    path=$2
  fi
  
  if [ "$3" != "" ]; then
     user=$3
  fi
fi

if [ "$file_aria2_conf" == "" -o "$file_aria2_conf" == "null" ]; then
  file_aria2_conf=${HOME}/iGPS.addon/sh/aria2.conf.${user}
fi


if [ "$file_aria2_conf" == "" ]; then
  echo -e "[$PROG]\033[1;33;41mERROR\033[0m: no ASF login information file given!!"
  exit 1
fi

if [ "$file_py" == "" ]; then
  echo -e "[$PROG]\033[1;33;41mERROR\033[0m: no ASF Python Downloader file given!!"
  exit 1
fi

ext=${file_py##*.}
echo $file_py $ext
if [ "$ext" != "py" ]; then
  echo -e "[$PROG]\033[1;33;41mERROR\033[0m: wrong input file type (${file_py})!!"
  exit 1
fi
#exit

if [ ! -s $file_py ]; then
  echo -e "[$PROG]\033[1;33;41mERROR\033[0m: ASF Python Downloader file not exist ($file_py)!!"
  exit 1
fi

files=`cat $file_py | sed -e 's/https/https\n/g' | grep '.zip' | grep S1 | grep _IW_SLC__ | awk -F\" '{print $1}' | awk -F\/ '{print $6}' |sort `
echo $files
#exit

cd $path
pwd



for file in $files; do

	#check if already in this server
  #if [ -s $file  ]; then
  if [ -s $file -a ! -s ${file}.aria2 ]; then
    echo "$file already exist! skipped"
    #echo ls -l $file
    #echo ls -l $file | sh
    file `pwd`/$file
    continue
  fi

  if [ -s ${esa_data}/S1/$file -a ! -s ${esa_data}/S1/${file}.aria2 ]; then
    echo "$file already exist! skipped"
    #echo ls -l $file
    #echo ls -l $file | sh
    file ${esa_data}/S1/$file
    continue
  fi
  
  
  #check if is already downloaded (but not in this server)
  tmp=`cat ${esa_data}/s1.list |grep $file`
	if [ "$tmp" != "" ]; then
	  echo "[$PROG]INFO: already downloaded (maybe not in this sever)! skipped $file"
	  echo "[$PROG]INFO: available at $tmp "
	  continue
	fi

  tmp=`cat ${esa_data}/s1.2.list |grep $file`
	if [ "$tmp" != "" ]; then
	  echo "[$PROG]INFO: already downloaded (maybe not in this server 2)! skipped $file"
	  echo "[$PROG]INFO: available at $tmp "
	  continue
	fi
			
  #
  pwd
  #exit
  echo aria2c -c --conf-path=$file_aria2_conf --check-certificate=false  --http-auth-challenge=true  "https://datapool.asf.alaska.edu/SLC/SA/${file}"
  aria2c -c --file-allocation=none --conf-path=$file_aria2_conf --check-certificate=false  --http-auth-challenge=true  "https://datapool.asf.alaska.edu/SLC/SA/${file}"
  #exit
done

echo "[$PROG]INFO: done."