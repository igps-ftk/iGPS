#!/bin/sh
# sh_rerun_ftp_cmonoc
#  CMONOC CGPS observations re-analysis project by  using local/intranet FTP server.


# Modifications:
#
#   Tian AUG-24-2007
#     Switch to FTP instead of local linking data files.
#     (Sometimes, uncompress the link file actually operated on the linked one.)
#
#   Tian AUG-24-2007
#   Add support to link atml files.
#     add a new variable--centertype (CM,CE,CF)
#
#   MAR-25-2008 Tian
#     +Add/edit some documents/comments;
#     +Add functinality to delete unnecessary links files in ${doy} directory;


# pre-requisites
# +)Target directory exists, including those important parameters in
#   $EXPT/tables sub-directory.
#    sites.defaults
#    process.defaults
#    sestbl.
#    sittbl.
#    station.info
#    autcln.cmd
#   $EXPT/gsoln
#    globk_comb.cmd
#    glorg_comb.cmd

# OK, let's ride.


# get command-line parameters
# +start and end date
# +orbit type (sio/igs/igu/g-file)
# +


# set inital parameters
#center type
centertype=cm

#top-level-directory of analysis
rerun_root=`pwd`

#by default, sh_rerun process data 2-week ago.
#first,get date (in UTC)
#four-digit year
year=`date -u +%Y`
#two-digits year
yr=`date -u +%y`
#single year number
y=`echo $yr | awk '{print substr($0,2,1)}'`
#mo=`date -u  +%m`  #month
#dd=`date -u  +%d`
#doy=`ymd2ydoy $year $mo $dd | awk '{print $2}'`
doy=`date -u +%j`
#total number of days in current year
doy0=`ymd2ydoy $year 12 31 | awk '{print $2}'`
doy1=`ymd2ydoy $year 1 1 | awk '{print $2}'`
ndoys=`expr $doy0 - $doy1 + 1`


doy=`expr ${doy} - 14`
if [ $doy -le 0 ]; then
    year=`expr $year - 1`
    yr=`echo $year | awk '{print substr($0,3,2)}'`
    y=`echo $year | awk '{print substr($0,4,1)}'`
    doy=`ymd2ydoy $year 12 31 | awk '{print $2}'`
fi
#echo $year $yr $y $doy
#exit
#number of days to be processed
ndays=1

#one solution per $stepdays days
stepdays=1

#precise orbit type
orbit=gfile

#experiment name
expt=rrun

#remote/local ftp server
host="210.31.68.163"
host="10.23.19.5"

#ftp client
ftp_prog=wget

#hfiles archive path
hfile_path=/home/tianyf/hfiles

#script_file to be deleted
script_file=non #default not delete the running script, except batched by SLURM.


# process command-line parameters
#####################################################
#COMMAND LINE PARAMETERS
#####################################################
while [ "$1" != "" ]
do
  #echo $1
  case $1 in
      -centertype)
	  centertype=$2
	  ;;
      -expt)
	  expt=$2
	  ;;
      -dir)
	  cd $2
	  rerun_root=`pwd`
	  ;;
      -hdir)
          cd $2
          if [ $? -ne 0 ]; then
              echo "Not exist: $2 "
              exit
          fi
          hfile_path=`pwd`
          ;;
      -yr)
	  year=$2
	  yr=`echo $year | awk '{print substr($0,3,2)}'`
	  y=`echo $year | awk '{print substr($0,4,1)}'`
	  ndoys=`ymd2ydoy $year 12 31|awk '{print $2}'`
	  ;;
      -d)
	  d=$2
	  #How to do this like sh_gamit?
	  ;;
      -doy)
	  doy=$2
	  ;;
      -ndays)
	  ndays=$2
	  ;;
      -stepdays)
         stepdays=$2
         ;;
      -orbit)
	  orbit=$2
	  ;;
     -host)
         host=$2
         ;;
      -ftp_prog)
	  ftp_prog=$2
	  ;;
      -reg)   #CMONOC_SURVEY_MODE
	  regs=$2
	  ;;
      -script)
          script_file=$2
          ;;
      *)
	  echo "invalid options: $1"
	  exit 1
	  ;;
  esac
  shift 2
done


echo param: $year $yr $y $doy $ndays $orbit $rerun_root

is_reg_cmonoc_cont=`echo $regs | awk '{print index($0,"CMONOC_CONT")}'`
is_reg_cmonoc_survey_mode=`echo $regs | awk '{print index($0,"CMONOC_SURVEY_MODE")}'`
#echo is_reg_cmonoc_survey_mode $is_reg_cmonoc_survey_mode
is_reg_wenchuan=`echo $regs | awk '{print index($0,"WENCHUAN")}'`
is_reg_nepal=`echo $regs | awk '{print index($0,"NEPAL")}'`
is_reg_tigicas=`echo $regs | awk '{print index($0,"TIGICAS")}'`
is_reg_beijing=`echo $regs | awk '{print index($0,"BEIJING")}'`
is_reg_beijing_lzh=`echo $regs | awk '{print index($0,"BJLZH")}'`
is_reg_lutai_cgps=`echo $regs | awk '{print index($0,"LUTAI_CONT")}'`
is_reg_lutai_sgps=`echo $regs | awk '{print index($0,"LUTAI_REG")}'`
is_eq_nepal20150425=`echo $regs | awk '{print index($0,"EQ_NEPAL20150425")}'`
is_reg_cma=`echo $regs | awk '{print index($0,"REG_CMA")}'`
is_reg_lgn=`echo $regs | awk '{print index($0,"REG_LGN")}'`
#echo $is_reg_beijing for beijing
#exit

#things to do
#(1).get rinex
#(2).get brdc/nav
#(3).get orbit file (gfile/igs)
#(4).call sh_gamit ... -noftp
#(5).call sh_glred

#hard-wired parameter
#host="210.31.68.163"
host="ftp://${host}"

#begin re-run
echo " >re-run ..."
i=0
while [ $i -lt $ndays ]; do
    #echo $i $doy
    #echo $doy
    if [ $doy -gt $ndoys ]; then
	doy=1
	year=`expr $year + 1`
	yr=`echo $year | awk '{print substr($0,3,2)}'`
	y=`echo $year | awk '{print substr($0,4,1)}'`
    fi
    doy=`echo $doy | awk '{printf("%03d",$0)}'`

    echo $year $doy $ndoys
    #exit

    logfile=${rerun_root}/sh_gamit_${year}_${doy}.${expt}.log
    echo $logfile

    cd ${rerun_root}
    if [ $? -eq 0 ]; then
	pwd
	\rm -rf ${rerun_root}/gfiles
	\rm -rf ${rerun_root}/brdc
	cd ${rerun_root}/tables
	sh_clean_tables
    else
	exit 1
    fi

    #link rinex
    mkdir -p ${rerun_root}/rinex
    cd ${rerun_root}/rinex
    \rm -rf ${rerun_root}/rinex/*
    ftptyp=ftprnx
    sites=`sh_get_defaults -token ${ftptyp} -expt ${expt} -sd ../tables/sites.defaults`
    echo "downloading rinex files for sites: ${sites}"> $logfile 2>>${logfile}
    #exit
    for site in ${sites}; do
	#ln -s -f ${igs_root}/rinex/${year}/${doy}/${site}${doy}0.${yr}d.Z .
	#${ftp_prog} ${host}/pub/rinex/${year}/${doy}/${site}${doy}0.${yr}d.Z
	#${ftp_prog} ${host}/pub/rinex/${year}/${doy}/${yr}d/${site}${doy}0.${yr}d.Z
	#${ftp_prog} ${host}/pub1/rinex/${year}/${doy}/${site}${doy}0.${yr}d.Z
	#${ftp_prog} ${host}/pub1/rinex/${year}/${doy}/${yr}d/${site}${doy}0.${yr}d.Z
	#wget -nc ${host}/pub/rinex/${year}/${doy}/${site}${doy}0.${yr}d.Z >> $logfile 2>>${logfile}
	#wget -nc ${host}/pub/rinex/${year}/${doy}/${site}${doy}0.${yr}o.Z >> $logfile 2>>${logfile}
	
 #for FTP server as GPSDC
        \cp -f /dcd0/ftp/pub/rinex/${year}/${doy}/${site}${doy}0.${yr}d.Z . >> $logfile 2>>${logfile}
        \cp -f /dcd0/ftp/pub/rinex/${year}/${doy}/${site}${doy}0.${yr}o.Z . >> $logfile 2>>${logfile}

        #for FTP server as VMICD
        \cp -f /home/FTP/pub/rinex/${year}/${doy}/${site}${doy}0.${yr}d.Z . >> $logfile 2>>${logfile}
        \cp -f /home/FTP/pub/rinex/${year}/${doy}/${site}${doy}0.${yr}o.Z . >> $logfile 2>>${logfile}

	#\cp -f /igs/pub/rinex/${year}/${doy}/${site}${doy}?.${yr}?.Z .  >> $logfile 2>>${logfile}
	#for CMONOC network
	if [ $is_reg_lutai_cgps -gt 0 ]; then
	    \cp -f /home/lutai/rinex/${year}/${doy}/${site}${doy}0.${yr}d.Z . >> $logfile 2>>${logfile}
	fi
	if [ $is_reg_lutai_sgps -gt 0 ]; then
	    \cp -f /home/lutai/survey.mode/reg${year}/${doy}/${site}${doy}0.${yr}d.Z . >> $logfile 2>>${logfile}
	fi
	if [ $is_reg_cmonoc_cont -gt 0 ]; then
	    \cp -f /home/cmonoc/DATA/${year}/${doy}/${site}${doy}0.${yr}d.Z .  >> $logfile  2>>${logfile}
	   #\cp -f /home/cmonoc/DATA/${year}/${doy}/${site}${doy}0.${yr}d.Z .  >> $logfile 2>>${logfile}
	fi
	if [ $is_reg_cmonoc_survey_mode -gt 0 ]; then
	    \cp -f /home/cmonoc/survey.mode/${year}/${doy}/${site}${doy}?.${yr}d.Z . >> $logfile  2>>${logfile}
	fi
	#For TigiCAS network
	if [ $is_reg_tigicas -gt 0 ]; then
	    \cp -f /home/TigiCAS/rinex/${year}/${doy}/${site}${doy}0.${yr}d.Z . >> $logfile  2>>${logfile}
	fi
	#for local yushu quake
	#\cp -f /export/home/tianyf/gpse/rerun.yushu/data/rinex/${year}/${doy}/${site}${doy}0.${yr}o . >> $logfile  2>>${logfile}
	#for Geonet
	if [ $is_reg_nepal -gt 0 ]; then
	    #\cp -f /export/home/nepal/rinex/${year}/${doy}/${site}${doy}0.${yr}d.Z .  >> $logfile  2>>${logfile}
	    \cp -f /home/nepal/rinex/${year}/${doy}/${site}${doy}?.${yr}?.gz . >> $logfile  2>>${logfile}
	    \cp -f /home/nepal/rinex/${year}/${doy}/${site}${doy}?.${yr}?.Z .  >> $logfile  2>>${logfile}
	fi
	if [ $is_reg_wenchuan -gt 0 ]; then
	    \cp -f /home/wenchuan/rinex/${year}/${doy}/${site}${doy}?.${yr}d.Z . >> $logfile  2>>${logfile}
	fi
	if [ $is_reg_beijing -gt 0 ]; then
	    files=`find  /home/beijing/raw/${year}/${doy}/ -iname "*${site}*.*o*"`
	    #files=`find  /acd0/beijing/raw/${year}/${doy}/ -iname "*${site}*.*o*"`
	    for file in $files; do
		echo "\cp -f $file  ." >> $logfile  2>>${logfile}
		\cp -f $file  . >> $logfile  2>>${logfile}
	    done
	    #sh_casefold -files *[A-Z]*.*o* -dir d
	fi
	if [ $is_reg_beijing_lzh -gt 0 ]; then
	    files=`find  /g4/home/tianyf/tmp/beijing.s2/rinex/${year}/${doy}/ -iname "*${site}*.*o*"`
	    #files=`find  /acd0/beijing/raw/${year}/${doy}/ -iname "*${site}*.*o*"`
	    for file in $files; do
		echo "\cp -f $file  ." >> $logfile  2>>${logfile}
		\cp -f $file  . >> $logfile  2>>${logfile}
	    done
	    #sh_casefold -files *[A-Z]*.*o* -dir d
	fi
	#\cp -f /d3/data/tianyf/rnx.cmonoc/${site}${doy}0.${yr}d.Z . >> $logfile 2>>${logfile}
	#\cp -f /d3/data/gps/stations/${site}${doy}0.${yr}d.Z .  >> $logfile 2>>${logfile}
	##\cp -f /home/tianyf/gpse.gserver/eq.yaan.2013apr20/gps/lutai/daily.rinex.1Hz/${year}/${doy}/${site}${doy}0.${yr}o* .  >> $logfile  2>>${logfile}

	#lhasa campaign
	if [ $is_reg_lgn -gt 0 ]; then
	    \cp -f /home/lhasa_block/${year}/${doy}/${site}${doy}0.${yr}o* .  >> $logfile 2>>${logfile}
        #\cp -f /home/eBACKUP/LasaData/rinex/${year}/${doy}/${site}${doy}0.${yr}o* .  >> $logfile 2>>${logfile}
	fi

	#CMA GPSMET network
	if [ $is_reg_cma -gt 0 ]; then
	    \cp -f /home/gpsmet/rinex/${year}/${doy}/${site}${doy}?.${yr}?.Z .  >> $logfile 2>>${logfile}
        #\cp -f /home/tianyf/gpsmet/raw/2011/data/gpsmet/rinex/${year}/${doy}/${site}${doy}?.${yr}?.Z .  >> $logfile 2>>${logfile}
	fi

        #2015-04-25 Ms8.1 Nepal earthquake
	if [ $is_eq_nepal20150425 -gt 0 ]; then
	    \cp -f /home/eq.nepal.2015/rinex/${year}/${doy}/${site}${doy}?.${yr}?.gz .  >> $logfile 2>>${logfile}
	fi
        #how to delete file with zero size?
	if [ ! -f ${site}${doy}0.${yr}d.Z ]; then
	    \rm -f ${site}${doy}0.${yr}d.Z
	fi
    done
    echo " >>uncompress rinex files"
    sh_crx2rnx  -f ???????0.??d.Z >> $logfile 2>>${logfile}
    #uncompress *.??o.Z files
    \uncompress -f *.??o.Z
    \gunzip -f *.??o.gz

    #exit
    echo " >>get met.."
   \rm -rf  ${rerun_root}/met

    mkdir -p ${rerun_root}/met
    #cd ${rerun_root}/met
    #for site in ${sites}; do
#	wget -nc ${host}/pub/met/${year}/${doy}/${site}${doy}0.${yr}m.Z
#	if [ ! -f ${site}${doy}0.${yr}m.Z ]; then
#	    \rm -f ${site}${doy}0.${yr}m.Z
#	fi
#    done
#    echo " >>uncompress met files"
#    \uncompress -f ???????0.??m.Z

#link brdc/nav
    echo " >>get brdc.."
    mkdir -p ${rerun_root}/brdc
    cd ${rerun_root}/brdc
    #\ln -s -f ${igs_root}/nav/${year}/${doy}/brdc${doy}0.${yr}n.Z .
    ${ftp_prog} ${host}/pub/nav/${year}/${doy}/brdc${doy}0.${yr}n.Z  >> $logfile 2>>${logfile}
    #delete file with zero size?
    #if [ ! -s brdc${doy}0.${yr}n.Z ]; then
	#\rm -f brdc${doy}0.${yr}n.Z
    #fi
    #echo "zero?"
    if [ ! -s brdc${doy}0.${yr}n.Z ]; then
	echo "WARNING: No brdc/nav file exist! Skipping"  >> $logfile 2>>${logfile}
	\rm -f brdc${doy}0.${yr}n.Z
	i=`expr $i + 1`
	doy=`expr $doy + 1`
	#exit
	continue
    fi
    #exit
    \uncompress -f brdc${doy}0.${yr}n.Z
    if [ $? -ne 0 ]; then
	echo "Error:  unable to unzip bbrdc/nav file! Skipping"  >> $logfile 2>>${logfile}
	i=`expr $i + 1`
	doy=`expr $doy + 1`
	continue
    fi
    \rm -f brdc${doy}0.${yr}n.Z


#link orbit files
    echo " >>get orbit sp3.."
    gpsw=`doy ${year} ${doy} | grep "GPS Week" | awk '{printf("%04d",$3)}'`
    gpsd=`doy ${year} ${doy} | grep "GPS Week" | awk '{print substr($7,1,1)}'`
    echo ${gpsw} ${gpsd} ${orbit}
    mkdir -p ${rerun_root}/gfiles
    if [ "${orbit}" = "gfile" ]; then
	cd ${rerun_root}/gfiles
	#\ln -s -f ${igs_root}/gfiles/${gpsw}/gpgga${y}.${doy}.Z .
	${ftp_prog} ${host}/pub/gfiles/${gpsw}/gpgga${y}.${doy}.Z  >> $logfile 2>>${logfile}
	\uncompress -f ${igs_root}/gfiles/${gpsw}/gpgga${y}.${doy}.Z .  >> $logfile 2>>${logfile}
	\rm -f gpgga${y}.${doy}.Z
    elif [ "${orbit}" = "IGSF" ]; then
	if [ -f ${rerun_root}/gfiles/gigsf${y}.${doy} ]; then
	    #yearGfile=`head -1 ${rerun_root}/gfiles/gigsf${y}.${doy} | awk '{print $1}'`
	    #if [ $yearGfile -eq $year} ]; then
		echo "G-file exist: ${rerun_root}/gfiles/gigsf${y}.${doy}  skipping..."
	    #fi
	else
	    mkdir ${rerun_root}/igs
	    cd ${rerun_root}/igs
	    #\ln -s -f ${igs_root}/products/${gpsw}/igs${gpsw}${gpsd}.sp3.Z .
	    ${ftp_prog} ${host}/pub/products/${gpsw}/igs${gpsw}${gpsd}.sp3.Z >> $logfile 2>>${logfile}
	    \uncompress -f igs${gpsw}${gpsd}.sp3.Z  >> $logfile 2>>${logfile}
	    links.arc J2000 ${year} usno >> $logfile 2>>${logfile}
	    sh_sp3fit -f igs${gpsw}${gpsd}.sp3 -o igsf -t -u -m 0.200 >> $logfile 2>>${logfile}
	    \cp -f gigsf${y}.${doy} ../gfiles >> $logfile 2>>${logfile}
	    #echo "not supported, yet!"
	    #exit 1
	fi
    elif [ "${orbit}" = "IGSR" ]; then
	if [ -f ${rerun_root}/gfiles/gigsr${y}.${doy} ]; then
	    echo "G-file exist: ${rerun_root}/gfiles/gigsf${y}.${doy}  skipping..." >> $logfile
	else
	    mkdir ${rerun_root}/igs
	    cd ${rerun_root}/igs
	    #\ln -s -f ${igs_root}/products/${gpsw}/igs${gpsw}${gpsd}.sp3.Z .

	    ${ftp_prog} ${host}/pub/products/${gpsw}/igr${gpsw}${gpsd}.sp3.Z >> $logfile 2>>${logfile}
	    \uncompress -f igr${gpsw}${gpsd}.sp3.Z
	    links.arc J2000 ${year} usno
            echo "sh_sp3fit -f igr${gpsw}${gpsd}.sp3 -o igsr -t -u -m 0.200" >> $logfile
	    sh_sp3fit -f igr${gpsw}${gpsd}.sp3 -o igsr -t -u -m 0.200 >> $logfile 2>>${logfile}
	    \cp -f gigsr${y}.${doy} ../gfiles
	    #echo "not supported, yet!"
	    #exit 1
	fi
    elif [ "${orbit}" = "IGSU" ]; then
	if [ -f ${rerun_root}/gfiles/gigsu${y}.${doy} ]; then
	    echo "G-file exist: ${rerun_root}/gfiles/gigsu${y}.${doy}  skipping..."
	else
	    mkdir ${rerun_root}/igs
	    cd ${rerun_root}/igs
	    #\ln -s -f ${igs_root}/products/${gpsw}/igs${gpsw}${gpsd}.sp3.Z .
	    ${ftp_prog} ${host}/pub/products/${gpsw}/igu${gpsw}${gpsd}_18.sp3.Z
	    \uncompress -f igu${gpsw}${gpsd}*.sp3.Z
	    links.arc J2000 ${year} usno
	    sh_sp3fit -f igu${gpsw}${gpsd}_18.sp3 -o igsu -t -d ${year} ${doy} -u -m 0.200
	    \cp -f gigsu${y}.${doy} ../gfiles
	    #echo "not supported, yet!"
	    #exit 1
	fi
    elif [ "${orbit}" = "IGS1" ]; then
	if [ -f ${rerun_root}/gfiles/gigs1${y}.${doy} ]; then
	    echo "G-file exist: ${rerun_root}/gfiles/gigs1${y}.${doy}  skipping..."
	else
	    mkdir ${rerun_root}/igs
	    cd ${rerun_root}/igs
	    #\ln -s -f ${igs_root}/products/${gpsw}/igs${gpsw}${gpsd}.sp3.Z .
	    ${ftp_prog} ${host}/pub/products/${gpsw}/repro1/ig1${gpsw}${gpsd}.sp3.Z
	    \uncompress -f ig1${gpsw}${gpsd}*.sp3.Z
	    links.arc J2000 ${year} usno
	    sh_sp3fit -f ig1${gpsw}${gpsd}.sp3 -o igsf -t -d ${year} ${doy} -u -m 0.200
	    \cp -f gigsf${y}.${doy} ../gfiles
	    orbit=IGSF
	    #echo "not supported, yet!"
	    #exit 1
	fi
    fi

    #link atml file
    cd ${rerun_root}/tables
    #\ln -s -f /home/gps/GAMIT/gamit.grids/grids/atmdisp_${centertype}.${year} ~/gg/tables/atml.grid.${year}
    #\ln -s -f /home/gps/GAMIT/gamit.grids/grids/atmdisp_${centertype}.${year} atml.grid.${year}
    \rm -rf atml.grid

    #link vmf1 file
    #\ln -s -f /home/gps/GAMIT/gamit.grids/grids/vmf1grd.${year} map.grid
    #exit
    \rm -rf map.grid

    links.com J2000 $year >> $logfile 2>>${logfile}

    #GAMIT.fatal may exists in YEAR_DOY direcoty in zipped format from the last failed run.
    #Thus, we should delete the GAMIT.fatal.Z file before processing.
    \rm ${rerun_root}/${year}_${doy}/*fatal.Z  > /dev/null 2>>${logfile}

    echo " running sh_gamit ..."
    echo "sh_gamit -expt ${expt} -d ${year} ${doy} -orbit ${orbit} -met -noftp -yrext  -dopt a b c D H d k x y p t"
#run sh_gamit
    cd ${rerun_root}
    sh_gamit -expt ${expt} -d ${year} ${doy} -orbit ${orbit} -met -noftp -yrext  -dopt a b c D H d k x y p t  >> $logfile 2>>${logfile}

    #clean rinex/brdc/orbit files
    \rm -f ${rerun_root}/rinex/*
    \rm -f ${rerun_root}/brdc/*
    \rm -f ${rerun_root}/gfiles/*
    \rm -f ${rerun_root}/igs/*

    #delete other directories
    ##\rm -rf ${rerun_root}/archive  ${rerun_root}/brdc  ${rerun_root}/control ${rerun_root}/gifs  ${rerun_root}/igs  ${rerun_root}/mkrinex  ${rerun_root}/raw  ${rerun_root}/rinex  ${rerun_root}/met
    #preserve /gfiles for future tasks.

    #delete link files in DOY directory.
    #files=`find ${rerun_root}/${year}_${doy} -type l`
    #for file in $files; do
	#echo "  deleting $file"
	##\rm -f $file
    #done
    ##\rm -rf ${rerun_root}/${year}_${doy}/*.out

    #archive the h-file (upload to gpsac ftp)
    cd ${rerun_root}/${year}_${doy}
    if [ $? -eq 0 ]; then
	\rm -rf ${rerun_root}/${year}_${doy}/tmp*
	\rm -rf ${rerun_root}/${year}_${doy}/*.grid
	\rm -rf ${rerun_root}/${year}_${doy}/*.grid
	\rm -rf ${rerun_root}/${year}_${doy}/*.list

	#rename files
	\cp -f autcln.cmd autcln.cmd.${expt}
	\cp -f sestbl. sestbl..${expt}
	\cp -f sittbl. sittbl..${expt}
	\cp -f station.info station.info.${expt}
	\cp -f sh_gamit_${year}_${doy}.summary sh_gamit_${year}_${doy}.summary.${expt}
	#autcln.post.sum.EXPT

	\rm -rf ${rerun_root}/${year}_${doy}/*.??o
	\compress -f *.* >> $logfile 2>>${logfile}
        #\gzip -S .Z -f *.* >> $logfile 2>>${logfile}
        echo "mkdir -p ${hfile_path}/${year}/${doy}"
        mkdir -p ${hfile_path}/${year}/${doy}
        echo "cp h${expt}a.${yr}${doy}.Z ${hfile_path}/${year}/${doy}/"
        cp h${expt}a.${yr}${doy}.Z ${hfile_path}/${year}/${doy}/  >> $logfile 2>>${logfile}

	#upload to jiangdell server
	#ssh -p 8080 tianyf@210.31.68.9 "mkdir -p /home/tianyf/lasa/hfiles/${year}/${doyr}/"
	#scp -P 8080 h${expt}a.${yr}${doy}.Z tianyf@210.31.68.9:/home/tianyf/lasa/hfiles/${year}/${doyr}/

	#The target directory MUST esits!!
	#
	#host=gpsdc
	#user=tianyf
	#ts=`date -u +%Y%m%d%H%M%S`
	#cmd_file="/tmp/hfiles-cmonoc-${ts}-$$.cmd"
	#echo "user $user $passwd" > $cmd_file
	#echo "binary" >> $cmd_file
	#rdir="/export/home/tianyf/hfiles/$year/$doy"
	#echo "mkdir $rdir" >> $cmd_file
	#echo "cd $rdir" >> $cmd_file
	#echo "put h${expt}a.${yr}${doy}.Z" >> $cmd_file
	#echo "quit" >> $cmd_file
	#cat $cmd_file
	#cat $cmd_file | ftp -i -n -p $host
	if [ $? -eq 0 ]; then
	    \rm -f h${expt}a.${yr}${doy}.Z
	    \mv -f autcln.cmd.${expt}.Z ${hfile_path}/${year}/${doy}/
	    \cp -f autcln.post.sum.${expt}.Z ${hfile_path}/${year}/${doy}/
	    \mv -f sestbl..${expt}.Z ${hfile_path}/${year}/${doy}/
	    \mv -f sittbl..${expt}.Z ${hfile_path}/${year}/${doy}/
	    \mv -f station.info.${expt}.Z ${hfile_path}/${year}/${doy}/
	    \mv -f sh_gamit_${year}_${doy}.summary.${expt}.Z ${hfile_path}/${year}/${doy}/
	    \compress -f $logfile
	    \cp -f ${logfile}.Z .
	    \mv -f ${logfile}.Z ${hfile_path}/${year}/${doy}/


	fi

	if [ $is_reg_cmonoc_survey_mode -gt 0 ]; then
	    cd ${rerun_root}
	    \rm -rf ${rerun_root}/${year}_${doy}_${expt}
	    mv -f ${rerun_root}/${year}_${doy} ${rerun_root}/${year}_${doy}_${expt}
	fi
    else
	echo "!!!Failed to change directory to ${rerun_root}/${year}_${doy}"
    fi

    if [ `expr $i + 1` -eq $ndays ]; then  #if this is the last day
	if [ "$script_file" != "null" ]; then
	    echo "mv ${rerun_root}/${year}_${doy} /home/tianyf/gpse/trns/solut/gmf/${orbit}/${expt}/"
	    echo "deleting temporary file $script_file ..."
	    \rm -rf $script_file
	fi
    fi

    i=`expr $i + $stepdays`
    doy=`expr $doy + $stepdays`
done

#clean *grid* in tables
\rm -rf ${rerun_root}/tables/*.grid
\rm -rf ${rerun_root}/tables/*.dat



#########################
####cleandoy#############
#########################
cleandoy(){
    echo "hello"
}
