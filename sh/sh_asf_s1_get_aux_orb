#!/bin/bash

# Name:
#   sh_asf_s1_get_aux_orb
#   

# Purpose:
#   +

# Example:
#   

# Modifications:
#   +

# Algorithm:
#   +

# Dependency:
#   +
#


PROG=sh_asf_s1_get_aux_orb


if [ -t 0 ]; then
    interactive=1
else
    interactive=0
    . ${HOME}/.bashrc  
fi
#echo "interactive $interactive"
#if [ $interactive -eq 0 ]; then
#  . ${HOME}/.bashrc  
#fi

#check the data root directory
if [ "$esa_data" == "" ]; then
  echo -e "[$PROG]\033[1;33;41mERROR\033[0m: environment variable esa_data not set!!"
  exit 1
fi
if [ ! -d $esa_data ]; then
  echo -e "[$PROG]\033[1;33;41mERROR\033[0m: esa_data ($esa_data) not exist!!"
  exit 1
fi


timestamp=`date | sed -e "s/ /_/g" | sed -e "s/:/-/g"`

path_old=`pwd`

usage_of_it(){

cat <<eob
${PROG}
|_Download S1 orbit files from ASF web.
  https://s1qc.asf.alaska.edu/
|<
  [-l|-load_bashrc y/...]
  [-n|-ndays N_DAYS_BACKWARD]
  [-o|-orb|-orbit poe/res]
  [-wc|-wget_config FILE]
  [-h|-help]
|>
  Sentinle-1 orbit files saving to the output path.
|e.g.,
  ${PROG} -n 1 -orb res -wc /tmp/your_wget.conf
(c)iGPS (https://github.com/igps-ftk/)
eob
}


#default settings for command-line options
#whether load ${HOME}/.bashrc (only for crontab job)
load_bashrc=n

#number of days backward from now
back_ndays=29

#orbit type: poe/res
orb_typ=poe
#orb_typ=res

#whether reload ASF orbit webpage directory listing
#may set it to n if access the url in a short time period
update_index=y

#output path
#default to local ESA data root directory (where $esa_data points)
path=$esa_data/aux_${orb_typ}orb

user_conf_asf=/home/tianyf/iGPS.addon/sh/wget.conf

while [ "$1" != "" ]; do
  case $1 in
    -l|-load_bashrc)
      load_bashrc=$2
      ;;
    -n|-ndays)
      back_ndays=$2
      ;;
    -o|-orb|-orbit)
      orb_typ=$2
      ;;
    -p|-path)
      path=$2
      ;;
    -u|-update_index)
      update_index=$2
      ;;
    -w|-wc|-wget_config)
      user_conf_asf=$2
      ;;
    -h|-help|--help)
      usage_of_it
      exit 1
      ;;
    *)
      echo -e "[$PROG]\033[1;33;41mERROR\033[0m: invalid option ($1)!!"
      usage_of_it
      exit 1
      ;;
  esac
  shift 2  
done

if [ "$load_bashrc" == "y" ]; then
  . ${HOME}/.bashrc
fi

if [ ! -s $user_conf_asf ]; then
  echo -e "[$PROG]\033[1;33;41mERROR\033[0m: user login file not found ($user_conf_asf)!!"
  exit 1
fi
echo "[$PROG]INFO: use wget login info in $user_conf_asf"


if [ ! -d $path ]; then
  echo "[$PROG]INFO:creating output path $path ..."
  mkdir -p $path
fi
cd $path
echo "[$PROG]INFO: output result to `pwd`"

file_lock=$path/asf.lock

if [ -s $file_lock ]; then
  echo "[$PROG]INFO:locked by $file_lock!!"
  exit 1
fi
hostname > $file_lock
date >> $file_lock
#echo $file_lock
#cat $file_lock
#exit
echo "[$PROG]INFO: session lock file create ($file_lock)"

if [ "$update_index" == "y" ]; then
  echo "[$PROG]INFO: updating ASF directory listing ..."
  echo "[$PROG]INFO:   https://s1qc.asf.alaska.edu/aux_${orb_typ}orb/"
  curl https://s1qc.asf.alaska.edu/aux_${orb_typ}orb/ > ${path}/index.html.txt
  #wget -N https://s1qc.asf.alaska.edu/aux_${orb_typ}orb/files.txt #server-side file outdated
fi

\rm -f ${path}/index.list
di=1
while [ $di -le $back_ndays ]; do
  datestr=`date -u +%FT%T -d "today -${di} days" | awk -FT '{print $1}' | sed -e 's/-//g'`
  cat ${path}/index.html.txt |grep EOF | awk -F\" '{print $2}' | grep '^S1' | grep $datestr >> ${path}/index.list
  
  di=`expr $di + 1`
done

#test cross-year case
cat ${path}/index.html.txt |grep EOF | awk -F\" '{print $2}' | grep '^S1' | grep 20221231 >  ${path}/index.list
cat ${path}/index.html.txt |grep EOF | awk -F\" '{print $2}' | grep '^S1' | grep 20230101 >> ${path}/index.list

#exit

while read file; do
  echo file $file
  #S1A_OPER_AUX_RESORB_OPOD_20230116T061712_V20230116T021424_20230116T053154.EOF
  year1=`echo $file | awk -F_ '{print substr($7,2,4)}'`
  year2=`echo $file | awk -F_ '{print substr($8,1,4)}'`
  
  opath1=$esa_data/aux_${orb_typ}orb/$year1
  opath2=$esa_data/aux_${orb_typ}orb/$year2
  echo opath1 $opath1
  echo opath2 $opath2
 
  #exit
  if [ -s ${opath1}/${file} -a -s $opath2/$file ] ; then
    echo "[$PROG]INFO: already exist($file)."
    continue
  fi
  if [ ! -d $opath1 ]; then
    mkdir -p $opath1
  fi
  if [ ! -d $opath2 ]; then
    mkdir -p $opath2
  fi
  cd $opath2
  pwd
  if [ ! -s $opath2/$file ]; then
    echo "wget -c --config=$user_conf_asf https://s1qc.asf.alaska.edu/aux_${orb_typ}orb/${file}"
    echo "wget -c --config=$user_conf_asf https://s1qc.asf.alaska.edu/aux_${orb_typ}orb/${file}" | sh
  fi
  #exit
  if [ "$year1" != "$year2" ]; then
    if [ -s $opath1/$file ]; then
      echo "[$PROG]INFO: already exist($opath1/$file)."
      continue
    fi
    \cp -f ${opath2}/$file $opath1/
  fi
done < ${path}/index.list

\rm -f $file_lock

echo "[$PROG]INFO: done."
