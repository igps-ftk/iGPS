#!/bin/sh

# Name:
#   sh_sar_node_link_s1_files_by_path_frame
#   

# Purpose:
#   

# Example:
#   

# Modifications:
#   

# Algorigthm:
#   

# Dependency:
#   


PROG=sh_sar_node_link_s1_files_by_path_frame

timestamp=`date | sed -e 's/ /_/g' | sed -e 's/:/-/g'`
file_tmp=/tmp/_tmp_manifest_safe_${PROG}_${timestamp}

path=`pwd`
opath=/sar/esa.sentinel-1/
opath=/sar/s1

while [ "$1" != "" ]; do
  case $1 in 
    -path)
      path=$2
      ;;
    -opath)
      opath=$2
      ;;
    *)
      echo "[]ERROR: invalid option ($1)!!"
      exit 1
      ;;
  esac
  shift 2
done

if [ ! -d ${opath}/links ]; then
  mkdir -p ${opath}/links
fi


#files=`find $path -maxdepth 1 -type f -name "S1*IW*SLC*_20*.zip"`
echo "[]INFO: searching files in $path ..."
files=`ls $path/S1*IW*SLC*_20*.zip`
echo "[]INFO: checking links ..."
for file in $files; do
  echo $file
  fname=`basename $file | sed -e 's/.zip//g'`
  
  #remove broken symbolic link 
  if [[ -L "$opath/links/${fname}.zip" ]] && [[ ! -a "$opath/links/${fname}.zip" ]];then
    echo "[]INFO: broken link"
    file $opath/links/${fname}.zip
    echo "remove $opath/links/${fname}.zip"
    \rm -rf $opath/links/${fname}.zip
  fi

    
  if [ ! -L ${opath}/links/${fname}.zip ]; then
    echo "ln -s $file ${opath}/links/"
    echo "ln -s $file ${opath}/links/" | sh
  fi

  track=  
  csvfile=${esa_data}/metainfo/csv/${fname}.csv
  if [ -s $csvfile ]; then
    frame=`tail -1 $csvfile | awk -F\",\" '{printf("%04d", $8)}'`
    track=`tail -1 $csvfile | awk -F\",\" '{printf("%03d", $7)}'`
    trk=`tail -1 $csvfile | awk -F\",\" '{print $7}'`
    ad=`tail -1 $csvfile | awk -F\",\" '{print  substr($25,1,1)}'`
  else
    echo "[]WARNING: no csv file for $fname!"
    #continue
  fi

  
  if [ "$track" == "" ]; then
    safefile1=${esa_data}/metainfo/manifest.safe/links/${fname}.manifest.safe
    safefile2=/sar/s1/metainfo/manifest.safe/links/${fname}.manifest.safe
    safefile3=/sar/s1b/metainfo/manifest.safe/links/${fname}.manifest.safe
    safefile=
    if [ -s $safefile1 ]; then
      safefile=$safefile1
    elif [ -s $safefile2 ]; then
      safefile=$safefile2
    elif [ -s $safefile3 ]; then
      safefile=$safefile3
    else
      #safe_lines=`unzip -c $file "*/manifest.safe"`            
      #\rm -f $file_tmp
      #unzip -c $file "*/manifest.safe" > $file_tmp
      #safefile=$file_tmp
      echo "[]WARNING: no track info for $fname!"
      #continue
    fi

    echo "checking track info in $safefile ..."
    frame=
    if [ "$safefile" == "" ]; then
      track=`echo $safe_lines | grep relativeOrbitNumber  | grep start |  awk -F\> '{print $2}' | awk -F\< '{printf("%03d", $1)}'`
      ad=`echo $safe_lines | grep pass | awk -F\> '{print $2}' | awk -F\< '{print substr($1,1,1)}'`
      echo track ad $track $ad
      echo $safe_lines | grep relativeOrbitNumber 
    else
      echo here
      track=`unzip -c $file "*/manifest.safe" | grep relativeOrbitNumber  | grep start |  awk -F\> '{print $2}' | awk -F\< '{printf("%03d", $1)}'`
      ad=`unzip -c $file "*/manifest.safe" | grep pass | awk -F\> '{print $2}' | awk -F\< '{print substr($1,1,1)}'`
      unzip -c $file "*/manifest.safe" | grep relativeOrbitNumber
    fi
    echo track $track
    echo ad $ad
    exit
  fi
  
  #continue
  #exit

  if [ "$track" == "000" -o "$track" == "" -o "$ad" == "" ]; then
    echo "[]ERROR: cannot decypher track number in $csvfile!!"
    echo "\rm -f $csvfile"
    continue
    exit 1
  fi
  #trk=`tail -1 $csvfile | awk -F\",\" '{print $7}'`
  #ad=`tail -1 $csvfile | awk -F\",\" '{print  substr($25,1,1)}'`
  #echo frame $frame
  #echo track $track
  #echo ad $ad
  #continue
  #exit

  odir2=/sar/s1/${ad}${track}/
  #echo "$odir/${fname}.zip"
  if [ ! -d $odir2 ]; then
    echo "mkdir -p $odir2"
    echo "mkdir -p $odir2" | sh
  fi
  #remove broken symbolic link 
  if [[ -L "$odir2/${fname}.zip" ]] && [[ ! -a "$odir2/${fname}.zip" ]];then
    echo "[]INFO: broken link"
    file $odir2/${fname}.zip
    echo "remove $odir2/${fname}.zip"
    \rm -rf $odir2/${fname}.zip
  fi
  if [ ! -L $odir2/${fname}.zip ]; then
    echo "ln -s $file $odir2"
    echo "ln -s $file $odir2" | sh
  fi



  if [ "$frame" != "" ]; then
    odir=/sar/s1/${ad}${track}_${frame}/
    #echo "$odir/${fname}.zip"
    if [ ! -d $odir ]; then
      echo "mkdir -p $odir"
      echo "mkdir -p $odir" | sh
    fi
    #remove broken symbolic link 
    if [[ -L "$odir/${fname}.zip" ]] && [[ ! -a "$odir/${fname}.zip" ]];then
      echo "[]INFO: broken link"
      file $odir/${fname}.zip
      echo "remove $odir/${fname}.zip"
      \rm -rf $odir/${fname}.zip
    fi
    if [ ! -L $odir/${fname}.zip ]; then
      echo "ln -s $file $odir"
      echo "ln -s $file $odir" | sh
    fi
  fi

  #exit
done
