#!/bin/sh

PROG=sh_wget_rnx


#. ${HOME}/.profile
. ${HOME}/.bashrc

wai=`whoami`
if [ "$wai" != "datadm" ]; then
    echo "[${PROG}]INFO: This program is supposed to run by datadm user only"
    echo "[${PROG}]INFO:  Otherwise, you may not have the written permission."
    #exit
fi

if [ "$IGS_ROOT" == "" ]; then
local_root=/h1/ftp/pub/rinex
local_root=/g3c/pub/rinex
local_root=/g10a/ftp/pub/rinex
else
  local_root=${IGS_ROOT}/rinex
fi

if [ ! -d $local_root ]; then
  echo "[${PROG}]ERROR: directory not exist ($local_root)!!"
  exit 1
fi

#yearStart=2001
yearStart=`date -u +%Y`
#yearEnd=2002
yearEnd=`date -u +%Y`


#doys=001
doy=`date -u +%j | awk '{printf("%03d",$0)}'`
doys=`expr $doy - 1`
if [ $doys -le 0 ]; then
    yearStart=`expr $yearStart - 1`
    doys=`ymd2ydoy ${yearStart} 12 31 | awk '{print $2}'`
    doys=`echo $doys | awk '{printf("%03d",$0)}'`
fi
#doye=`ymd2ydoy ${yearStart} 12 31 | awk '{print $2}'`
doye=$doys

archive=sopac
ftp_prog=wget


sfile=${HOME}/iGPS/tables/dc-110925.sit.su
sites=`rdsit $sfile |awk '{print tolower($0)}' |sort | uniq`
echo $sites

holdfile=#/g3c/pub/rinex/listing.txt

rstat_dir=/sar/gnss/rinex/igs.dc.listing


# process command-line parameters
#####################################################
#COMMAND LINE PARAMETERS
#####################################################
while [ "$1" != "" ]
do
  #echo $1
  case $1 in
      -dir)
        cd $2
        local_root=$2
        ;;
      -yrs)
        yearStart=$2
        yr=`echo $yearStart | awk '{print substr($0,3,2)}'`
        y=`echo $yearStart | awk '{print substr($0,4,1)}'`
        ndays=`ymd2ydoy ${yearStart} 12 31 | awk '{print $2}'`
        ;;
      -yre)
        yearEnd=$2
        ;;
      -doys)
        doys=$2
        ;;
      -doye)
        doye=$2
        ;;
      -sites)
        sites=$2
        sites=`echo $sites | awk -F, '{for (i=1;i<=NF;i++) print $i}'`
        ;;
      -sitefile)
        sfile=$2
        
        #sites=`sh_site_read $sfile`
        sites=`rdsit $sfile|awk '{print tolower($0)}' |sort | uniq`
        #echo $sites
        ;;
      -archive)
        archive=$2
        ;;
      -holdfile)
        holdfile=$2
        ;;
      -ftp_prog)
        ftp_prog=$2
        ;;
      -rstat_dir)
        rstat_dir=$2
        ;;
      *)
        echo "invalid options: $1"
        exit 1
        ;;
  esac
  shift 2
done
#echo $sites
echo $yearStart $doys $yearEnd $doye

echo $sites

#exit

if [ "$archive" = "sopac" ]; then
    host=garner.ucsd.edu
elif [ "$archive" = "sio" ]; then
    host=garner.ucsd.edu
elif [ "$archive" = "cddis" ]; then
    host='https://cddis.nasa.gov'
elif [ "$archive" = "whu" ]; then
    host=igs.gnsswhu.cn
elif [ "$archive" = "ign" ]; then
    host=igs.ensg.ign.fr
elif [ "$archive" = "kasi" ]; then
    host=nfs.kasi.re.kr
#ftp://ftp.ga.gov.au/gpsdata/08134/
elif [ "$archive" = "ga" ]; then
    host=ftp.ga.gov.au
#ftp://igs.ifag.de/IGS/obs/2008/134
elif [ "$archive" = "ifag" ]; then
    host=igs.ifag.de
#ftp://geoid.hartrao.ac.za/rinex/2008/134/
elif [ "$archive" = "hrao" ]; then
    host=geoid.hartrao.ac.za
#ftp://wwwest.ngs.noaa.gov/cors/rinex/2008/134/nvlm/
elif [ "$archive" = "ngsest" ]; then
    host=wwwest.ngs.noaa.gov
#ftp://www.ngs.noaa.gov/cors/rinex/2008/134/acu5
elif [ "$archive" = "ngs" ]; then
    host=www.ngs.noaa.gov
elif [ "$archive" = "pbo" ]; then
#ftp://data-out.unavco.org/pub/rinex/obs/2010/001/
    host=data-out.unavco.org
#ftp://ftp.geonet.org.nz/gps/rinex/2011/060/lytt0600.11d.Z 
elif [ "$archive" = "geonet" ]; then
    host=ftp.geonet.org.nz
elif [ "$archive" = "bkg" ]; then
    host=igs.bkg.bund.de
elif [ "$archive" = "esa" ]; then
    host=gssc.esa.int
#ftp://igs.bkg.bund.de/EUREF/obs/2016/007/wrlg0070.16d.Z
fi

echo "<using archive: ${archive}"


year=${yearStart}
while [ ${year} -le ${yearEnd} ]; do
  yr=`echo $year | awk '{print substr($1,3,2)}'`

    if [ ${year} -eq ${yearStart} ]; then
  doy=${doys}
    else
       doy=001
    fi

    if [ ${year} -eq ${yearEnd} ]; then
  ndays=${doye}
    else
  ndays=`ymd2ydoy ${year} 12 31 | awk '{print $2}'`
    fi

    yy=`echo $year | awk '{print substr($0,3,2)}'`


    holdfile=${local_root}/igs.dc.listing/ninh.holding/holding.${year}


    while [ ${doy} -le ${ndays} ]; do
        doy=`echo $doy | awk '{printf("%03d",$0)'}`
        day_dir=${local_root}/${year}/${doy}
        mkdir -p ${day_dir}
        cd ${day_dir}
        pwd
        \rm -f sitfile

        srv_listing_file="${local_root}/igs.dc.listing/${archive}/${year}/${yr}${doy}.status"
        echo $srv_listing_file
        #exit 1

  if [ "$archive" = "sopac" -a "$ftp_prog" = "wget" ]; then
      rdir=http://${host}/pub/rinex/${year}/${doy}
  elif [ "$archive" = "sopac" -a "$ftp_prog" = "ncftpget" ]; then
      rdir=ftp://${host}/pub/rinex/${year}/${doy}
  elif [ "$archive" = "cddis" ]; then
      rdir=${host}/archive/gnss/data/daily/${year}/${doy}/${yr}d
  elif [ "$archive" = "whu" ]; then
            rdir=ftp://${host}/pub/gps/data/daily/${year}/${doy}/${yr}d  
  elif [ "$archive" = "ign" ]; then
      rdrt=ftp://${host}/pub/rinex/${year}/${doy}
  elif [ "$archive" = "kasi" ]; then
      rdir=ftp://${host}/gps/data/daily/${year}/${doy}/${yr}d
  elif [ "$archive" = "ga" ]; then
      rdir=ftp://${host}/gpsdata/${year}${doy}
  elif [ "$archive" = "ifag" ]; then
      rdit=ftp://${host}/IGS/obs/${year}/${doy}
  elif [ "$archive" = "hrao" ]; then
      rdir=ftp://${host}/rinex/${year}/${doy}
  elif [ "$archive" = "ngsest" ]; then
      rdit=ftp://${host}/cors/rinex/${year}/${doy}/${site}
  elif [ "$archive" = "ngs" ]; then
      rdir=ftp://${host}/cors/rinex/${year}/${doy}/${site}
  elif [ "$archive" = "pbo" ]; then
      rdir=ftp://${host}/pub/rinex/obs/${year}/${doy}/
  elif [ "$archive" = "geonet" ]; then
      rdir=ftp://${host}/gps/rinex/${year}/${doy}/
  elif [ "$archive" = "bkg" ]; then
      rdir=ftp://${host}//EUREF/obs/${year}/${doy}/
  elif [ "$archive" = "esa" ]; then
      rdir=ftp://${host}/gnss/data/daily/${year}/${doy}/
  fi
  echo "rdir: $rdir"
        pwd
  if [ "$sites" = "all" ]; then
            filez=*${doy}0.${yy}d.Z
            filegz=*${doy}0.${yy}d.gz


      

      if [ "$ftp_prog" = "wget" ]; then
    
        
    echo "wget -nc --http-user=anonymous --http-password=tianyf@gmail.com  ${rfile}"
    wget -nc --user=anonymous --password=tianyf@gmail.com  ${rfile}
      elif [ "$ftp_prog" = "ncftpget" ]; then
    echo "ncftpget $rfile"
    ncftpget -Z $rfile
      fi
      
     

  else


  #echo "wget -c --http-user=anonymous --http-password=tianyf@gmail.com http://garner.ucsd.edu/pub/hfiles/${year}/${doy}/higs2a.${yy}${doy}.Z"
            \rm -rf sitfil
      for site in $sites; do
    sess=0
    fileud=${site}${doy}${sess}.${yy}d
    fileuo=${site}${doy}${sess}.${yy}o
    filez=${site}${doy}${sess}.${yy}d.Z
    filegz=${site}${doy}${sess}.${yy}d.gz
    #pwd
    #exit

    if [ -s $filez ]; then
      echo "[]INFO:already exist ($filez)."
      continue
    fi
    if [ -s $filegz ]; then
      echo "[]INFO:already exist ($filegz)."
      continue
    fi

#     if [ -f ${fileud} -a ${overwrite} -eq 0 ]; then
#       echo "RINEX exists! skipping..."
#     elif [ -f ${fileuo} -a ${overwrite} -eq 0 ]; then
#       echo "RINEX exists! skipping..."
#        
#     elif [ -f ${filez} -a ${overwrite} -eq 0 ]; then
#       echo "Compact RINEX exists! skipping..."
#     else
#       echo "Downloading remote data file for site ${site} : ${file}"
#     fi

    rfile=${rdir}/${filez}
    rfile_gz=${rdi}/${filegz}
  
      #echo "wget --user=${user} --password=${passwd} -N ${rfile}"
      #wget -c --user=${user} --password=${passwd} ${rfile}

         
    if [ "$holdfile" = "" ]; then
        tmp=
    else
        
        tmp=`grep ${site}${doy}0 $holdfile`
    fi
    #echo "grep ${site}${doy}0. $holdfile"
    #echo $tmp
    if [ "$tmp" = "" ]; then
        #echo "wget -nc --http-user=anonymous --http-password=tianyf@gmail.com  ${rfile}"
                    if [ -s $srv_listing_file ]; then
                      tmp2=`grep -i "^${site}" $srv_listing_file ` #| awk '{if(NF>1){print $0}}'`
                      #echo tmp2 $tmp2
                      #echo srv_listing_file $srv_listing_file
                      if [ "$tmp2" == "" ]; then
                        echo "not available at $archive ($site${doyr}0*d.Z)!"
                        continue
                      fi
                      echo tmp2 $tmp2
                      rfile="$rdir/`cat $srv_listing_file | grep ${site} | tail -1 | awk '{print $2}'`"
                    else
                      echo "[]INFO:server list file not exist ($srv_listing_file)!"
                    fi
        pwd
        #echo "wget -nc -t 100 -T 10 --http-user=anonymous --http-password=tianyf@gmail.com  ${rfile}"
        #wget -nc -t 3 -T 20 --http-user=anonymous --http-password=tianyf@gmail.com  ${rfile}
        echo "queuing $rfile ..."
                    echo ${rfile} >> sitfile
    else
        echo "exists in db:  ($tmp). skipping.."
    fi
    #exit
      done
            if [ "$archive" == "cddis" ]; then
              wc -l sitfile
              while read line ; do
                echo $line
                pwd
                echo curl -c ~/.urs_cookies -n -L -O "$line"
                curl -c ~/.urs_cookies -n -L -O "$line"
              done < sitfile
            else
              wc -l sitfile
              #exit
              wget -nc -t 3 -T 20 --http-user=anonymous --http-password=tianyf@gmail.com -i sitfile
            fi
  fi
  doy=`expr $doy + 1`
    done
    year=`expr $year + 1`
done

echo $PATH
which doy
echo "ndays $yearStart $doys $yearEnd $doye"
ndays=`ndays $yearStart $doys $yearEnd $doye`
##days between 2012/74 and 2012/74 is 1.
echo "/export/home/tianyf/gpsf/cgps/com/upd_rnx_hold -year $yearStart -doy $doys -ndays $ndays"
#/export/home/tianyf/gpsf/cgps/com/upd_rnx_hold -year $yearStart -doy $doys -ndays $ndays
