#!/bin/sh

# Name:
#   sh_sar_auto_grid_check_status
#   

# Purpose:
#   Check the status of one auto_grid experiment.
#     Status code:
#        0  -  DEM is created
#        1  -  tiff files linked
#        2  -  aligned
#        3  -  topo files created
#        4  -  intf generated
#        5  -
#        6  -
#           -  sbas completed
#           -  raw file unzipped
#           -  

# Example:
#   

# Modifications:
#   

# Algorigthm:
#   

# Dependency:
#   


PROG=sh_sar_auto_grid_check_status

path_old=`pwd`

usage(){
  echo "[$PROG]Usage: ${PROG} "
  echo "[$PROG]Usage: e.g.,"
  echo "[$PROG]Usage:  "
}

root_expt=/sar/proc_gmtsar/auto_grid

expt=
iw=iw1

status_code=-1

while [ "$1" != "" ]; do
  case $1 in
    -e|-expt)
      expt=$2
      ;;
    -i|-iw)
      iw=$2
      ;;
    *)
      echo "[$PROG]ERROR: invalid option ($1)!!"
      usage
      exit 1
      ;;
  esac
  shift 2  
done

if [ "$expt" == "" ]; then
  echo "[$PROG]ERROR: no experiment given!!"
  exit 1
fi

iw_id=`echo $iw | awk '{print substr($1,3,1)}'`

path_expt=${root_expt}/$expt/F${iw_id}

if [ ! -d $path_expt ]; then
  status_code=EXPT_NOT_EXIST
  status_code=-1
fi

if [ -s $path_expt/topo/dem.grd ]; then
  status_code=0
fi

if [ -d $path_expt/raw ]; then
  files=`find $path_expt/raw -name "s1*.tiff"`
  if [ "$files" != "" ]; then
    status_code=1
  fi

  files=`find $path_expt/raw -name "S1_20*_ALL_F${iw_id}.SLC"`
  if [ "$files" != "" ]; then
    status_code=2
  fi

fi

if [ -s $path_expt/topo/topo_ra.grd -a -s $path_expt/topo/trans.dat ]; then
  status_code=3
fi

if [ -s $path_expt/intf.in -a -d $path_expt/intf_all ]; then
  nl_intf_in=`cat $path_expt/intf.in | wc -l`
  nl_intf_all=`find $path_expt/intf_all -maxdepth 1 -type d -name "20*_20*" | wc -l`
  if [ $nl_intf_in -eq $nl_intf_all ]; then
    status_code="4 $nl_intf_in $nl_intf_all"
  fi
fi

path_sbases=`find $path_expt -maxdepth 1 -type d -name "sbas.2.0.0001.0*" | sort | tail -1`
if [ "$path_sbases" !=  "" ]; then
  path_sbas=`find $path_expt -maxdepth 1 -type d -name "sbas.2.0.0001.0036.*" | sort | tail -1`
  if [ "$path_sbas" == "" -o ! -s $path_sbas/r4/vel_mask_ll_r4.grd ]; then
    path_sbas=`find $path_expt -maxdepth 1 -type d -name "sbas.2.0.0001.0072.*" | sort | tail -1`
  fi
  if [ "$path_sbas" == "" -o ! -s $path_sbas/r4/vel_mask_ll_r4.grd ]; then
    path_sbas=`find $path_expt -maxdepth 1 -type d -name "sbas.2.0.0001.0060.*" | sort | tail -1`
  fi
  if [ "$path_sbas" == "" -o ! -s $path_sbas/r4/vel_mask_ll_r4.grd ]; then
    path_sbas=`find $path_expt -maxdepth 1 -type d -name "sbas.2.0.0001.0120.*" | sort | tail -1`
  fi

  if [ "$path_sbas" != "" -a -s $path_sbas/r4/vel_mask_ll_r4.grd ]; then
    status_code="5 $path_sbas"
  fi
fi


#all sbas sessiones have completed
path_sbas_36=`find $path_expt -maxdepth 1 -type d -name "sbas.2.0.0001.0036*" | sort | tail -1`
path_sbas_72=`find $path_expt -maxdepth 1 -type d -name "sbas.2.0.0001.0072*" | sort | tail -1`
if [ "$path_sbas_36" != "" -a -s $path_sbas_36/r4/vel_mask_ll_r4.grd -a "$path_sbas_72" != "" -a -s $path_sbas_72/r4/vel_mask_ll_r4.grd ] ;then


path_sbases=`find $path_expt -maxdepth 1 -type d -name "sbas.2.0.0001.0*" | sort`

#echo path_sbases $path_sbases
if [ "$path_sbases" !=  "" ]; then
  is_done_step_6=y
  for path_sbas in $path_sbases; do
    if [ ! -s $path_sbas/r4/vel_mask_ll_r4.grd ]; then
      is_done_step_6=n
      break
    fi
  done
  if [ "$is_done_step_6" == "y" ]; then
    status_code="6 $path_sbases"
  fi
fi

fi

if [ "$status_code" != "" ]; then
  echo $expt $iw $status_code
fi
